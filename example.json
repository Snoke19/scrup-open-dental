{"info":{"_postman_id":"11a4a14e-b025-40a1-943f-14d0fb8782a1","name":"OpenDentalAPI","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json","_exporter_id":"14383245"},"item":[{"name":"API AccountModules","item":[{"name":"/accountmodules/1337/Aging","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/accountmodules/1337/Aging","host":["{{url_local}}{{version_api}}"],"path":["/accountmodules/1337/Aging"],"query":null},"description":"AccountModules GET Aging Version Added: 22.3.6 Gets the Aging information for a patient and their family, similarly to how it shows in the Account Module Aging grid. PatNum: Required in the URL. Returned fields are detailed below: Bal_0_30: Aged balance from 0 to 30 days old for the entire family. Bal_31_60: Aged balance from 31 to 60 days old for the entire family. Bal_61_90: Aged balance from 61 to 90 days old for the entire family. BalOver90: Aged balance over 90 days old for the entire family. Total: Total balance for entire family before insurance estimate. InsEst: Insurance Estimate for entire family. EstBal: The total remaining balance for the family after subtracting pending insurance amounts and write-offs. PatEstBal: The patient balance after subtracting pending insurance amounts and write-offs. Unearned: The total Unearned / Prepayment balance for the family. Example Request: GET /accountmodules/1337/Aging Example Response: { \"Bal_0_30\": 276.28, \"Bal_31_60\": 49.0, \"Bal_61_90\": 64.0, \"BalOver90\": 278.03, \"Total\": 667.31, \"InsEst\": 100.0, \"EstBal\": 567.31, \"PatEstBal\": 24.0, \"Unearned\": 2.46 } 200 OK 400 BadRequest (Patient is deleted, etc) 404 NotFound (Patient not found)","body":{"mode":"raw","raw":"{ \"Bal_0_30\": 276.28, \"Bal_31_60\": 49.0, \"Bal_61_90\": 64.0, \"BalOver90\": 278.03, \"Total\": 667.31, \"InsEst\": 100.0, \"EstBal\": 567.31, \"PatEstBal\": 24.0, \"Unearned\": 2.46 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/accountmodules/16/PatientBalances","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/accountmodules/16/PatientBalances","host":["{{url_local}}{{version_api}}"],"path":["/accountmodules/16/PatientBalances"],"query":null},"description":"AccountModules GET PatientBalances Version Added: 22.1 Gets the patient portion for a patient's family, similarly to how it shows in the Account Module's Select Patient grid. PatNum: Required in the URL. Returned fields are detailed below: PatNum: The patient's PatNum / family guarantor's PatNum. Name: The first and last name of the patient, or \"Entire Family\" when regarding the total patient portion of the family. Balance: The balance of the patient/entire family. Example Request: GET /accountmodules/16/PatientBalances Example Response: [ { \"PatNum\": 15, \"Name\": \"Smith, John\", \"Balance\": 140.2 }, { \"PatNum\": 16, \"Name\": \"Smith, Jane\", \"Balance\": 180.55 }, { \"PatNum\": 17, \"Name\": \"Smith, Junior\", \"Balance\": 68 }, { \"PatNum\": 18, \"Name\": \"Smith, Sis\", \"Balance\": 0 }, { \"PatNum\": 15, \"Name\": \"Entire Family\", \"Balance\": 388.75 } ]","body":{"mode":"raw","raw":"[ { \"PatNum\": 15, \"Name\": \"Smith, John\", \"Balance\": 140.2 }, { \"PatNum\": 16, \"Name\": \"Smith, Jane\", \"Balance\": 180.55 }, { \"PatNum\": 17, \"Name\": \"Smith, Junior\", \"Balance\": 68 }, { \"PatNum\": 18, \"Name\": \"Smith, Sis\", \"Balance\": 0 }, { \"PatNum\": 15, \"Name\": \"Entire Family\", \"Balance\": 388.75 } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/accountmodules/65/ServiceDateView?isFamily=true","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/accountmodules/65/ServiceDateView?isFamily=true","host":["{{url_local}}{{version_api}}"],"path":["/accountmodules/65/ServiceDateView?isFamily=true"],"query":null},"description":"AccountModules GET ServiceDateView Version Added: 22.3.32 Gets a list of all charges and credits to the account for a patient and their family, similarly to how it shows in the Service Date View. PatNum: Required in the URL. isFamily: Optional. Either \"true\" or \"false\". Return data for the entire patient's family. Default \"false\". Returned fields are detailed below: ObjectType: The type of object being returned. Either ProcedureLog, Adjustment, PaySplit, ClaimProc, PayPlanCharge, or PayPlan. Otherwise blank. PrimaryKey: Primary Key corresponding to the ObjectType. Example: procedure.ProcNum=985. Type: Further details of the ObjectType being displayed: 'Proc', 'Adj-Att.', 'PatPay Att.', 'WriteOff-Att.', 'InsPay-Att.', 'PayPlan Charge Att.', 'PatPay Att. PayPlan', 'Unallocated', 'PatPay', 'WriteOff', 'Adj', 'InsPay', 'PayPlan Credit', 'Dynamic PayPlan Credit', 'PayPlan Charge', 'PatPay PayPlan', 'Day Total', 'Overall Total'. Att. indicates Attached. ServiceDate: Date service was provided. TransDate: Date transaction was posted. Patient: patient.FName. PatNum: patient.PatNum. Reference: Description of the of the returned object. Charge: Amount that was charged. Credit: Amount that was paid. Provider: provider.Abbr. InsBal: Balance of estimated insurance payment. AcctBal: The remaining patient portion balance. Example Request: GET /accountmodules/65/ServiceDateView?isFamily=true Example Response: [ { \"ObjectType\": \"Procedure\", \"PrimaryKey\": \"43\", \"Type\": \"Proc\", \"ServiceDate\": \"2021-07-13\", \"TransDate\": \"\", \"Patient\": \"Jaime\", \"PatNum\": \"65\", \"Reference\": \"D2393:#14-MOD-C3(P)\", \"Charge\": \"235.00\", \"Credit\": \"0.00\", \"Provider\": \"DOC2\", \"InsBal\": \"0.00\", \"AcctBal\": \"216.20\" }, { \"ObjectType\": \"Adjustment\", \"PrimaryKey\": \"10\", \"Type\": \"Adj-Att.\", \"ServiceDate\": \"\", \"TransDate\": \"2021-07-13\", \"Patient\": \"Jaime\", \"PatNum\": \"65\", \"Reference\": \"Adj- Discount\", \"Charge\": \"0.00\", \"Credit\": \"18.80\", \"Provider\": \"DOC2\", \"InsBal\": \"\", \"AcctBal\": \"\" }, { \"ObjectType\": \"\", \"PrimaryKey\": \"\", \"Type\": \"Day Total\", \"ServiceDate\": \"2021-07-13\", \"TransDate\": \"\", \"Patient\": \"\", \"PatNum\": \"\", \"Reference\": \"Total for Date\", \"Charge\": \"235.00\", \"Credit\": \"18.80\", \"Provider\": \"\", \"InsBal\": \"0.00\", \"AcctBal\": \"216.20\" }, etc... ] 200 OK 400 BadRequest (Patient is deleted, etc) 404 NotFound (Patient not found)","body":{"mode":"raw","raw":"[ { \"ObjectType\": \"Procedure\", \"PrimaryKey\": \"43\", \"Type\": \"Proc\", \"ServiceDate\": \"2021-07-13\", \"TransDate\": \"\", \"Patient\": \"Jaime\", \"PatNum\": \"65\", \"Reference\": \"D2393:#14-MOD-C3(P)\", \"Charge\": \"235.00\", \"Credit\": \"0.00\", \"Provider\": \"DOC2\", \"InsBal\": \"0.00\", \"AcctBal\": \"216.20\" }, { \"ObjectType\": \"Adjustment\", \"PrimaryKey\": \"10\", \"Type\": \"Adj-Att.\", \"ServiceDate\": \"\", \"TransDate\": \"2021-07-13\", \"Patient\": \"Jaime\", \"PatNum\": \"65\", \"Reference\": \"Adj- Discount\", \"Charge\": \"0.00\", \"Credit\": \"18.80\", \"Provider\": \"DOC2\", \"InsBal\": \"\", \"AcctBal\": \"\" }, { \"ObjectType\": \"\", \"PrimaryKey\": \"\", \"Type\": \"Day Total\", \"ServiceDate\": \"2021-07-13\", \"TransDate\": \"\", \"Patient\": \"\", \"PatNum\": \"\", \"Reference\": \"Total for Date\", \"Charge\": \"235.00\", \"Credit\": \"18.80\", \"Provider\": \"\", \"InsBal\": \"0.00\", \"AcctBal\": \"216.20\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Adjustments","item":[{"name":"/adjustments?PatNum=26","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/adjustments?PatNum=26","host":["{{url_local}}{{version_api}}"],"path":["/adjustments?PatNum=26"],"query":null},"description":"Adjustments GET Version Added: 22.2.21 Gets all adjustments for a specified patient. PatNum: Required. AdjType: (Added in version 22.2.33) Optional. definition.DefNum where definition.Category=1. ProcNum: (Added in version 22.4.28) Optional. FK to procedure.ProcNum. Example Requests: GET /adjustments?PatNum=26 GET /adjustments?PatNum=42&AdjType=2 GET /adjustments?PatNum=42&ProcNum=12 Example Response: [ { \"AdjNum\": 1, \"AdjDate\": \"2022-07-02\", \"AdjAmt\": -25.0, \"PatNum\": 26, \"AdjType\": 1, \"adjType\": \"Misc Neg Adjustment\", \"ProvNum\": 1, \"AdjNote\": \"Cash Discount\", \"ProcDate\": \"2022-07-02\", \"ProcNum\": 0, \"ClinicNum\": 0 }, { \"AdjNum\": 2, \"AdjDate\": \"2022-07-18\", \"AdjAmt\": 50.0, \"PatNum\": 26, \"AdjType\": 2, \"adjType\": \"Misc Pos Adjustment\", \"ProvNum\": 1, \"AdjNote\": \"Finance Charge\", \"ProcDate\": \"2022-07-18\", \"ProcNum\": 0, \"ClinicNum\": 0 }, etc... ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"AdjNum\": 1, \"AdjDate\": \"2022-07-02\", \"AdjAmt\": -25.0, \"PatNum\": 26, \"AdjType\": 1, \"adjType\": \"Misc Neg Adjustment\", \"ProvNum\": 1, \"AdjNote\": \"Cash Discount\", \"ProcDate\": \"2022-07-02\", \"ProcNum\": 0, \"ClinicNum\": 0 }, { \"AdjNum\": 2, \"AdjDate\": \"2022-07-18\", \"AdjAmt\": 50.0, \"PatNum\": 26, \"AdjType\": 2, \"adjType\": \"Misc Pos Adjustment\", \"ProvNum\": 1, \"AdjNote\": \"Finance Charge\", \"ProcDate\": \"2022-07-18\", \"ProcNum\": 0, \"ClinicNum\": 0 }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/adjustments","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/adjustments","host":["{{url_local}}{{version_api}}"],"path":["/adjustments"],"query":null},"description":"Adjustments POST (create) Version Added: 22.2.22 Creates an adjustment for a patient. PatNum: Required. AdjType: Required. definition.DefNum where definition.Category=1, and definition.ItemValue=\"+\" or \"-\". AdjAmt: Required. Must be positive if AdjType has an ItemValue of \"+\", or negative if it has an ItemValue of \"-\". AdjDate: Required. Cannot be a future date. String in \"yyyy-MM-dd\" format. ProvNum: Optional. Default patient.PriProv. ProcNum: Optional. Only used if attaching this adjustment to a procedure. The procedure must be associated to the patient. Default 0. ClinicNum: Optional. Default patient.ClinicNum. ProcDate: Optional. String in \"yyyy-MM-dd\" format. If attaching to a procedure then this will default to the procedure's ProcDate. Otherwise, defaults to today's date. AdjNote: Optional. Note for the adjustment. Example Request: POST /adjustments { \"PatNum\": 15, \"AdjType\": 1, \"AdjAmt\": -24.99, \"AdjDate\": \"2022-07-19\", \"ProvNum\": 1, \"AdjNote\": \"Discount\", \"ProcNum\": 18, \"ProcDate\": \"2022-06-10\", \"ClinicNum\": 1 } Example Response: { \"AdjNum\": 12, \"AdjDate\": \"2022-07-19\", \"AdjAmt\": -24.99, \"PatNum\": 15, \"AdjType\": 1, \"adjType\": \"Misc Neg Adjustment\", \"ProvNum\": 1, \"AdjNote\": \"Discount\", \"ProcDate\": \"2022-06-10\", \"ProcNum\": 18, \"ClinicNum\": 1 } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PatNum\": 15, \"AdjType\": 1, \"AdjAmt\": -24.99, \"AdjDate\": \"2022-07-19\", \"ProvNum\": 1, \"AdjNote\": \"Discount\", \"ProcNum\": 18, \"ProcDate\": \"2022-06-10\", \"ClinicNum\": 1 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/adjustments/17","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/adjustments/17","host":["{{url_local}}{{version_api}}"],"path":["/adjustments/17"],"query":null},"description":"Adjustments PUT (update) Version Added: 22.2.23 Updates an adjustment. A discount plan adjustment cannot be changed to another AdjType. AdjNum: Required in the URL. AdjDate: Cannot be a future date. String in \"yyyy-MM-dd\" format. AdjAmt: Must be positive if the AdjType of the adjustment is positive, or negative if the AdjType is negative or a discount plan. AdjType: definition.DefNum where definition.Category=1, and definition.ItemValue=\"+\" or \"-\". ItemValue must be \"+\" if AdjAmt is positive, or \"-\" if AdjAmt is negative. ProvNum: ProvNum of a non-hidden provider. AdjNote: Overwrites existing note. ProcNum: Attaches the adjustment to a procedure, overwriting any previous ProcNum. The procedure's patient must match the patient on the adjustment. Updating this value will also update the adjustment's ProcDate to match the newly attached procedure's ProcDate. ClinicNum: ClinicNum of a clinic. Can be 0. Example Requests: PUT /adjustments/17 { \"AdjAmt\": -24.49 } or { \"AdjDate\": \"2022-07-21\", \"AdjAmt\": 39.50, \"AdjType\": 2, \"ProvNum\": 4, \"AdjNote\": \"Additional Charge\", \"ProcNum\": 22, \"ClinicNum\": 0 } Example Response: { \"AdjNum\": 17, \"AdjDate\": \"2022-07-21\", \"AdjAmt\": 39.5, \"PatNum\": 21, \"AdjType\": 2, \"adjType\": \"Misc Pos Adjustment\", \"ProvNum\": 4, \"AdjNote\": \"Additional Charge\", \"ProcDate\": \"2022-05-25\", \"ProcNum\": 22, \"ClinicNum\": 0 } 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"AdjAmt\": -24.49 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Allergies","item":[{"name":"/allergies?PatNum=15","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/allergies?PatNum=15","host":["{{url_local}}{{version_api}}"],"path":["/allergies?PatNum=15"],"query":null},"description":"Allergies GET Version Added: 21.1 Gets all allergies for a specified patient. PatNum: Required. Example Request: GET /allergies?PatNum=15 Example Response: [ { \"AllergyNum\": 1, \"AllergyDefNum\": 4, \"PatNum\": 15, \"defDescription\": \"Penicillin\", \"defSnomedType\": \"None\", \"Reaction\": \"Rash\", \"StatusIsActive\": \"true\", \"DateAdverseReaction\": \"2020-03-18\" }, etc... ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"AllergyNum\": 1, \"AllergyDefNum\": 4, \"PatNum\": 15, \"defDescription\": \"Penicillin\", \"defSnomedType\": \"None\", \"Reaction\": \"Rash\", \"StatusIsActive\": \"true\", \"DateAdverseReaction\": \"2020-03-18\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/allergies","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/allergies","host":["{{url_local}}{{version_api}}"],"path":["/allergies"],"query":null},"description":"Allergies POST Version Added: 21.3 Attaches an AllergyDef to a patient. AllergyDefNum: Rarely used. Just use defDescription instead, which handles insertion of AllergyDef automatically. PatNum: Required. defDescription: Required unless you choose to use AllergyDefNum. Reaction: Optional. String describing the adverse reaction. StatusIsActive: Optional. Either \"true\" or \"false\". Default \"true\". DateAdverseReaction: Optional. String in \"yyyy-MM-dd\" format. Default \"0001-01-01\". Example Requests: POST /allergies { \"PatNum\": 12, \"AllergyDefNum\": \"243\" } or { \"PatNum\": 12, \"defDescription\": \"Penicillin\", \"Reaction\": \"Hives\", \"DateAdverseReaction\": \"2019-09-23\" } Example Responses: 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PatNum\": 12, \"AllergyDefNum\": \"243\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/allergies/12","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/allergies/12","host":["{{url_local}}{{version_api}}"],"path":["/allergies/12"],"query":null},"description":"Allergies PUT Version Added: 22.1 Updates the allergy associated with a patient. AllergyNum: Required in the URL. Reaction: String describing the adverse reaction. DateAdverseReaction: String in \"yyyy-MM-dd\" format. StatusIsActive: Either \"true\" or \"false\". Example Request: PUT /allergies/12 { \"Reaction\": \"Rash\", \"DateAdverseReaction\": \"2022-04-13\", \"StatusIsActive\": \"true\" } Example Responses: 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"Reaction\": \"Rash\", \"DateAdverseReaction\": \"2022-04-13\", \"StatusIsActive\": \"true\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/allergies/13","item":null,"description":null,"request":{"method":"DELETE","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/allergies/13","host":["{{url_local}}{{version_api}}"],"path":["/allergies/13"],"query":null},"description":"Allergies DELETE Version Added: 22.1 Deletes an allergy associated with a patient. AllergyNum: Required in the URL. Example Requests: DELETE /allergies/13 Example Responses: 200 OK 404 NotFound (with explanation)","body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API AllergyDefs","item":[{"name":"/allergydefs","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/allergydefs","host":["{{url_local}}{{version_api}}"],"path":["/allergydefs"],"query":null},"description":"AllergyDefs GET Version Added: 21.3 Gets a list of all allergies that that are assigned to patients. Rarely used. Usually just use Allergies GET and POST. Example Requests: GET /allergydefs GET /allergydefs?Offset=200 Example Response: [ { \"AllergyDefNum\": 44, \"Description \": \"Allergy - Phentermine\", \"IsHidden\": \"false\", \"DateTStamp\": \"2020-07-17 02:45:38\", \"SnomedType\": \"\", \"MedicationNum\": 0, \"UniiCode\": \"\", }, { \"AllergyDefNum\": 45, \"Description \": \"Allergy - Sudogest\", \"IsHidden\": \"false\", \"DateTStamp\": \"2015-12-10 05:40:32\", \"SnomedType\": \"\", \"MedicationNum\": 0, \"UniiCode\": \"\", }, etc... ]","body":{"mode":"raw","raw":"[ { \"AllergyDefNum\": 44, \"Description \": \"Allergy - Phentermine\", \"IsHidden\": \"false\", \"DateTStamp\": \"2020-07-17 02:45:38\", \"SnomedType\": \"\", \"MedicationNum\": 0, \"UniiCode\": \"\", }, { \"AllergyDefNum\": 45, \"Description \": \"Allergy - Sudogest\", \"IsHidden\": \"false\", \"DateTStamp\": \"2015-12-10 05:40:32\", \"SnomedType\": \"\", \"MedicationNum\": 0, \"UniiCode\": \"\", }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/allergydefs","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/allergydefs","host":["{{url_local}}{{version_api}}"],"path":["/allergydefs"],"query":null},"description":"AllergyDefs POST Version Added: 21.3 Inserts a single AllergyDef using a unique Description. Rarely used. Usually just use Allergies GET and POST. Example Request: POST /allergydefs { \"Description\": \"Tylenol\" } Example Response: 201 Created 400 BadRequest \"Description is required\" or \"An AllergyDef with that name already exists\".","body":{"mode":"raw","raw":"{ \"Description\": \"Tylenol\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Appointments","item":[{"name":"/appointments/18","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/appointments/18","host":["{{url_local}}{{version_api}}"],"path":["/appointments/18"],"query":null},"description":"Appointments GET (single) Version Added: 21.1 Gets a single appointment. AptNum: Required in URL. Example Request: GET /appointments/18 Example Response: { \"serverDateTime\":\"2021-05-04 09:32:45\", \"AptNum\": 18, \"PatNum\": 17, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XXXX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 3, \"Note\": \"\", \"ProvNum\": 1, \"provAbbr\": \"DOC1\", \"ProvHyg\": 0, \"AptDateTime\": \"2020-07-31 08:30:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"false\", \"ProcDescript\": \"Seal, Seal\", \"ClinicNum\": 0, \"IsHygiene\": \"false\", \"DateTStamp\":\"2021-05-03 08:30:12\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 0, \"SecDateTEntry\":\"2020-07-04 09:12:05\", \"Priority\": \"Normal\", \"PatternSecondary\": \"//////X/\" } 200 OK 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"serverDateTime\":\"2021-05-04 09:32:45\", \"AptNum\": 18, \"PatNum\": 17, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XXXX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 3, \"Note\": \"\", \"ProvNum\": 1, \"provAbbr\": \"DOC1\", \"ProvHyg\": 0, \"AptDateTime\": \"2020-07-31 08:30:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"false\", \"ProcDescript\": \"Seal, Seal\", \"ClinicNum\": 0, \"IsHygiene\": \"false\", \"DateTStamp\":\"2021-05-03 08:30:12\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 0, \"SecDateTEntry\":\"2020-07-04 09:12:05\", \"Priority\": \"Normal\", \"PatternSecondary\": \"//////X/\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/appointments?Offset=400","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/appointments?Offset=400","host":["{{url_local}}{{version_api}}"],"path":["/appointments?Offset=400"],"query":null},"description":"Appointments GET (multiple) Version Added: 21.1 Parameters: All optional. PatNum: (Added in version 21.4) Filter responses by PatNum. AptStatus: (Added in version 22.4.28) Filter responses by AptStatus. Op: (Added in version 23.2.27) Filter responses by Op. date: Search for a single day in \"yyyy-MM-dd\" format. dateStart, dateEnd: Search for a date range, inclusive of both dates, in \"yyyy-MM-dd\" format. ClinicNum: ClinicNum of a clinic. Leave blank if not using clinics, or if results for all clinics are desired. Use 0 to filter for appointments not attached to clinics. DateTStamp: Only include appointments with a DateTStamp altered after the specified date and time. This provides a good way for you to keep a synchronized copy of appointments. Store serverDateTime (added in 21.2) that gets returned, and use it to run the next GET. Example Requests: GET /appointments?Offset=400 GET /appointments?date=2020-07-30&Offset=200 GET /appointments?dateStart=2020-07-30&dateEnd=2020-08-02&DateTStamp=2020-07-30&ClinicNum=3 GET /appointments?PatNum=20 Example Response: [ { \"serverDateTime\":\"2021-05-04 09:32:45\", \"AptNum\": 4, \"PatNum\": 20, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XXXX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 2, \"Note\": \"\", \"ProvNum\": 3, \"provAbbr\": \"DOC2\", \"ProvHyg\": 0, \"AptDateTime\": \"2020-07-31 09:00:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"false\", \"ProcDescript\": \"Ex, PA\", \"ClinicNum\": 0, \"IsHygiene\": \"false\", \"DateTStamp\":\"2021-05-03 08:30:12\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 0, \"SecDateTEntry\":\"2020-07-04 09:12:05\", \"Priority\": \"Normal\", \"PatternSecondary\": \"////////\" }, { \"serverDateTime\":\"2021-05-04 09:32:45\", \"AptNum\": 3, \"PatNum\": 21, \"AptStatus\": \"Complete\", \"Pattern\": \"//XXXXXX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 6, \"Note\": \"\", \"ProvNum\": 3, \"provAbbr\": \"DOC2\", \"ProvHyg\": 4, \"AptDateTime\": \"2020-07-31 09:00:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"false\", \"ProcDescript\": \"Ex\", \"ClinicNum\": 0, \"IsHygiene\": \"true\", \"DateTStamp\":\"2021-05-03 08:30:12\", \"DateTimeArrived\": \"2020-07-31 08:52:31\", \"DateTimeSeated\": \"2020-07-31 09:01:15\", \"DateTimeDismissed\": \"2020-07-31 09:55:42\", \"DateTimeAskedToArrive\": \"2020-07-31 09:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 1, \"SecDateTEntry\":\"2020-07-04 09:12:05\", \"Priority\": \"Normal\", \"PatternSecondary\": \"//////////\" } ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"serverDateTime\":\"2021-05-04 09:32:45\", \"AptNum\": 4, \"PatNum\": 20, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XXXX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 2, \"Note\": \"\", \"ProvNum\": 3, \"provAbbr\": \"DOC2\", \"ProvHyg\": 0, \"AptDateTime\": \"2020-07-31 09:00:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"false\", \"ProcDescript\": \"Ex, PA\", \"ClinicNum\": 0, \"IsHygiene\": \"false\", \"DateTStamp\":\"2021-05-03 08:30:12\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 0, \"SecDateTEntry\":\"2020-07-04 09:12:05\", \"Priority\": \"Normal\", \"PatternSecondary\": \"////////\" }, { \"serverDateTime\":\"2021-05-04 09:32:45\", \"AptNum\": 3, \"PatNum\": 21, \"AptStatus\": \"Complete\", \"Pattern\": \"//XXXXXX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 6, \"Note\": \"\", \"ProvNum\": 3, \"provAbbr\": \"DOC2\", \"ProvHyg\": 4, \"AptDateTime\": \"2020-07-31 09:00:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"false\", \"ProcDescript\": \"Ex\", \"ClinicNum\": 0, \"IsHygiene\": \"true\", \"DateTStamp\":\"2021-05-03 08:30:12\", \"DateTimeArrived\": \"2020-07-31 08:52:31\", \"DateTimeSeated\": \"2020-07-31 09:01:15\", \"DateTimeDismissed\": \"2020-07-31 09:55:42\", \"DateTimeAskedToArrive\": \"2020-07-31 09:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 1, \"SecDateTEntry\":\"2020-07-04 09:12:05\", \"Priority\": \"Normal\", \"PatternSecondary\": \"//////////\" } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/appointments/ASAP","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/appointments/ASAP","host":["{{url_local}}{{version_api}}"],"path":["/appointments/ASAP"],"query":null},"description":"Appointments GET ASAP Version Added: 21.1 Gets the ASAP list. An appointment is considered to be on the ASAP list if the Priority field is set to ASAP instead of Normal. Parameters: ClinicNum: Required only if Clinics are enabled. Use 0 to filter for appointments not attached to clinics. ProvNum: Optional. ProvNum of a provider. Example Requests: GET /appointments/ASAP GET /appointments/ASAP?ClinicNum=2 GET /appointments/ASAP?Offset=200 Example Response: [ { \"serverDateTime\":\"2021-05-04 09:32:45\", \"AptNum\": 4, \"PatNum\": 20, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XXXX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 2, \"Note\": \"\", \"ProvNum\": 3, \"provAbbr\": \"DOC2\", \"ProvHyg\": 0, \"AptDateTime\": \"2020-07-31 09:00:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"false\", \"ProcDescript\": \"Ex, PA\", \"ClinicNum\": 0, \"IsHygiene\": \"false\", \"DateTStamp\":\"2021-05-03 08:30:12\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 1, \"SecDateTEntry\":\"2020-07-04 09:12:05\", \"Priority\": \"ASAP\", \"PatternSecondary\": \"////////\" }, { \"serverDateTime\":\"2021-05-04 09:32:45\", \"AptNum\": 3, \"PatNum\": 21, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XXXXXX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 6, \"Note\": \"\", \"ProvNum\": 3, \"provAbbr\": \"DOC2\", \"ProvHyg\": 4, \"AptDateTime\": \"2020-07-31 09:00:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"false\", \"ProcDescript\": \"Ex\", \"ClinicNum\": 0, \"IsHygiene\": \"true\", \"DateTStamp\":\"2021-05-03 08:30:12\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 0, \"SecDateTEntry\":\"2020-07-04 09:12:05\", \"Priority\": \"ASAP\", \"PatternSecondary\": \"//////////\" } ] 200 OK 400 BadRequest (with explanation)","body":{"mode":"raw","raw":"[ { \"serverDateTime\":\"2021-05-04 09:32:45\", \"AptNum\": 4, \"PatNum\": 20, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XXXX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 2, \"Note\": \"\", \"ProvNum\": 3, \"provAbbr\": \"DOC2\", \"ProvHyg\": 0, \"AptDateTime\": \"2020-07-31 09:00:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"false\", \"ProcDescript\": \"Ex, PA\", \"ClinicNum\": 0, \"IsHygiene\": \"false\", \"DateTStamp\":\"2021-05-03 08:30:12\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 1, \"SecDateTEntry\":\"2020-07-04 09:12:05\", \"Priority\": \"ASAP\", \"PatternSecondary\": \"////////\" }, { \"serverDateTime\":\"2021-05-04 09:32:45\", \"AptNum\": 3, \"PatNum\": 21, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XXXXXX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 6, \"Note\": \"\", \"ProvNum\": 3, \"provAbbr\": \"DOC2\", \"ProvHyg\": 4, \"AptDateTime\": \"2020-07-31 09:00:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"false\", \"ProcDescript\": \"Ex\", \"ClinicNum\": 0, \"IsHygiene\": \"true\", \"DateTStamp\":\"2021-05-03 08:30:12\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 0, \"SecDateTEntry\":\"2020-07-04 09:12:05\", \"Priority\": \"ASAP\", \"PatternSecondary\": \"//////////\" } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/appointments/Slots?date=2021-02-15","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/appointments/Slots?date=2021-02-15","host":["{{url_local}}{{version_api}}"],"path":["/appointments/Slots?date=2021-02-15"],"query":null},"description":"Appointments GET Slots Version Added: 21.1 For simple dental office setups. See also Schedules GET. This is closer to how search behaves from within Open Dental instead of WebSched. This requires no advanced setup. It looks at open schedule times, whether the schedules are attached to a provider or an operatory. There are, however, some differences between this and the Search in Open Dental. This returns entire open slots instead of a series of suggested appointment times or the first appointment time for each day. It also currently searches by entire appointment length instead of the XXX provider times on appointments. For providers assigned to a single operatory, the results will be the same as what a person would see if looking at the Appointments Module. If a provider has existing appointments in multiple operatories, it considers all of them as a whole and only returns slots that are available in all operatories for that provider simultaneously. Most users will specify a ProvNum and an OpNum. Parameters: All optional. date: Search for a single day in \"yyyy-MM-dd\" format. Must be today or a future date. Default is the next 14 days. dateStart, dateEnd: Search for a date range, inclusive of both dates, in \"yyyy-MM-dd\" format. lengthMinutes: Ignores slots that are shorter than the supplied number of minutes. ProvNum: ProvNum of a provider. Defaults to the Practice Default Provider. OpNum: (Added in version 22.1) FK to operatory.OperatoryNum that the provider is assigned to. Example Requests: GET /appointments/Slots?date=2021-02-15 GET /appointments/Slots?date=2022-03-30&ProvNum=50&OpNum=16 GET /appointments/Slots?ProvNum=1&OpNum=18&dateStart=2022-03-28&dateEnd=2022-04-01 Example Responses: [ { \"DateTimeStart\": \"2021-02-15 08:00:00\", \"DateTimeEnd\": \"2021-02-15 10:30:00\", \"ProvNum\": 1, \"OpNum\": 1 }, { \"DateTimeStart\": \"2021-02-15 13:00:00\", \"DateTimeEnd\": \"2021-02-15 15:00:00\", \"ProvNum\": 1, \"OpNum\": 1 }, etc... ] or [ { \"DateTimeStart\": \"2022-03-30 07:00:00\", \"DateTimeEnd\": \"2022-03-30 08:20:00\", \"ProvNum\": 50, \"OpNum\": 16 }, { \"DateTimeStart\": \"2022-03-30 09:00:00\", \"DateTimeEnd\": \"2022-03-30 10:00:00\", \"ProvNum\": 50, \"OpNum\": 16 }, { \"DateTimeStart\": \"2022-03-30 12:30:00\", \"DateTimeEnd\": \"2022-03-30 13:20:00\", \"ProvNum\": 50, \"OpNum\": 16 }, { \"DateTimeStart\": \"2022-03-30 13:50:00\", \"DateTimeEnd\": \"2022-03-30 15:00:00\", \"ProvNum\": 50, \"OpNum\": 16 } ] or [ { \"DateTimeStart\": \"2022-03-28 08:00:00\", \"DateTimeEnd\": \"2022-03-28 11:00:00\", \"ProvNum\": 1, \"OpNum\": 18 }, { \"DateTimeStart\": \"2022-03-29 08:00:00\", \"DateTimeEnd\": \"2022-03-29 08:10:00\", \"ProvNum\": 1, \"OpNum\": 18 }, { \"DateTimeStart\": \"2022-03-29 08:50:00\", \"DateTimeEnd\": \"2022-03-29 11:00:00\", \"ProvNum\": 1, \"OpNum\": 18 }, { \"DateTimeStart\": \"2022-03-30 08:00:00\", \"DateTimeEnd\": \"2022-03-30 09:20:00\", \"ProvNum\": 1, \"OpNum\": 18 }, { \"DateTimeStart\": \"2022-03-30 09:30:00\", \"DateTimeEnd\": \"2022-03-30 11:00:00\", \"ProvNum\": 1, \"OpNum\": 18 }, { \"DateTimeStart\": \"2022-03-31 08:00:00\", \"DateTimeEnd\": \"2022-03-31 11:00:00\", \"ProvNum\": 1, \"OpNum\": 18 }, { \"DateTimeStart\": \"2022-04-01 08:00:00\", \"DateTimeEnd\": \"2022-04-01 11:00:00\", \"ProvNum\": 1, \"OpNum\": 18 } ] 200 OK 400 BadRequest (with explanation)","body":{"mode":"raw","raw":"[ { \"DateTimeStart\": \"2021-02-15 08:00:00\", \"DateTimeEnd\": \"2021-02-15 10:30:00\", \"ProvNum\": 1, \"OpNum\": 1 }, { \"DateTimeStart\": \"2021-02-15 13:00:00\", \"DateTimeEnd\": \"2021-02-15 15:00:00\", \"ProvNum\": 1, \"OpNum\": 1 }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/appointments/SlotsWebSched?dateStart=2021-02-15&amp;dateEnd=2021-02-15&amp;defNumApptType=326","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/appointments/SlotsWebSched?dateStart=2021-02-15&amp;dateEnd=2021-02-15&amp;defNumApptType=326","host":["{{url_local}}{{version_api}}"],"path":["/appointments/SlotsWebSched?dateStart=2021-02-15&amp;dateEnd=2021-02-15&amp;defNumApptType=326"],"query":null},"description":"Appointments GET SlotsWebSched Version Added: 21.1 Rarely used. Probably just use Appointments GET Slots instead. Offices must be subscribed to WebSched eServices. This gets slots according to the existing logic used for WebSched existing patient or new patient. Customer must first have gone to Setup WebSched (Existing Patient or New Patient) and done all the setup, including creating Appointment Types and linking Appointment Types to WebSched. This all requires a fair amount of setup on the customer's end, but that restriction is usually preferred when patients are making their own appointments. After calling this method, use Appointments POST WebSched to create a new WebSched appointment. date: Search for a single day in \"yyyy-MM-dd\" format. dateStart, dateEnd: Search for a date range, inclusive of both dates, in \"yyyy-MM-dd\" format. If no dates at all are supplied, the default is the next two weeks. ClinicNum: Required if clinics are enabled. FK to clinic.ClinicNum. defNumApptType: Optional. definition.DefNum where definition.Category=42 (NewPat) or 51 (ExistingPat). There must also be an appointmenttype linked to that DefNum and it must be set to be used in WebSched. isNewPatient: Optional. Defaults to false. Should match the kind of defNumApptType that you use. Example Request: GET /appointments/SlotsWebSched?dateStart=2021-02-15&dateEnd=2021-02-15&defNumApptType=326 Example Response: [ { \"DateTimeStart\": \"2021-02-15 08:00:00\", \"DateTimeEnd\": \"2021-02-15 08:30:00\", \"ProvNum\": 1, \"OpNum\": 1 }, { \"DateTimeStart\": \"2021-02-15 08:30:00\", \"DateTimeEnd\": \"2021-02-15 09:00:00\", \"ProvNum\": 1, \"OpNum\": 1 }, { \"DateTimeStart\": \"2021-02-15 09:00:00\", \"DateTimeEnd\": \"2021-02-15 09:30:00\", \"ProvNum\": 1, \"OpNum\": 1 }, etc... ]","body":{"mode":"raw","raw":"[ { \"DateTimeStart\": \"2021-02-15 08:00:00\", \"DateTimeEnd\": \"2021-02-15 08:30:00\", \"ProvNum\": 1, \"OpNum\": 1 }, { \"DateTimeStart\": \"2021-02-15 08:30:00\", \"DateTimeEnd\": \"2021-02-15 09:00:00\", \"ProvNum\": 1, \"OpNum\": 1 }, { \"DateTimeStart\": \"2021-02-15 09:00:00\", \"DateTimeEnd\": \"2021-02-15 09:30:00\", \"ProvNum\": 1, \"OpNum\": 1 }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/appointments/WebSched","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/appointments/WebSched","host":["{{url_local}}{{version_api}}"],"path":["/appointments/WebSched"],"query":null},"description":"Appointments GET WebSched Version Added: 21.3 Rarely used. Probably just use Appointments GET (multiple) instead. Gets a list of all appointments, indicating which were made through the WebSched service. This is displayed in the eServiceLogType field as either \"Recall\", \"NewPat\", \"ExistingPat\", or \"ASAP\". Appointments not made through WebSched will have an eServiceLogType of \"None\". Parameters: All optional. date: Search for a single day in \"yyyy-MM-dd\" format. dateStart, dateEnd: Search for a date range, inclusive of both dates, in \"yyyy-MM-dd\" format. DateTStamp: String in \"yyyy-MM-dd HH:mm:ss\" format. Only returns appointments with a DateTStamp altered after the specified date and time. ClinicNum: ClinicNum of a clinic. Example Requests: GET /appointments/WebSched GET /appointments/WebSched?date=2021-02-15 GET /appointments/WebSched?date=2021-02-15&Offset=200 Example Response: [ { \"AptNum\": 3, \"PatNum\": 21, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XXXXXX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 6, \"Note\": \"\", \"ProvNum\": 3, \"provAbbr\": \"DOC2\", \"ProvHyg\": 4, \"AptDateTime\": \"2021-07-31 09:00:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"ProcDescript\": \"Ex\", \"ClinicNum\": 0, \"IsHygiene\": \"True\", \"DateTStamp\":\"2021-08-03 08:30:12\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"AppointmentTypeNum\": 0, \"eServiceLogType\": \"NewPat\", \"serverDateTime\":\"2021-08-04 09:32:45\" }, { \"AptNum\": 35, \"PatNum\": 37, \"AptStatus\": \"Scheduled\", \"Pattern\": \"/XXXX/\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 5, \"Note\": \"\", \"ProvNum\": 3, \"provAbbr\": \"DOC2\", \"ProvHyg\": 7, \"AptDateTime\": \"2021-10-18 13:30:00\", \"NextAptNum\": 0, \"UnschedStatus\": 92, \"unschedStatus\": \"Appointment Scheduled\", \"ProcDescript\": \"\", \"ClinicNum\": 2, \"IsHygiene\": \"False\", \"DateTStamp\": \"2021-08-23 10:52:22\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"AppointmentTypeNum\": 1, \"eServiceLogType\": \"None\", \"serverDateTime\": \"2021-09-13 09:09:37\" } ] 200 OK 400 BadRequest (with explanation)","body":{"mode":"raw","raw":"[ { \"AptNum\": 3, \"PatNum\": 21, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XXXXXX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 6, \"Note\": \"\", \"ProvNum\": 3, \"provAbbr\": \"DOC2\", \"ProvHyg\": 4, \"AptDateTime\": \"2021-07-31 09:00:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"ProcDescript\": \"Ex\", \"ClinicNum\": 0, \"IsHygiene\": \"True\", \"DateTStamp\":\"2021-08-03 08:30:12\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"AppointmentTypeNum\": 0, \"eServiceLogType\": \"NewPat\", \"serverDateTime\":\"2021-08-04 09:32:45\" }, { \"AptNum\": 35, \"PatNum\": 37, \"AptStatus\": \"Scheduled\", \"Pattern\": \"/XXXX/\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 5, \"Note\": \"\", \"ProvNum\": 3, \"provAbbr\": \"DOC2\", \"ProvHyg\": 7, \"AptDateTime\": \"2021-10-18 13:30:00\", \"NextAptNum\": 0, \"UnschedStatus\": 92, \"unschedStatus\": \"Appointment Scheduled\", \"ProcDescript\": \"\", \"ClinicNum\": 2, \"IsHygiene\": \"False\", \"DateTStamp\": \"2021-08-23 10:52:22\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"AppointmentTypeNum\": 1, \"eServiceLogType\": \"None\", \"serverDateTime\": \"2021-09-13 09:09:37\" } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/appointments","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/appointments","host":["{{url_local}}{{version_api}}"],"path":["/appointments"],"query":null},"description":"Appointments POST (create) Version Added: 21.1 Creates an appointment for a patient. PatNum: Required. Op: Required. AptDateTime: Required. String in \"yyyy-MM-dd HH:mm:ss\" format. Use Appointments GET Slots to find available times. AptStatus: Optional. Either \"Scheduled\", \"Complete\", \"UnschedList\", \"Planned\", or (rarely used) \"PtNote\", \"PtNoteCompleted\". Default \"Scheduled\". Pattern: Optional. Time pattern in 5 minute increments. A string consisting of 'X' and '/' characters only. Patterns exceeding 9 hours will be trimmed down to 9 hours. Default \"/XX/\" (20 minutes). Confirmed: Optional. definition.DefNum where definition.Category=2. Default is the first definition in that Category. Note: Optional. Default blank. ProvNum: Optional. Default patient.PriProv, if they have one set. Otherwise, default is the dental office's default provider. ProvHyg: Optional. Default 0. ClinicNum: Optional. Default patient.ClinicNum. IsHygiene: Optional. Default \"false\". IsNewPatient: (Added in version 21.3) Optional. Either \"true\" or \"false\". Default \"false\". If \"true\", and the patient has no completed procedures, then patient.DateFirstVisit will be set to this appointment's AptDateTime. Priority: (Added in version 22.1) Optional. Either \"Normal\" or \"ASAP\". Default \"Normal\". AppointmentTypeNum: (Added in version 22.1) Optional. FK to appointmenttype.AppointmentTypeNum. Default 0 (None). Follows the same logic for adding attached procedures, pattern, and color as in Open Dental. The pattern will only be applied if Pattern is not specified in the request. colorOverride: (Added in version 22.3.9) Optional. Must be a color in \"R,G,B\" format. Default is (0,0,0), unless an AppointmentTypeNum was supplied, in which it will instead default to the AppointmentType's color. PatternSecondary: (Added in version 23.3.17) Optional. Time pattern in 5 minute increments. A string consisting of 'X' and '/' characters only. Must match the length of Pattern. Defaults to a string consisting of \"/\" that spans the length of Pattern. Example Request: POST /appointments { \"PatNum\": 21, \"Op\": 6, \"AptDateTime\": \"2020-07-31 09:00:00\", \"colorOverride\": \"100,0,255\" } Example Response: { \"AptNum\": 3, \"PatNum\": 21, \"AptStatus\": \"Scheduled\", \"Pattern\": \"/XX/\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 6, \"Note\": \"\", \"ProvNum\": 3, \"provAbbr\": \"DOC2\", \"ProvHyg\": 0, \"AptDateTime\": \"2020-07-31 09:00:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"false\", \"ProcDescript\": \"\", \"ClinicNum\": 0, \"IsHygiene\": \"false\" \"DateTStamp\": \"2020-07-26 07:43:29\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"100,0,255\", \"AppointmentTypeNum\": 0, \"SecDateTEntry\":\"2020-07-04 09:12:05\", \"Priority\": \"Normal\", \"PatternSecondary\": \"////\" } 201 Created (Header \"location\": https://api.opendental.com/api/v1/appointments/3) 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PatNum\": 21, \"Op\": 6, \"AptDateTime\": \"2020-07-31 09:00:00\", \"colorOverride\": \"100,0,255\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/appointments/Planned","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/appointments/Planned","host":["{{url_local}}{{version_api}}"],"path":["/appointments/Planned"],"query":null},"description":"Appointments POST Planned Version Added: 22.2.31 Creates a planned appointment for a patient, which appears in the Planned Appts tab in the Chart Module. See Planned Appointments for more detailed information. Most dental offices require their appointments to contain procedures. However, if the ApptsRequireProc preference is not enabled, then this Planned Appointment's pattern will be set from the AppointmentWithoutProcsDefaultLength preference, if it is set. Procedures are attached to the Planned appointment by either including an AppointmentTypeNum or an array of procNums. Obtain the ProcNums of the procedures being attached to the Planned appointment with ProcedureLogs GET. PatNum: Required. AppointmentTypeNum: This or procNums is required to add procedures. FK to appointmenttype.AppointmentTypeNum. Follows the same logic for adding attached procedures, pattern, and color as in Open Dental. The pattern will only be applied if Pattern is not specified in the request. procNums: This or AppointmentTypeNum is required to add procedures. An array of ProcNums in [1,2,3] format. The pattern will be derived from the length of all procedures if Pattern is not specified in the request. Repeated ProcNums will be silently ignored. Pattern: Optional. Time pattern in 5 minute increments. A string consisting of 'X' and '/' characters only. Patterns exceeding 9 hours will be trimmed down to 9 hours. Default \"/XX/\" (20 minutes). Confirmed: Optional. definition.DefNum where definition.Category=2. Default is the first definition in that Category. Note: Optional. Default blank. ProvNum: Optional. Defaults to patient.PriProv, if it is set, or the dental office's default provider. ProvHyg: Optional. Default 0. ClinicNum: Optional. Defaults to patient.ClinicNum. IsHygiene: Optional. Either \"true\" or \"false\". Default \"false\". IsNewPatient: Optional. Either \"true\" or \"false\". Default \"false\". Priority: Optional. Either \"Normal\" or \"ASAP\". Default \"Normal\". PatternSecondary: (Added in version 23.3.17) Optional. Time pattern in 5 minute increments. A string consisting of 'X' and '/' characters only. Must match the length of Pattern. Defaults to a string consisting of \"/\" that spans the length of Pattern. Example Requests: POST /appointments/Planned { \"PatNum\": 72, \"AppointmentTypeNum\": 12 } or { \"PatNum\": 72, \"procNums\": [880,881,882,891,893] } or { \"PatNum\": 72, \"Pattern\": \"//XXXXXX//\", \"PatternSecondary\": \"////////XX\", \"Confirmed\": 19, \"Note\": \"Planned Appointment, Schedule for sometime in June 2022\", \"ProvNum\": 10, \"ProvHyg\": 0, \"IsNewPatient\": \"false\", \"ClinicNum\": 3, \"IsHygiene\": \"false\", \"Priority\": \"Normal\", \"AppointmentTypeNum\": 8 } Example Response: { \"AptNum\": 414, \"PatNum\": 72, \"AptStatus\": \"Planned\", \"Pattern\": \"//XXXXXX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 0, \"Note\": \"Planned Appointment, Schedule for sometime in June 2022\", \"ProvNum\": 10, \"provAbbr\": \"SMITH\", \"ProvHyg\": 0, \"AptDateTime\": \"2022-06-14 09:00:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"false\", \"ProcDescript\": \"PerEx, 2BW, Pano\", \"ClinicNum\": 3, \"IsHygiene\": \"false\", \"DateTStamp\": \"2022-05-18 11:52:41\", \"DateTimeArrived\": \"2022-06-14 00:00:00\", \"DateTimeSeated\": \"2022-06-14 00:00:00\", \"DateTimeDismissed\": \"2022-06-14 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"180,30,150\", \"AppointmentTypeNum\": 8, \"SecDateTEntry\":\"2021-07-04 09:12:05\", \"Priority\": \"Normal\", \"PatternSecondary\": \"////////XX\" } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PatNum\": 72, \"AppointmentTypeNum\": 12 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/appointments/SchedulePlanned","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/appointments/SchedulePlanned","host":["{{url_local}}{{version_api}}"],"path":["/appointments/SchedulePlanned"],"query":null},"description":"Appointments POST SchedulePlanned Version Added: 22.2 Creates a new Scheduled appointment from an existing Planned Appointment. Does not modify or delete the original planned appointment. To reschedule a broken appointment, use Appointments PUT (update) to update the Status, AptDateTime, and Op of the broken appointment. Prior to running this method, obtain the AptNum of the Planned Appointment with ChartModules GET PlannedAppt, Appointments GET (single or multiple), or a Queries PUT ShortQuery. Then use Appointments GET Slots to get the specific timeslots available for the Planned Appointment. The ProvNum, OpNum, and time stamps returned from that method are used below. AptNum: Required. AptNum of an appointment with an AptStatus of \"Planned\". AptDateTime: Required. String in \"yyyy-MM-dd HH:mm:ss\". Use Appointments GET Slots to find available times. ProvNum: Required. The ProvNum of the appointment timeslot. Op: Required. The OpNum of the appointment timeslot. Confirmed: Optional. definition.DefNum where definition.Category=2. Note: Optional. Will overwrite any existing note. Example Request: POST /appointments/SchedulePlanned { \"AptNum\": 413, \"AptDateTime\": \"2022-06-14 09:00:00\", \"ProvNum\": 10, \"Op\": 1 } Example Response: { \"AptNum\": 414, \"PatNum\": 72, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XX\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 1, \"Note\": \"Planned Appointment, Schedule for sometime in June 2022\", \"ProvNum\": 10, \"provAbbr\": \"SMITH\", \"ProvHyg\": 0, \"AptDateTime\": \"2022-06-14 09:00:00\", \"NextAptNum\": 413, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"false\", \"ProcDescript\": \"PerEx, 2BW, Pano\", \"ClinicNum\": 3, \"IsHygiene\": \"false\", \"DateTStamp\": \"2022-05-18 11:52:41\", \"DateTimeArrived\": \"2022-06-14 00:00:00\", \"DateTimeSeated\": \"2022-06-14 00:00:00\", \"DateTimeDismissed\": \"2022-06-14 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 0, \"SecDateTEntry\":\"2021-08-04 11:12:05\", \"Priority\": \"Normal\", \"PatternSecondary\": \"////\" } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"AptNum\": 413, \"AptDateTime\": \"2022-06-14 09:00:00\", \"ProvNum\": 10, \"Op\": 1 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/appointments/WebSched","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/appointments/WebSched","host":["{{url_local}}{{version_api}}"],"path":["/appointments/WebSched"],"query":null},"description":"Appointments POST WebSched Version Added: 21.3 See Appointments GET WebSched See Appointments GET SlotsWebSched Rarely used. Probably just use Appointments POST (create) instead. Offices must be subscribed to WebSched eServices. Creates a WebSched appointment. This appointment is similar to appointments made through Open Dental's WebSched eServices, which the dental office must have set up. Prior to running this method, use Appointments GET SlotsWebSched to get the specific timeslots available for WebSched appointments. The ProvNum, OpNum, and time stamps returned from that method are used below. PatNum: Required. DateTimeStart: Required. The start time of the appointment timeslot in \"yyyy-MM-dd HH:mm:ss\" format. DateTimeEnd: Required. The end time of the appointment timeslot in \"yyyy-MM-dd HH:mm:ss\" format. ProvNum: Required. The ProvNum of the appointment timeslot. OpNum: Required. The OpNum of the appointment timeslot. defNumApptType: Required. This must the be the same defNumApptType used to find the timeslot. Example Request: POST /appointments/WebSched { \"PatNum\": 21, \"dateTimeStart\": \"2021-11-19 09:00:00\", \"dateTimeEnd\":\"2021-11-19 09:30:00\", \"ProvNum\": 5, \"OpNum\": 3, \"defNumApptType\": 326 } Example Response: { \"AptNum\": 121, \"PatNum\": 21, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XX\", \"Confirmed\": 395, \"confirmed\": \"Created from Web Sched\", \"Op\": 3, \"Note\": \"Appointment Reason: New Patient Exam\", \"ProvNum\": 5, \"provAbbr\": \"SMITH\", \"ProvHyg\": 0, \"AptDateTime\": \"2021-11-19 09:00:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"true\", \"ProcDescript\": \"LimEx, 2BW\", \"ClinicNum\": 1, \"IsHygiene\": \"false\", \"DateTStamp\": \"0001-01-01 00:00:00\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 0, \"SecDateTEntry\":\"2020-09-24 09:12:05\", \"Priority\": \"Normal\", \"PatternSecondary\": \"////\" } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PatNum\": 21, \"dateTimeStart\": \"2021-11-19 09:00:00\", \"dateTimeEnd\":\"2021-11-19 09:30:00\", \"ProvNum\": 5, \"OpNum\": 3, \"defNumApptType\": 326 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/appointments/34","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/appointments/34","host":["{{url_local}}{{version_api}}"],"path":["/appointments/34"],"query":null},"description":"Appointments PUT (update) Updates an appointment. All fields are optional. It is common to only set one or two fields. Note will overwrite any existing note. Use Appointments PUT Note to instead append a note. Use ProcedureLogs PUT to update attached procedures. It is rare to use this method. There would be complex issues involved. It is recommended to instead use Appointments PUT Note, PUT Confirm, and PUT Break. AptNum: Required in the URL. AptStatus: Either \"Scheduled\", \"Complete\", \"UnschedList\", \"Broken\", \"Planned\", \"PtNote\", or \"PtNoteCompleted\". Pattern: Time pattern in 5 minute increments. A string consisting of 'X' and '/' characters only. Patterns exceeding 9 hours will be trimmed down to 9 hours. Confirmed: definition.DefNum where definition.Category=2. Op: FK to operatory.OperatoryNum. Note: Overwrites existing note. ProvNum: ProvNum of a provider. ProvHyg: ProvNum of a hygiene provider. AptDateTime: Start time for the appointment. String in \"yyyy-MM-dd HH:mm:ss\" format. ClinicNum: ClinicNum of a clinic. IsHygiene: Either \"true\" or \"false\". True if a hygiene appointment. IsNewPatient: (Added in version 21.3) Either \"true\" or \"false\". Priority: (Added in version 22.1) Either \"Normal\" or \"ASAP\". AppointmentTypeNum: (Added in version 22.1) FK to appointmenttype.AppointmentTypeNum. Use 0 to indicate None. Follows the same logic for adding attached procedures, pattern, and color as in Open Dental. The pattern will only be applied if Pattern is not specified in the request. UnschedStatus: (Added in version 22.2) definition.DefNum where definition.Category=13. Use 0 to indicate None. colorOverride: (Added in version 22.3.9) Comma delimited list of three color values from 0-255. PatternSecondary: (Added in version 23.3.17) Time pattern in 5 minute increments. A string consisting of 'X' and '/' characters only. Must match the length of Pattern. Example Request: PUT /appointments/34 { \"Note\":\"Note on appointment.\" } Example Response: 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"Note\":\"Note on appointment.\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/appointments/5/Break","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/appointments/5/Break","host":["{{url_local}}{{version_api}}"],"path":["/appointments/5/Break"],"query":null},"description":"Appointments PUT Break Version Added: 21.3 Breaks an appointment. Only appointments with an AptStatus of Scheduled can be broken. Creates a CommLog entry if the office has that preference turned on. To reschedule a broken appointment, use Appointments PUT (update) to update the Status, AptDateTime, and Op of the broken appointment. AptNum: Required in the URL. sendToUnscheduledList: Required. Either \"true\" or \"false\". Usually use \"true\" to send the broken appointment to the Unscheduled List. This will allow the patient or the office to see that this appointment is ready to be scheduled when they are ready. The only reason you would ever use \"false\" is if you were setting breakType to \"Missed\" or \"Cancelled\". \"false\" would leave the appointment in place on the appointment book. breakType: Optional. Rarely used. Only used if you want a procedure to be added, which is usually associated with a fee. Use \"Missed\" to add a procedure with code D9986, indicating that they missed their appointment without notice. Use \"Cancelled\" to add procedure with code D9987, indicating less than 24 hrs notice. Normally, if more than 24 hrs notice is given, you would not specify breakType. These options cannot be used unless the offices has gone to Setup > Appointments > Appts Preferences, and changed the broken appointment procedure type to no longer be \"None\". Example Request: PUT /appointments/5/Break { \"sendToUnscheduledList\":\"true\" } Example Response: 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"sendToUnscheduledList\":\"true\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/appointments/34/Note","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/appointments/34/Note","host":["{{url_local}}{{version_api}}"],"path":["/appointments/34/Note"],"query":null},"description":"Appointments PUT Note Version Added: 21.1 Appends a new line of text to an existing appointment's note. AptNum: Required in the URL. Note: Required. If a note already exists, a CR is included before the new note is appended. Example Request: PUT /appointments/34/Note { \"Note\":\"Requests reschedule\" } Example Response: 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"Note\":\"Requests reschedule\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/appointments/34/Confirm","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/appointments/34/Confirm","host":["{{url_local}}{{version_api}}"],"path":["/appointments/34/Confirm"],"query":null},"description":"Appointments PUT Confirm Version Added: 21.1 Updates appointment.Confirmed for a specified appointment. Only one field is allowed in the JSON object, either confirmVal or defNum. A confirmVal of \"None\" corresponds to the default status for all new appointments, which is based on the first item listed in Definitions > Appt Confirmed. The other four confirmVal options are managed by the office in eServices Setup > Automated Messaging. confirmVal: Either \"None\", \"Sent\", \"Confirmed\", \"Not Accepted\", or \"Failed\". defNum: (Added in version 21.2) definition.DefNum where definition.Category=2. Example Requests: PUT /appointments/34/Confirm { \"confirmVal\":\"Confirmed\" } or { \"defNum\":209 } Example Response: 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"confirmVal\":\"Confirmed\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API AppointmentTypes","item":[{"name":"/appointmenttypes","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/appointmenttypes","host":["{{url_local}}{{version_api}}"],"path":["/appointmenttypes"],"query":null},"description":"AppointmentTypes GET Version Added: 22.4.10 Gets a list of AppointmentTypes. Example Request: GET /appointmenttypes Example Response: [ { \"AppointmentTypeNum\": 1, \"AppointmentTypeName\": \"WebSched New Patient Default\", \"appointmentTypeColor\": \"93,54,220\", \"IsHidden\": \"false\", \"Pattern\": \"//XX//\", \"CodeStr\": \"\", \"CodeStrRequired\": \"\", \"RequiredProcCodesNeeded\": 0, \"BlockoutTypes\": \"\" }, { \"AppointmentTypeNum\": 2, \"AppointmentTypeName\": \"WebSched\", \"appointmentTypeColor\": \"74,250,61\", \"IsHidden\": \"false\", \"Pattern\": \"//XX//\", \"CodeStr\": \"D0272,D0274\", \"CodeStrRequired\": \"D0272,D0274\", \"RequiredProcCodesNeeded\": \"AtLeastOne\", \"BlockoutTypes\": \"TeleExam\" }, etc... ] 200 OK","body":{"mode":"raw","raw":"[ { \"AppointmentTypeNum\": 1, \"AppointmentTypeName\": \"WebSched New Patient Default\", \"appointmentTypeColor\": \"93,54,220\", \"IsHidden\": \"false\", \"Pattern\": \"//XX//\", \"CodeStr\": \"\", \"CodeStrRequired\": \"\", \"RequiredProcCodesNeeded\": 0, \"BlockoutTypes\": \"\" }, { \"AppointmentTypeNum\": 2, \"AppointmentTypeName\": \"WebSched\", \"appointmentTypeColor\": \"74,250,61\", \"IsHidden\": \"false\", \"Pattern\": \"//XX//\", \"CodeStr\": \"D0272,D0274\", \"CodeStrRequired\": \"D0272,D0274\", \"RequiredProcCodesNeeded\": \"AtLeastOne\", \"BlockoutTypes\": \"TeleExam\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API ApptFields","item":[{"name":"/apptfields?AptNum=101&amp;FieldName=Ins%20Verified","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/apptfields?AptNum=101&amp;FieldName=Ins%20Verified","host":["{{url_local}}{{version_api}}"],"path":["/apptfields?AptNum=101&amp;FieldName=Ins%20Verified"],"query":null},"description":"ApptFields GET Version Added: 21.1 If an ApptField exists for the appointment, it gets the value. If an ApptField does not exist, it returns an empty string. AptNum: Required. FieldName: Required. Example Request GET /apptfields?AptNum=101&FieldName=Ins%20Verified Example Response: { \"FieldName\": \"Ins Verified\", \"AptNum\":101, \"FieldValue\":\"Yes\" }","body":{"mode":"raw","raw":"{ \"FieldName\": \"Ins Verified\", \"AptNum\":101, \"FieldValue\":\"Yes\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/apptfields","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/apptfields","host":["{{url_local}}{{version_api}}"],"path":["/apptfields"],"query":null},"description":"ApptFields PUT Version Added: 21.1 If an ApptField already exists for the appointment, it gets set to the new value, overwriting the old value. If an ApptField does not yet exist for the appointment, then an ApptField gets inserted into the database. AptNum: Required. FieldName: Required. FieldValue: Required. Example Request: PUT /apptfields { \"FieldName\": \"Ins Verified\", \"AptNum\":101, \"FieldValue\":\"Yes\" } Example Response: 200 OK 400 Bad Request (with explanation)","body":{"mode":"raw","raw":"{ \"FieldName\": \"Ins Verified\", \"AptNum\":101, \"FieldValue\":\"Yes\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API ApptFieldDefs","item":[{"name":"/apptfielddefs","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/apptfielddefs","host":["{{url_local}}{{version_api}}"],"path":["/apptfielddefs"],"query":null},"description":"ApptFieldDefs GET Version Added: 21.4 Gets a list of all Appointment Field Defs. Example Request GET /apptfielddefs Example Response: [ { \"ApptFieldDefNum\": 7, \"FieldName\": \"Verify Insurance\", \"FieldType\": \"Text\", \"PickList\": \"\" }, { \"ApptFieldDefNum\": 8, \"FieldName\": \"Patient a minor\", \"FieldType\": \"PickList\", \"PickList\": \"Yes\\r\\nNo\\r\\nUnknown\" }, { \"ApptFieldDefNum\": 11, \"FieldName\": \"Temperature\", \"FieldType\": \"Text\", \"PickList\": \"\" } ]","body":{"mode":"raw","raw":"[ { \"ApptFieldDefNum\": 7, \"FieldName\": \"Verify Insurance\", \"FieldType\": \"Text\", \"PickList\": \"\" }, { \"ApptFieldDefNum\": 8, \"FieldName\": \"Patient a minor\", \"FieldType\": \"PickList\", \"PickList\": \"Yes\\r\\nNo\\r\\nUnknown\" }, { \"ApptFieldDefNum\": 11, \"FieldName\": \"Temperature\", \"FieldType\": \"Text\", \"PickList\": \"\" } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/apptfielddefs","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/apptfielddefs","host":["{{url_local}}{{version_api}}"],"path":["/apptfielddefs"],"query":null},"description":"ApptFieldDefs POST (create) Version Added: 21.4 The API supports creating both Text type and PickList type ApptFieldDefs. Duplicate ApptFieldDefs are not allowed. FieldName:Required. The name of the field. FieldType: Optional. Either \"Text\" or \"PickList\". If \"Text\", in the Edit Appointment window, users can enter any free-form text. If \"PickList\", users will select from a list of items. Default is \"Text\". PickList: Optional. Only used if FieldType is \"PickList\". Each item in the list must be separated by a \\r\\n to display properly in the Edit Appointment window. Example Request: POST /apptfielddefs { \"FieldName\": \"Temperature\" } or { \"FieldName\": \"Patient a minor?\", \"FieldType\": \"PickList\", \"PickList\": \"Yes\\r\\nNo\\r\\nUnknown\" } Example Response: { \"ApptFieldDefNum\": 11, \"FieldName\": \"Temperature\", \"FieldType\": \"Text\", \"PickList\": \"\" } or { \"ApptFieldDefNum\": 8, \"FieldName\": \"Patient a minor?\", \"FieldType\": \"PickList\", \"PickList\": \"Yes\\r\\nNo\\r\\nUnknown\" } 201 Created 400 Bad Request (with explanation)","body":{"mode":"raw","raw":"{ \"FieldName\": \"Temperature\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API AsapComms","item":[{"name":"/asapcomms/192","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/asapcomms/192","host":["{{url_local}}{{version_api}}"],"path":["/asapcomms/192"],"query":null},"description":"AsapComms GET (single) Version Added: In Development for: 23.3.01 Gets a single asapcomm. Parameters: AsapCommNum: Required in the URL. Example Request: GET /asapcomms/192 Example Response: { \"AsapCommNum\": 192, \"FKey\": 539, \"FKeyType\": \"ScheduledAppt\", \"ScheduleNum\": 3523, \"PatNum\": 1771, \"ClinicNum\": 1, \"DateTimeEntry\": \"2023-08-24 10:04:14\", \"DateTimeExpire\": \"2023-09-20 09:00:00\", \"DateTimeSmsScheduled\": \"2023-09-14 10:04:14\", \"SmsSendStatus\": \"SendSuccessful\", \"DateTimeSmsSent\": \"2023-09-14 10:04:14\", \"ResponseStatus\": \"PendingRsvp\", \"DateTimeOrig\": \"2023-09-26 10:00:00\", \"TemplateText\": \"[NameF], an appointment opening has become available on 08/28/2023 at 2:00 PM at SouthSide Dental. Visit [AsapURL] to reserve it.\", \"Note\": \"\" } 200 OK 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"AsapCommNum\": 192, \"FKey\": 539, \"FKeyType\": \"ScheduledAppt\", \"ScheduleNum\": 3523, \"PatNum\": 1771, \"ClinicNum\": 1, \"DateTimeEntry\": \"2023-08-24 10:04:14\", \"DateTimeExpire\": \"2023-09-20 09:00:00\", \"DateTimeSmsScheduled\": \"2023-09-14 10:04:14\", \"SmsSendStatus\": \"SendSuccessful\", \"DateTimeSmsSent\": \"2023-09-14 10:04:14\", \"ResponseStatus\": \"PendingRsvp\", \"DateTimeOrig\": \"2023-09-26 10:00:00\", \"TemplateText\": \"[NameF], an appointment opening has become available on 08/28/2023 at 2:00 PM at SouthSide Dental. Visit [AsapURL] to reserve it.\", \"Note\": \"\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/asapcomms?ClinicNum=4","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/asapcomms?ClinicNum=4","host":["{{url_local}}{{version_api}}"],"path":["/asapcomms?ClinicNum=4"],"query":null},"description":"AsapComms GET (multiple) Version Added: In Development for: 23.3.01 Gets a list of asapcomms. Parameters: All Optional. ClinicNum: FK to clinic.ClinicNum. The clinic that is sending the AsapComms. date: For a single day. String in \"yyyy-mm-dd\" format. dateStart, dateEnd: For a date range, inclusive of both dates. String in \"yyyy-mm-dd\" format. Default is the last 7 days. dateStart: Only return asapcomms with a DateTimeEntry after this date. String in \"yyyy-mm-dd\" format. Default is the last 7 days. dateEnd: Only return asapcomms with a DateTimeEntry before this date. String in \"yyyy-mm-dd\" format. Default is today at midnight. Example Request: GET /asapcomms?ClinicNum=4 GET /asapcomms?ClinicNum=4&date=2023-09-14 GET /asapcomms?ClinicNum=4&dateStart=2023-09-01&dateEnd=2023-09-14 Example Response: [ { \"AsapCommNum\": 1224, \"FKey\": 11543, \"FKeyType\": \"ScheduledAppt\", \"ScheduleNum\": 13651, \"PatNum\": 11775, \"ClinicNum\": 4, \"DateTimeEntry\": \"2023-09-01 10:04:25\", \"DateTimeExpire\": \"2023-09-08 10:00:00\", \"DateTimeSmsScheduled\": \"0001-01-01 00:00:00\", \"SmsSendStatus\": \"DoNotSend\", \"DateTimeSmsSent\": \"0001-01-01 00:00:00\", \"ResponseStatus\": \"UnableToSend\", \"DateTimeOrig\": \"2023-09-24 10:00:00\", \"TemplateText\": \"[NameF], an appointment opening has become available on 09/04/2023 at 2:00 PM at NorthSide Dental. Visit [AsapURL] to reserve it.\", \"Note\": \"Not sending text because the patient has opted out of automated messaging.\" }, { \"AsapCommNum\": 1225, \"FKey\": 11642, \"FKeyType\": \"UnscheduledAppt\", \"ScheduleNum\": 13619, \"PatNum\": 11774, \"ClinicNum\": 4, \"DateTimeEntry\": \"2023-09-01 10:04:25\", \"DateTimeExpire\": \"2023-09-08 10:00:00\", \"DateTimeSmsScheduled\": \"2023-09-01 10:04:25\", \"SmsSendStatus\": \"SendSuccessful\", \"DateTimeSmsSent\": \"2023-09-01 10:04:25\", \"ResponseStatus\": \"PendingRsvp\", \"DateTimeOrig\": \"2023-10-25 09:00:00\", \"TemplateText\": \"[NameF], an appointment opening has become available on 09/04/2023 at 2:00 PM at NorthSide Dental. Visit [AsapURL] to reserve it.\", \"Note\": \"\" }, { \"AsapCommNum\": 1226, \"FKey\": 11836, \"FKeyType\": \"PlannedAppt\", \"ScheduleNum\": 3459, \"PatNum\": 11768, \"ClinicNum\": 4, \"DateTimeEntry\": \"2023-09-01 10:04:25\", \"DateTimeExpire\": \"2023-09-08 10:00:00\", \"DateTimeSmsScheduled\": \"2023-09-01 10:06:25\", \"SmsSendStatus\": \"DoNotSend\", \"DateTimeSmsSent\": \"2023-09-01 10:06:25\", \"ResponseStatus\": \"Failed\", \"DateTimeOrig\": \"2023-10-21 10:00:00\", \"TemplateText\": \"[NameF], an appointment opening has become available on 09/04/2023 at 2:00 PM at NorthSide Dental. Visit [AsapURL] to reserve it.\", \"Note\": \"Not sending because the time slot has been taken by another appointment.\" }, ect. ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"AsapCommNum\": 1224, \"FKey\": 11543, \"FKeyType\": \"ScheduledAppt\", \"ScheduleNum\": 13651, \"PatNum\": 11775, \"ClinicNum\": 4, \"DateTimeEntry\": \"2023-09-01 10:04:25\", \"DateTimeExpire\": \"2023-09-08 10:00:00\", \"DateTimeSmsScheduled\": \"0001-01-01 00:00:00\", \"SmsSendStatus\": \"DoNotSend\", \"DateTimeSmsSent\": \"0001-01-01 00:00:00\", \"ResponseStatus\": \"UnableToSend\", \"DateTimeOrig\": \"2023-09-24 10:00:00\", \"TemplateText\": \"[NameF], an appointment opening has become available on 09/04/2023 at 2:00 PM at NorthSide Dental. Visit [AsapURL] to reserve it.\", \"Note\": \"Not sending text because the patient has opted out of automated messaging.\" }, { \"AsapCommNum\": 1225, \"FKey\": 11642, \"FKeyType\": \"UnscheduledAppt\", \"ScheduleNum\": 13619, \"PatNum\": 11774, \"ClinicNum\": 4, \"DateTimeEntry\": \"2023-09-01 10:04:25\", \"DateTimeExpire\": \"2023-09-08 10:00:00\", \"DateTimeSmsScheduled\": \"2023-09-01 10:04:25\", \"SmsSendStatus\": \"SendSuccessful\", \"DateTimeSmsSent\": \"2023-09-01 10:04:25\", \"ResponseStatus\": \"PendingRsvp\", \"DateTimeOrig\": \"2023-10-25 09:00:00\", \"TemplateText\": \"[NameF], an appointment opening has become available on 09/04/2023 at 2:00 PM at NorthSide Dental. Visit [AsapURL] to reserve it.\", \"Note\": \"\" }, { \"AsapCommNum\": 1226, \"FKey\": 11836, \"FKeyType\": \"PlannedAppt\", \"ScheduleNum\": 3459, \"PatNum\": 11768, \"ClinicNum\": 4, \"DateTimeEntry\": \"2023-09-01 10:04:25\", \"DateTimeExpire\": \"2023-09-08 10:00:00\", \"DateTimeSmsScheduled\": \"2023-09-01 10:06:25\", \"SmsSendStatus\": \"DoNotSend\", \"DateTimeSmsSent\": \"2023-09-01 10:06:25\", \"ResponseStatus\": \"Failed\", \"DateTimeOrig\": \"2023-10-21 10:00:00\", \"TemplateText\": \"[NameF], an appointment opening has become available on 09/04/2023 at 2:00 PM at NorthSide Dental. Visit [AsapURL] to reserve it.\", \"Note\": \"Not sending because the time slot has been taken by another appointment.\" }, ect. ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/asapcomms","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/asapcomms","host":["{{url_local}}{{version_api}}"],"path":["/asapcomms"],"query":null},"description":"AsapComms POST (Insert) Version Added: In Development for: 23.3.01 Rarely used. Dental office must be subscribed to the following eServices: WebSched ASAP and Integrated Texting Feature. Creates an AsapComm, and a Web Sched ASAP Blockout. See Web Sched ASAP, and ASAP Message Setup for more information. The End Time is calculated from the pattern of the appointment. Will not schedule if the new appointment would overlap with an existing appointment or blockout that does not allow overlap. Prior to running this method, obtain the aptNum of the appointment with Appointments GET ASAP. Then use Appointments GET Slots or Appointments GET (multiple) along with Schedules GET (multiple) to obtain an available time slot for the dateTimeStart and op for the ASAP Appointment. aptNum: Required. FK to appointment.AptNum. Appointment.Priority must be 1 (ASAP). op: Required. FK to operatory.OperatoryNum. dateTimeStart: Required. The Start Time of the appointment. String in \"yyyy-MM-dd HH:mm:ss\" format. Example Request: POST /asapcomms { \"aptNum\": 11939, \"op\": 2, \"dateTimeStart\": \"2023-10-18 14:00:00\" } Example Response: { \"AsapCommNum\": 2374, \"FKey\": 11939, \"FKeyType\": \"Broken\", \"ScheduleNum\": 52527, \"PatNum\": 6522, \"ClinicNum\": 4, \"DateTimeEntry\": \"2023-10-16 09:01:25\", \"DateTimeExpire\": \"2023-10-25 14:00:00\", \"DateTimeSmsScheduled\": \"2023-10-16 09:01:25\", \"SmsSendStatus\": \"SendNotAttempted\", \"DateTimeSmsSent\": \"0001-01-01 00:00:00\", \"ResponseStatus\": \"AwaitingTransmit\", \"DateTimeOrig\": \"2023-10-31 16:00:00\", \"TemplateText\": \"[NameF], an appointment opening has become available on 10/18/2023 at 2:00 PM at Southern Office. Visit [AsapURL] to reserve it.\", \"Note\": \"\" } 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"aptNum\": 11939, \"op\": 2, \"dateTimeStart\": \"2023-10-18 14:00:00\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API AutoNoteControls","item":[{"name":"/autonotecontrols","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/autonotecontrols","host":["{{url_local}}{{version_api}}"],"path":["/autonotecontrols"],"query":null},"description":"AutoNoteControls GET Version Added: 22.3.22 Gets a list of AutoNoteControls. Example Request: GET /autonotecontrols Example Response: [ { \"AutoNoteControlNum\": 1, \"Descript\": \"Medications\", \"ControlType\": \"MultiResponse\", \"ControlLabel\": \"Medications\", \"ControlOptions\": \"Zantac\\r\\nValium\\r\\nAdvair\\r\\nElavil\" }, { \"AutoNoteControlNum\": 2, \"Descript\": \"Allergies\", \"ControlType\": \"MultiResponse\", \"ControlLabel\": \"Allergies\", \"ControlOptions\": \"Amox\\r\\nLatex\\r\\nPen VK\\r\\nCeph\\r\\nErythro\\r\\nSulfa\" }, { \"AutoNoteControlNum\": 3, \"Descript\": \"BP Pulse\", \"ControlType\": \"Text\", \"ControlLabel\": \"BP Pulse\", \"ControlOptions\": \"BP: / Pulse: \" }, etc... ] 200 OK 400 BadRequest","body":{"mode":"raw","raw":"[ { \"AutoNoteControlNum\": 1, \"Descript\": \"Medications\", \"ControlType\": \"MultiResponse\", \"ControlLabel\": \"Medications\", \"ControlOptions\": \"Zantac\\r\\nValium\\r\\nAdvair\\r\\nElavil\" }, { \"AutoNoteControlNum\": 2, \"Descript\": \"Allergies\", \"ControlType\": \"MultiResponse\", \"ControlLabel\": \"Allergies\", \"ControlOptions\": \"Amox\\r\\nLatex\\r\\nPen VK\\r\\nCeph\\r\\nErythro\\r\\nSulfa\" }, { \"AutoNoteControlNum\": 3, \"Descript\": \"BP Pulse\", \"ControlType\": \"Text\", \"ControlLabel\": \"BP Pulse\", \"ControlOptions\": \"BP: / Pulse: \" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"","item":null,"description":null,"request":{"method":"","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}","host":["{{url_local}}{{version_api}}"],"path":[""],"query":null},"description":"AutoNoteControls POST (create) Version Added: 22.3 Creates a new AutoNoteControl. Descript: Required. The description of the AutoNoteControl as it will be displayed. ControlType: Required. Either \"Text\", \"OneResponse\", \"MultiResponse\". ControlLabel: Required. Prompt text. ControlOptions: Required unless the ControlType is Text. The list of possible responses, one per line. Responses must be separated by \\r\\n. Example Request: POST /autonotecontrols { \"Descript\": \"Medications\", \"ControlType\": \"MultiResponse\", \"ControlLabel\": \"Medications\", \"ControlOptions\": \"Zantac\\r\\nValium\\r\\nAdvair\\r\\nElavil\" } Example Response: { \"AutoNoteControlNum\": 5, \"Descript\": \"Medications\", \"ControlType\": \"MultiResponse\", \"ControlLabel\": \"Medications\", \"ControlOptions\": \"Zantac\\r\\nValium\\r\\nAdvair\\r\\nElavil\" } 201 Created 400 BadRequest (Missing or invalid fields)","body":{"mode":"raw","raw":"{ \"Descript\": \"Medications\", \"ControlType\": \"MultiResponse\", \"ControlLabel\": \"Medications\", \"ControlOptions\": \"Zantac\\r\\nValium\\r\\nAdvair\\r\\nElavil\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"","item":null,"description":null,"request":{"method":"","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}","host":["{{url_local}}{{version_api}}"],"path":[""],"query":null},"description":"AutoNoteControls PUT (update) Version Added: 22.3 Updates an existing AutoNoteControl. All fields are optional. AutoNoteControlNum: Required in the URL. Descript: The description of the AutoNoteControl as it will be displayed. ControlType: Either \"Text\", \"OneResponse\", \"MultiResponse\" ControlLabel: Prompt text. ControlOptions: The list of possible responses, one per line. Responses must be separated by \\r\\n. Example Request: PUT /autonotecontrols/5 { \"ControlType\": \"MultiResponse\" } 200 OK 400 BadRequest (Missing or invalid fields) 404 NotFound (\"AuotNoteControl not found\")","body":{"mode":"raw","raw":"{ \"ControlType\": \"MultiResponse\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API AutoNotes","item":[{"name":"/autonotes","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/autonotes","host":["{{url_local}}{{version_api}}"],"path":["/autonotes"],"query":null},"description":"AutoNotes GET Version Added: 22.3.22 Gets a list of Auto Notes. Parameters: Category: Optional. definition.DefNum where definition.Category=41. Example Requests: GET /autonotes GET /autonotes?Category=340 Example Response: [ { \"AutoNoteNum\": 7, \"AutoNoteName\": \"SOAP\", \"MainText\": \"Subjective:\\r\\nPatient Presents with:[Prompt:\\\"Chief Complaint\\\"]\\r\\nMedical history:\\r\\nReviewed today's procedure:[Prompt:\\\"Responsible party\\\"] [Prompt:\\\"Patient Response\\\"]\\r\\nObjective:\\r\\nVitals: \\r\\nExtraoral: [Prompt:\\\"Extraoral\\\"]\\r\\nIntraoral:) [Prompt:\\\"Intraoral\\\"]\\r\\nRadiology:[Prompt:\\\"Radiology\\\"]\\r\\nAssessment:[Prompt:\\\"Assess\\\"]\\r\\nPlan:[Prompt:\\\"Plan\\\"]\\r\\nPARQ\\r\\nNV\", \"Category\": 0, \"category\": \"\" }, { \"AutoNoteNum\": 8, \"AutoNoteName\": \"SRP- Kelli\", \"MainText\": \"Review med hx\\r\\nPt chief complaint\\r\\nBP taken: [Prompt:\\\"BP Pulse\\\"]\\r\\nQuad/s: [Prompt:\\\"Quad\\\"]\\r\\nAnesth: [Prompt:\\\"Anesth\\\"]\\r\\nCapules: [Prompt:\\\"Carps\\\"]\\r\\nNV\\r\\nIn\", \"Category\": 0, \"category\": \"\" }, { \"AutoNoteNum\": 9, \"AutoNoteName\": \"TMJ Consult\", \"MainText\": \"Reviewed Med HX:\\r\\nPt's Chief concern:\\r\\nBP Taken: [Prompt:\\\"BP Pulse\\\"]\\r\\nPain: [Prompt:\\\"Pain\\\"]\\r\\nPano and Ceph and I/O photos taken.\\r\\nMuscle: Left: [Prompt:\\\"Left Muscle\\\"] Right: [Prompt:\\\"Right Muscle\\\"]\\r\\nDeviation: [Prompt:\\\"Deviation\\\"]\", \"Category\": 340, \"category\": \"Exams\" }, etc... ] 200 OK","body":{"mode":"raw","raw":"[ { \"AutoNoteNum\": 7, \"AutoNoteName\": \"SOAP\", \"MainText\": \"Subjective:\\r\\nPatient Presents with:[Prompt:\\\"Chief Complaint\\\"]\\r\\nMedical history:\\r\\nReviewed today's procedure:[Prompt:\\\"Responsible party\\\"] [Prompt:\\\"Patient Response\\\"]\\r\\nObjective:\\r\\nVitals: \\r\\nExtraoral: [Prompt:\\\"Extraoral\\\"]\\r\\nIntraoral:) [Prompt:\\\"Intraoral\\\"]\\r\\nRadiology:[Prompt:\\\"Radiology\\\"]\\r\\nAssessment:[Prompt:\\\"Assess\\\"]\\r\\nPlan:[Prompt:\\\"Plan\\\"]\\r\\nPARQ\\r\\nNV\", \"Category\": 0, \"category\": \"\" }, { \"AutoNoteNum\": 8, \"AutoNoteName\": \"SRP- Kelli\", \"MainText\": \"Review med hx\\r\\nPt chief complaint\\r\\nBP taken: [Prompt:\\\"BP Pulse\\\"]\\r\\nQuad/s: [Prompt:\\\"Quad\\\"]\\r\\nAnesth: [Prompt:\\\"Anesth\\\"]\\r\\nCapules: [Prompt:\\\"Carps\\\"]\\r\\nNV\\r\\nIn\", \"Category\": 0, \"category\": \"\" }, { \"AutoNoteNum\": 9, \"AutoNoteName\": \"TMJ Consult\", \"MainText\": \"Reviewed Med HX:\\r\\nPt's Chief concern:\\r\\nBP Taken: [Prompt:\\\"BP Pulse\\\"]\\r\\nPain: [Prompt:\\\"Pain\\\"]\\r\\nPano and Ceph and I/O photos taken.\\r\\nMuscle: Left: [Prompt:\\\"Left Muscle\\\"] Right: [Prompt:\\\"Right Muscle\\\"]\\r\\nDeviation: [Prompt:\\\"Deviation\\\"]\", \"Category\": 340, \"category\": \"Exams\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/autonotes","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/autonotes","host":["{{url_local}}{{version_api}}"],"path":["/autonotes"],"query":null},"description":"AutoNotes POST (create) Version Added: 22.3.33 Inserts an Auto Note. For information on how Auto Notes are categorized, see Definitions: Auto Note Categories. When including Prompts in MainText, they must be formatted as [Prompt:\\\"autonotecontrol.Descript\\\"]. To obtain the Descript, see AutoNoteControls GET. AutoNoteName: Required. Identifying name of the Auto Note. MainText: Required. Can include static text and Prompts (Auto Note Controls). Category: Optional. definition.DefNum where definition.Category=41. Use 0 to indicate Uncategorized. Default is 0. Example Requests: POST /autonotes { \"AutoNoteName\": \"Allergens\", \"MainText\": \"Allergies: [Prompt:\\\"Allergies\\\"]\", \"Category\": 399 } Example Response: { \"AutoNoteNum\": 10, \"AutoNoteName\": \"Allergens\", \"MainText\": \"Allergies: [Prompt:\\\"Allergies\\\"]\", \"Category\": 399, \"category\": \"Patient Information\" } 201 Created 400 BadRequest (Missing or invalid fields)","body":{"mode":"raw","raw":"[Prompt:\\\"autonotecontrol.Descript\\\"]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/autonotes/5","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/autonotes/5","host":["{{url_local}}{{version_api}}"],"path":["/autonotes/5"],"query":null},"description":"AutoNotes PUT (update) Version Added: 22.3.33 Updates an Auto Note. For information on how Auto Notes are categorized, see Definitions: Auto Note Categories. When including Prompts in MainText, they must be formatted as [Prompt:\\\"autonotecontrol.Descript\\\"]. To obtain the Descript, see AutoNoteControls GET. AutoNoteNum: Required in the URL. AutoNoteName: Optional. Identifying name of the Auto Note. MainText: Optional. Can include static text and Prompts (Auto Note Controls). Category: Optional. definition.DefNum where definition.Category=41. Use 0 to indicate Uncategorized. Example Requests: PUT /autonotes/5 { \"AutoNoteName\": \"Filling\", \"MainText\": \"Pt presents with:\\r\\nAnesthetic: [Prompt:\\\"Anesth\\\"]\\r\\nCarpules: [Prompt:\\\"Carps\\\"]\", \"Category\": 425 } or { \"Category\": 0 } Example Response: { \"AutoNoteNum\": 5, \"AutoNoteName\": \"Filling\", \"MainText\": \"Pt presents with:\\r\\nAnesthetic: [Prompt:\\\"Anesth\\\"]\\r\\nCarpules: [Prompt:\\\"Carps\\\"]\", \"Category\": 425, \"category\": \"Restorative\" } 200 OK 400 BadRequest (Missing or invalid fields) 404 NotFound","body":{"mode":"raw","raw":"[Prompt:\\\"autonotecontrol.Descript\\\"]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Benefits","item":[{"name":"/benefits?PlanNum=12","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/benefits?PlanNum=12","host":["{{url_local}}{{version_api}}"],"path":["/benefits?PlanNum=12"],"query":null},"description":"Benefits GET Version Added: 22.3.27 Gets all Benefits for a given Insurance Plan or Patient Plan. Empty Percent and MonetaryAmt values are indicated by -1 . PlanNum: This or PatPlanNum is required. FK to InsPlan.PlanNum. PatPlanNum: This or PlanNum is required. FK to PatPlan.PatPlanNum. Example Requests: GET /benefits?PlanNum=12 GET /benefits?PatPlanNum=30 Example Response: [ { \"BenefitNum\": 236, \"PlanNum\": 12, \"PatPlanNum\": 0, \"CovCatNum\": 3, \"BenefitType\": \"CoInsurance\", \"Percent\": 30, \"MonetaryAmt\": -1.0, \"TimePeriod\": \"None\", \"QuantityQualifier\": \"Visits\", \"Quantity\": 2, \"CodeNum\": 0, \"procCode\": \"\", \"CoverageLevel\": \"None\" }, { \"BenefitNum\": 243, \"PlanNum\": 12, \"PatPlanNum\": 0, \"CovCatNum\": 0, \"BenefitType\": \"WaitingPeriod\", \"Percent\": -1, \"MonetaryAmt\": -1.0, \"TimePeriod\": \"ServiceYear\", \"QuantityQualifier\": \"Months\", \"Quantity\": 3, \"CodeNum\": 150, \"procCode\": \"D0486\", \"CoverageLevel\": \"Family\" }, { \"BenefitNum\": 245, \"PlanNum\": 12, \"PatPlanNum\": 0, \"CovCatNum\": 12, \"BenefitType\": \"Limitations\", \"Percent\": -1, \"MonetaryAmt\": 1000.0, \"TimePeriod\": \"Lifetime\", \"QuantityQualifier\": \"None\", \"Quantity\": 0, \"CodeNum\": 0, \"procCode\": \"\", \"CoverageLevel\": \"Individual\" }, etc... ] 200 OK 400 BadRequest (Missing or invalid fields) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"BenefitNum\": 236, \"PlanNum\": 12, \"PatPlanNum\": 0, \"CovCatNum\": 3, \"BenefitType\": \"CoInsurance\", \"Percent\": 30, \"MonetaryAmt\": -1.0, \"TimePeriod\": \"None\", \"QuantityQualifier\": \"Visits\", \"Quantity\": 2, \"CodeNum\": 0, \"procCode\": \"\", \"CoverageLevel\": \"None\" }, { \"BenefitNum\": 243, \"PlanNum\": 12, \"PatPlanNum\": 0, \"CovCatNum\": 0, \"BenefitType\": \"WaitingPeriod\", \"Percent\": -1, \"MonetaryAmt\": -1.0, \"TimePeriod\": \"ServiceYear\", \"QuantityQualifier\": \"Months\", \"Quantity\": 3, \"CodeNum\": 150, \"procCode\": \"D0486\", \"CoverageLevel\": \"Family\" }, { \"BenefitNum\": 245, \"PlanNum\": 12, \"PatPlanNum\": 0, \"CovCatNum\": 12, \"BenefitType\": \"Limitations\", \"Percent\": -1, \"MonetaryAmt\": 1000.0, \"TimePeriod\": \"Lifetime\", \"QuantityQualifier\": \"None\", \"Quantity\": 0, \"CodeNum\": 0, \"procCode\": \"\", \"CoverageLevel\": \"Individual\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/benefits","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/benefits","host":["{{url_local}}{{version_api}}"],"path":["/benefits"],"query":null},"description":"Benefits POST (create) Version Added: 22.3.17 Creates a new benefit for a given Insurance Plan or Patient Plan. For more information, see Edit Benefits - Row View. PlanNum: This or PatPlanNum is required. FK to InsPlan.PlanNum. PatPlanNum: This or PlanNum is required. FK to PatPlan.PlanNum. BenefitType: Required. Either \"ActiveCoverage\", \"CoInsurance\", \"Deductible\", \"CoPayment\", \"Exclusions\", \"Limitations\", or \"WaitingPeriod\". CoverageLevel: Required. Either \"None\", \"Individual\", or \"Family\". CovCatNum: Optional. FK to covcat.CovCatNum. Percent: Optional. Only allowed if BenefitType is \"CoInsurance\". Must be a value between 0 and 100. Default -1 (Indicating empty). MonetaryAmt: Optional. Only used if BenefitType is \"CoPayment\", \"Limitations\", or \"Deductible\". Default -1.0 (Indicating empty). TimePeriod: Optional. Either \"None\", \"ServiceYear\", \"CalendarYear\", \"Lifetime\", \"Years\", or \"NumberInLast12Months\". Default \"CalendarYear\". QuantityQualifier: Optional. Either \"None\", \"NumberOfServices\", \"AgeLimit\", \"Visits\", \"Years\", or \"Months\". Default \"None\". Must be \"Months\" or \"Years\" if BenefitType is \"WaitingPeriod\". Quantity: Optional. Must be a value between 0 and 100. Default 0. Must be a value greater than 0 if QuantityQualifier is \"AgeLimit\". CodeNum: Optional. FK to procedurecode.CodeNum. Only allowed if CovCatNum is 0. Will be used over procCode if both are specified. Default 0. procCode: Optional. FK to procedurecode.ProcCode. Only allowed if CovCatNum is 0. Default empty string. Example Requests: POST /benefits { \"PlanNum\": 12, \"CoverageLevel\": \"None\", \"BenefitType\": \"CoInsurance\", \"Percent\": 30, \"QuantityQualifier\": \"Visits\", \"Quantity\": 2, \"CovCatNum\": 3, \"TimePeriod\": \"None\" } or { \"PatPlanNum\": 29, \"CoverageLevel\": \"Individual\", \"BenefitType\": \"Deductible\", \"MonetaryAmt\": 500, \"CodeNum\": 158, \"QuantityQualifier\": \"AgeLimit\", \"Quantity\": \"15\", \"TimePeriod\": \"Years\" } or { \"PlanNum\": 19, \"CoverageLevel\": \"Family\", \"BenefitType\": \"WaitingPeriod\", \"QuantityQualifier\": \"Months\", \"Quantity\": \"6\", \"procCode\": \"D1110\", \"TimePeriod\": \"ServiceYear\" } Example Responses: { \"BenefitNum\": 236, \"PlanNum\": 12, \"PatPlanNum\": 0, \"CovCatNum\": 3, \"BenefitType\": CoInsurance, \"Percent\": 30, \"MonetaryAmt\": -1.0, \"TimePeriod\": None, \"QuantityQualifier\": \"Visits\", \"Quantity\": 2, \"CodeNum\": 0, \"procCode\": \"\", \"CoverageLevel\": \"None\" } or { \"BenefitNum\": 245, \"PlanNum\": 0, \"PatPlanNum\": 29, \"CovCatNum\": 0, \"BenefitType\": \"Deductible\", \"Percent\": -1, \"MonetaryAmt\": 500.0, \"TimePeriod\": \"Years\", \"QuantityQualifier\": \"AgeLimit\", \"Quantity\": 15, \"CodeNum\": 158, \"procCode\": \"D1120\", \"CoverageLevel\": \"Individual\" } or { \"BenefitNum\": 246, \"PlanNum\": 19, \"PatPlanNum\": 0, \"CovCatNum\": 0, \"BenefitType\": \"WaitingPeriod\", \"Percent\": -1, \"MonetaryAmt\": -1.0, \"TimePeriod\": \"ServiceYear\", \"QuantityQualifier\": \"Months\", \"Quantity\": 6, \"CodeNum\": 157, \"procCode\": \"D1110\", \"CoverageLevel\": \"Family\" } 201 Created 400 BadRequest (Missing or invalid fields) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PlanNum\": 12, \"CoverageLevel\": \"None\", \"BenefitType\": \"CoInsurance\", \"Percent\": 30, \"QuantityQualifier\": \"Visits\", \"Quantity\": 2, \"CovCatNum\": 3, \"TimePeriod\": \"None\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/benefits/75","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/benefits/75","host":["{{url_local}}{{version_api}}"],"path":["/benefits/75"],"query":null},"description":"Benefits PUT (update) Version Added: 22.4.7 Updates an existing benefit by BenefitNum. For more information, see Edit Benefits - Row View. BenefitNum: Required in URL. CovCatNum: Optional. FK to covcat.CovCatNum. BenefitType: Optional. Either \"ActiveCoverage\", \"CoInsurance\", \"Deductible\", \"CoPayment\", \"Exclusions\", \"Limitations\", or \"WaitingPeriod\". Percent: Optional. Only allowed if BenefitType is \"CoInsurance\". Must be a value between 0 and 100. Use -1 to indicate empty. MonetaryAmt: Optional. Only used if BenefitType is \"CoPayment\", \"Limitations\", or \"Deductible\". Use -1 to indicate empty. TimePeriod: Optional. Either \"None\", \"ServiceYear\", \"CalendarYear\", \"Lifetime\", \"Years\", or \"NumberInLast12Months\". QuantityQualifier: Optional. Either \"None\", \"NumberOfServices\", \"AgeLimit\", \"Visits\", \"Years\", or \"Months\". Must be \"Months\" or \"Years\" if BenefitType is \"WaitingPeriod\". Quantity: Optional. Must be a value between 0 and 100. Must be a value greater than 0 if QuantityQualifier is \"AgeLimit\". CodeNum: Optional. FK to procedurecode.CodeNum. Only allowed if CovCatNum is 0. Will be used over procCode if both are specified. procCode: Optional. FK to procedurecode.ProcCode. Only allowed if CovCatNum is 0. CoverageLevel: Optional. Either \"None\", \"Individual\", or \"Family\". Example Requests: PUT /benefits/75 { \"Percent\": 70, \"QuantityQualifier\": \"Visits\", \"Quantity\": 2 } or { \"CovCatNum\": 0, \"BenefitType\": \"ActiveCoverage\", \"Percent\": -1, \"MonetaryAmt\": 499.99, \"TimePeriod\": \"ServiceYear\", \"QuantityQualifier\": \"AgeLimit\", \"Quantity\": 13, \"CodeNum\": 156, \"procCode\": \"D1110\", \"CoverageLevel\": \"Individual\" } Example Response: { \"BenefitNum\": 75, \"PlanNum\": 10, \"PatPlanNum\": 0, \"CovCatNum\": 0, \"BenefitType\": \"ActiveCoverage\", \"Percent\": -1, \"MonetaryAmt\": 499.99, \"TimePeriod\": \"ServiceYear\", \"QuantityQualifier\": \"AgeLimit\", \"Quantity\": 13, \"CodeNum\": 156, \"procCode\": \"D0999\", \"CoverageLevel\": \"Individual\" } 200 OK 400 BadRequest (Missing or invalid fields) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"Percent\": 70, \"QuantityQualifier\": \"Visits\", \"Quantity\": 2 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/benefits/75","item":null,"description":null,"request":{"method":"DELETE","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/benefits/75","host":["{{url_local}}{{version_api}}"],"path":["/benefits/75"],"query":null},"description":"Benefits DELETE Version Added: 22.4.7 Deletes an existing benefit by BenefitNum. BenefitNum: Required in URL. Example Request: DELETE /benefits/75 Example Response: 200 OK 400 BadRequest (Missing BenefitNum) 404 NotFound (Benefit not found)","body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Carriers","item":[{"name":"/carriers","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/carriers","host":["{{url_local}}{{version_api}}"],"path":["/carriers"],"query":null},"description":"Carriers GET Version Added: 22.4.16 Gets a list of insurance carriers. Example Request: GET /carriers Example Response: [ { \"CarrierNum\": 1, \"CarrierName\": \"Dental Guard\", \"Address\": \"123 Elen St\", \"Address2\": \"\", \"City\": \"Portland\", \"State\": \"OR\", \"Zip\": \"97035\", \"Phone\": \"(503)456-8910\", \"ElectID\": \"54651\", \"NoSendElect\": \"SendElect\", \"IsHidden\": \"false\" }, etc... ] 200 OK 400 BadRequest","body":{"mode":"raw","raw":"[ { \"CarrierNum\": 1, \"CarrierName\": \"Dental Guard\", \"Address\": \"123 Elen St\", \"Address2\": \"\", \"City\": \"Portland\", \"State\": \"OR\", \"Zip\": \"97035\", \"Phone\": \"(503)456-8910\", \"ElectID\": \"54651\", \"NoSendElect\": \"SendElect\", \"IsHidden\": \"false\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/carriers","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/carriers","host":["{{url_local}}{{version_api}}"],"path":["/carriers"],"query":null},"description":"Carriers POST (create) Version Added: 21.4 Creates a new insurance carrier. CarrierName: Required. Address: Optional. The carriers physical address. Address2: Optional. Second address line. City: Optional. State: Optional. Two capital characters in USA. Province in Canada. Zip: Optional. Postal code for USA. Must be in format 12345, 12345-1234, or 123456789. Phone: Optional. Phone number including any necessary punctuation. ElectID: Optional. Used for e-claims, this is the electronic payer ID. NoSendElect: Optional. This must be one of the following values: \"SendElect\", \"NoSendElect\" or \"NoSendSecondaryElect\". IsHidden: Optional. Example Request: POST /carriers { \"CarrierName\": \"Dental Guard\", \"Address\": \"123 Elen St\", \"Address2\": \"\", \"City\": \"Portland\", \"State\": \"OR\", \"Zip\": \"97035\", \"Phone\": \"503-456-8910\", \"ElectID\": \"54651\", \"NoSendElect\": \"SendElect\", \"IsHidden\": \"false\" } Example Response: { \"CarrierNum\": 1, \"CarrierName\": \"Dental Guard\", \"Address\": \"123 Elen St\", \"Address2\": \"\", \"City\": \"Portland\", \"State\": \"OR\", \"Zip\": \"97035\", \"Phone\": \"(503)456-8910\", \"ElectID\": \"54651\", \"NoSendElect\": \"SendElect\", \"IsHidden\": \"false\" } 201 Created 400 BadRequest (Missing or invalid fields)","body":{"mode":"raw","raw":"{ \"CarrierName\": \"Dental Guard\", \"Address\": \"123 Elen St\", \"Address2\": \"\", \"City\": \"Portland\", \"State\": \"OR\", \"Zip\": \"97035\", \"Phone\": \"503-456-8910\", \"ElectID\": \"54651\", \"NoSendElect\": \"SendElect\", \"IsHidden\": \"false\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/carriers/1","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/carriers/1","host":["{{url_local}}{{version_api}}"],"path":["/carriers/1"],"query":null},"description":"Carriers PUT (update) Version Added: 21.4 Updates an insurance carrier. CarrierNum: Required in the URL. CarrierName: Optional. Address: Optional. The carrier's physical address. Address2: Optional. Second address line. City: Optional. State: Optional. Two capital characters in USA. Province in Canada. Zip: Optional. Postal code for USA. Must be in format 12345, 12345-1234, or 123456789. Phone: Optional. Phone number including any necessary punctuation. ElectID: Optional. Used for e-claims, this is the electronic payer ID. NoSendElect: Optional. This must be one of the following values: \"SendElect\", \"NoSendElect\" or \"NoSendSecondaryElect\". IsHidden: Optional. Example Request: PUT /carriers/1 { \"CarrierName\": \"Dental Guard\", \"Address\": \"123 Elen St\", \"Address2\": \"\", \"City\": \"Portland\", \"State\": \"OR\", \"Zip\": \"97035\", \"Phone\": \"503-456-8910\", \"ElectID\": \"54651\", \"NoSendElect\": \"SendElect\", \"IsHidden\": \"true\" } Example Response: 200 OK","body":{"mode":"raw","raw":"{ \"CarrierName\": \"Dental Guard\", \"Address\": \"123 Elen St\", \"Address2\": \"\", \"City\": \"Portland\", \"State\": \"OR\", \"Zip\": \"97035\", \"Phone\": \"503-456-8910\", \"ElectID\": \"54651\", \"NoSendElect\": \"SendElect\", \"IsHidden\": \"true\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API ChartModules","item":[{"name":"/chartmodules/13/ProgNotes","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/chartmodules/13/ProgNotes","host":["{{url_local}}{{version_api}}"],"path":["/chartmodules/13/ProgNotes"],"query":null},"description":"ChartModules GET ProgNotes Version Added: 21.4 Gets the Progress Notes for a patient, similarly to how it shows in the Chart Module. Use another API method or a query to get specific details about each object. PatNum: Required in the URL. Returned fields are detailed below: ObjectType: The type of object being displayed: Appointment, Commlog, Task, Email, LabCase, Rx, or Sheet. PrimaryKey: Primary Key corresponding to the objectType. Example: AptNum=34. Date: Human readable date. Example 05/15/2021 Time: Human readable time. Example 1:20p DateTime: Example 2021-12-21 10:00:00 Th: ToothNum for a Procedure, otherwise blank. Surf: Tooth surface for the Procedure, otherwise blank. Dx: Description of the Diagnosis. Description: Description of the of the returned object. Note: Additional notes for the returned object. Stat: Status of the Procedure, otherwise blank. Example TP. Prov: Example Doc1. ProvNum: Example: 3 Amount: ProcFee for Procedure, otherwise blank. Example 53.50 ProcCode: ProcCode for Procedure, otherwise blank. Example D0220 User: Name of the user who created the Commlog, Email, or Rx. Otherwise blank. Signed: Will be \"Signed\" if there is a signature on the Procedure or Sheet. Otherwise blank. Length: Length of the appointment in HH:mm format. Example 0:30. Abbr: Abbreviation of the Procedure, otherwise blank. Clinic: Clinic abbreviation. Example: Metro Office. ClinicNum: Example: 4 Example Request: GET /chartmodules/13/ProgNotes GET /chartmodules/13/ProgNotes?Offset=100 Example Response: [ { \"ObjectType\": \"Appointment\", \"PrimaryKey\": \"147\", \"Date\": \"12/21/2021\", \"Time\": \"11:40a\", \"DateTime\": \"12/21/2021 11:40:00 AM\", \"Th\": \"\", \"Surf\": \"\", \"Dx\": \"\", \"Description\": \"Appointment - 11:40 AM PA\", \"note\": \"\", \"Stat\": \"\", \"Prov\": \"\", \"ProvNum\": \"\", \"Amount\": \"\", \"ProcCode\": \"\", \"User\": \"\", \"Signed\": \"\", \"Length\": \"0:10\", \"Abbr\": \"\", \"Clinic\": \"\", \"ClinicNum\": \"3\" }, { \"ObjectType\": \"Procedure\", \"PrimaryKey\": \"153\", \"Date\": \"12/21/2021\", \"Time\": \"\", \"DateTime\": \"12/21/2021 12:00:00 AM\", \"Th\": \"\", \"Surf\": \"\", \"Dx\": \"\", \"Description\": \"PA\", \"note\": \"\", \"Stat\": \"TP\", \"Prov\": \"Doc3\", \"ProvNum\": \"10\", \"Amount\": \"24.00\", \"ProcCode\": \"D0220\", \"User\": \"\", \"Signed\": \"\", \"Length\": \"\", \"Abbr\": \"PA\", \"Clinic\": \"Downtown Office\", \"ClinicNum\": \"3\" }, { \"ObjectType\": \"Commlog\", \"PrimaryKey\": \"122\", \"Date\": \"02/08/2022\", \"Time\": \"3:18p\", \"DateTime\": \"2/8/2022 3:18:00 PM\", \"Th\": \"\", \"Surf\": \"\", \"Dx\": \"\", \"Description\": \"Comm - ApptRelated\", \"note\": \"Confirmed upcoming appointment. Asked to arrive 15 minutes early for paperwork.\", \"Stat\": \"\", \"Prov\": \"\", \"ProvNum\": \"\", \"Amount\": \"\", \"ProcCode\": \"\", \"User\": \"Admin\", \"Signed\": \"Signed\", \"Length\": \"\", \"Abbr\": \"\", \"Clinic\": \"\", \"ClinicNum\": \"0\" }, { \"ObjectType\": \"Task\", \"PrimaryKey\": \"52\", \"Date\": \"2/8/2022\", \"Time\": \"3:25p\", \"DateTime\": \"2/8/2022 3:25:56 PM\", \"Th\": \"\", \"Surf\": \"\", \"Dx\": \"\", \"Description\": \"Task - In List: People that will need a 1099\", \"note\": \"Admin - Example Task Description ==Admin - 2/8/2022 3:26 PM - Notes on the task.\", \"Stat\": \"\", \"Prov\": \"\", \"ProvNum\": \"\", \"Amount\": \"\", \"ProcCode\": \"\", \"User\": \"\", \"Signed\": \"\", \"Length\": \"\", \"Abbr\": \"\", \"Clinic\": \"\", \"ClinicNum\": \"0\" }, { \"ObjectType\": \"Email\", \"PrimaryKey\": \"212\", \"Date\": \"02/08/2022\", \"Time\": \"3:22p\", \"DateTime\": \"2/8/2022 3:22:27 PM\", \"Th\": \"\", \"Surf\": \"\", \"Dx\": \"\", \"Description\": \"Email - (unsent) Spring Newsletter\", \"note\": \" With warmer weather upon us...\", \"Stat\": \"\", \"Prov\": \"\", \"ProvNum\": \"\", \"Amount\": \"\", \"ProcCode\": \"\", \"User\": \"Admin\", \"Signed\": \"\", \"Length\": \"\", \"Abbr\": \"\", \"Clinic\": \"\", \"ClinicNum\": \"0\" }, { \"ObjectType\": \"Rx\", \"PrimaryKey\": \"81\", \"Date\": \"02/08/2022\", \"Time\": \"\", \"DateTime\": \"2/8/2022 12:00:00 AM\", \"Th\": \"\", \"Surf\": \"\", \"Dx\": \"\", \"Description\": \"Rx - Cephalexin 500 mg - #40 Walmart Lancaster\", \"note\": \"\", \"Stat\": \"\", \"Prov\": \"HYG1\", \"ProvNum\": \"2\", \"Amount\": \"\", \"ProcCode\": \"\", \"User\": \"\", \"Signed\": \"\", \"Length\": \"\", \"Abbr\": \"\", \"Clinic\": \"\", \"ClinicNum\": \"0\" }, { \"ObjectType\": \"Sheet\", \"PrimaryKey\": \"37\", \"Date\": \"02/08/2022\", \"Time\": \"3:27p\", \"DateTime\": \"2/8/2022 3:27:00 PM\", \"Th\": \"\", \"Surf\": \"\", \"Dx\": \"\", \"Description\": \"PatientLetter\", \"note\": \"\", \"Stat\": \"\", \"Prov\": \"\", \"ProvNum\": \"\", \"Amount\": \"\", \"ProcCode\": \"\", \"User\": \"\", \"Signed\": \"\", \"Length\": \"\", \"Abbr\": \"\", \"Clinic\": \"\", \"ClinicNum\": \"0\" }, etc... ] 200 OK 404 Not Found (\"Patient not found\")","body":{"mode":"raw","raw":"[ { \"ObjectType\": \"Appointment\", \"PrimaryKey\": \"147\", \"Date\": \"12/21/2021\", \"Time\": \"11:40a\", \"DateTime\": \"12/21/2021 11:40:00 AM\", \"Th\": \"\", \"Surf\": \"\", \"Dx\": \"\", \"Description\": \"Appointment - 11:40 AM PA\", \"note\": \"\", \"Stat\": \"\", \"Prov\": \"\", \"ProvNum\": \"\", \"Amount\": \"\", \"ProcCode\": \"\", \"User\": \"\", \"Signed\": \"\", \"Length\": \"0:10\", \"Abbr\": \"\", \"Clinic\": \"\", \"ClinicNum\": \"3\" }, { \"ObjectType\": \"Procedure\", \"PrimaryKey\": \"153\", \"Date\": \"12/21/2021\", \"Time\": \"\", \"DateTime\": \"12/21/2021 12:00:00 AM\", \"Th\": \"\", \"Surf\": \"\", \"Dx\": \"\", \"Description\": \"PA\", \"note\": \"\", \"Stat\": \"TP\", \"Prov\": \"Doc3\", \"ProvNum\": \"10\", \"Amount\": \"24.00\", \"ProcCode\": \"D0220\", \"User\": \"\", \"Signed\": \"\", \"Length\": \"\", \"Abbr\": \"PA\", \"Clinic\": \"Downtown Office\", \"ClinicNum\": \"3\" }, { \"ObjectType\": \"Commlog\", \"PrimaryKey\": \"122\", \"Date\": \"02/08/2022\", \"Time\": \"3:18p\", \"DateTime\": \"2/8/2022 3:18:00 PM\", \"Th\": \"\", \"Surf\": \"\", \"Dx\": \"\", \"Description\": \"Comm - ApptRelated\", \"note\": \"Confirmed upcoming appointment. Asked to arrive 15 minutes early for paperwork.\", \"Stat\": \"\", \"Prov\": \"\", \"ProvNum\": \"\", \"Amount\": \"\", \"ProcCode\": \"\", \"User\": \"Admin\", \"Signed\": \"Signed\", \"Length\": \"\", \"Abbr\": \"\", \"Clinic\": \"\", \"ClinicNum\": \"0\" }, { \"ObjectType\": \"Task\", \"PrimaryKey\": \"52\", \"Date\": \"2/8/2022\", \"Time\": \"3:25p\", \"DateTime\": \"2/8/2022 3:25:56 PM\", \"Th\": \"\", \"Surf\": \"\", \"Dx\": \"\", \"Description\": \"Task - In List: People that will need a 1099\", \"note\": \"Admin - Example Task Description ==Admin - 2/8/2022 3:26 PM - Notes on the task.\", \"Stat\": \"\", \"Prov\": \"\", \"ProvNum\": \"\", \"Amount\": \"\", \"ProcCode\": \"\", \"User\": \"\", \"Signed\": \"\", \"Length\": \"\", \"Abbr\": \"\", \"Clinic\": \"\", \"ClinicNum\": \"0\" }, { \"ObjectType\": \"Email\", \"PrimaryKey\": \"212\", \"Date\": \"02/08/2022\", \"Time\": \"3:22p\", \"DateTime\": \"2/8/2022 3:22:27 PM\", \"Th\": \"\", \"Surf\": \"\", \"Dx\": \"\", \"Description\": \"Email - (unsent) Spring Newsletter\", \"note\": \" With warmer weather upon us...\", \"Stat\": \"\", \"Prov\": \"\", \"ProvNum\": \"\", \"Amount\": \"\", \"ProcCode\": \"\", \"User\": \"Admin\", \"Signed\": \"\", \"Length\": \"\", \"Abbr\": \"\", \"Clinic\": \"\", \"ClinicNum\": \"0\" }, { \"ObjectType\": \"Rx\", \"PrimaryKey\": \"81\", \"Date\": \"02/08/2022\", \"Time\": \"\", \"DateTime\": \"2/8/2022 12:00:00 AM\", \"Th\": \"\", \"Surf\": \"\", \"Dx\": \"\", \"Description\": \"Rx - Cephalexin 500 mg - #40 Walmart Lancaster\", \"note\": \"\", \"Stat\": \"\", \"Prov\": \"HYG1\", \"ProvNum\": \"2\", \"Amount\": \"\", \"ProcCode\": \"\", \"User\": \"\", \"Signed\": \"\", \"Length\": \"\", \"Abbr\": \"\", \"Clinic\": \"\", \"ClinicNum\": \"0\" }, { \"ObjectType\": \"Sheet\", \"PrimaryKey\": \"37\", \"Date\": \"02/08/2022\", \"Time\": \"3:27p\", \"DateTime\": \"2/8/2022 3:27:00 PM\", \"Th\": \"\", \"Surf\": \"\", \"Dx\": \"\", \"Description\": \"PatientLetter\", \"note\": \"\", \"Stat\": \"\", \"Prov\": \"\", \"ProvNum\": \"\", \"Amount\": \"\", \"ProcCode\": \"\", \"User\": \"\", \"Signed\": \"\", \"Length\": \"\", \"Abbr\": \"\", \"Clinic\": \"\", \"ClinicNum\": \"0\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/chartmodules/15/PatientInfo","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/chartmodules/15/PatientInfo","host":["{{url_local}}{{version_api}}"],"path":["/chartmodules/15/PatientInfo"],"query":null},"description":"ChartModules GET PatientInfo Version Added: 22.1 Gets Patient Info for a patient, similarly to how it shows in the Chart Module. Use another API method or a query to get specific details about returned elements. PatNum: Required in the URL. Returned field types are detailed below: Age: The age of the patient. ABC0: Indicates the patient's credit rating or other personal attributes discreetly. Billing Type: The patient's billing type. Referred From: Indicates a patient's referral source. Date First Visit: The date of the patient's first visit. Prov. (Pri, Sec): Comma separated abbreviations for the patient's primary provider and secondary provider, if they exist. Pri Ins: The patient's primary insurance plan. Sec Ins: The patient's secondary insurance plan. Payor Types: The system of payment (SOP code) that identifies this patient's payor status. Premedicate: Will only display for patients marked as 'Premed'. Displays any medications patients should take prior to appointments. Problems: A list of the patient's current and inactive problems. Will display as one entry with \"None\" as the content if no problems exist, or will display an entry for each of the patient's problems if at least one exists. Med Urgent: Any Med Urgent notes that have been entered for the patient will display here. Medical Summary: Any Medical Summary notes that have been entered for the patient will display here. Service Notes: Will display any entered information that has been learned through discussions with the patient, such as whether they need a blanket or pillow, nervous behavior, whether they are on a strict budget, etc. Medications: Lists the patient's medications. Will display as one entry with \"None\" as the content if no medications exist, or will display an entry for each of the patient's medications if at least one exists. Allergies: Lists the patient's known allergies. Will display as one entry with \"None\" as the content if no allergies exist, or will display an entry for each allergy associated to the patient if at least one exists. Pat Restrictions: Lists restrictions associated to the patient. Will display as one entry with \"None\" as the content if there are no restrictions, or will display an entry for each restriction's name/description if at least one exists. Example Request: GET /chartmodules/15/PatientInfo Example Response: [ { \"Field\": \"Age\", \"Content\": \"42\" }, { \"Field\": \"ABC0\", \"Content\": \"\" }, { \"Field\": \"Billing Type\", \"Content\": \"Standard Account\" }, { \"Field\": \"Referred From\", \"Content\": \"\" }, { \"Field\": \"Date First Visit\", \"Content\": \"4/30/2009\" }, { \"Field\": \"Prov. (Pri, Sec)\", \"Content\": \"DOC 1, HYG 1\" }, { \"Field\": \"Pri Ins\", \"Content\": \"Metlife\" }, { \"Field\": \"Sec Ins\", \"Content\": \"\" }, { \"Field\": \"Payor Types\", \"Content\": \"\" }, { \"Field\": \"Problem - Diabetes\", \"Content\": \"Type 2\" }, { \"Field\": \"Problem - High Blood Pressure\", \"Content\": \"\" }, { \"Field\": \"Med Urgent\", \"Content\": \"\" }, { \"Field\": \"Medical Summary\", \"Content\": \"\" }, { \"Field\": \"Service Notes\", \"Content\": \"\" }, { \"Field\": \"Medication - Acetaminophen(Aspirin)\", \"Content\": \"One in the morning, one at night\" }, { \"Field\": \"Allergy - Latex\", \"Content\": \"Induces itching\" }, { \"Field\": \"Pat Restrictions\", \"Content\": \"None\" } ] 200 OK","body":{"mode":"raw","raw":"[ { \"Field\": \"Age\", \"Content\": \"42\" }, { \"Field\": \"ABC0\", \"Content\": \"\" }, { \"Field\": \"Billing Type\", \"Content\": \"Standard Account\" }, { \"Field\": \"Referred From\", \"Content\": \"\" }, { \"Field\": \"Date First Visit\", \"Content\": \"4/30/2009\" }, { \"Field\": \"Prov. (Pri, Sec)\", \"Content\": \"DOC 1, HYG 1\" }, { \"Field\": \"Pri Ins\", \"Content\": \"Metlife\" }, { \"Field\": \"Sec Ins\", \"Content\": \"\" }, { \"Field\": \"Payor Types\", \"Content\": \"\" }, { \"Field\": \"Problem - Diabetes\", \"Content\": \"Type 2\" }, { \"Field\": \"Problem - High Blood Pressure\", \"Content\": \"\" }, { \"Field\": \"Med Urgent\", \"Content\": \"\" }, { \"Field\": \"Medical Summary\", \"Content\": \"\" }, { \"Field\": \"Service Notes\", \"Content\": \"\" }, { \"Field\": \"Medication - Acetaminophen(Aspirin)\", \"Content\": \"One in the morning, one at night\" }, { \"Field\": \"Allergy - Latex\", \"Content\": \"Induces itching\" }, { \"Field\": \"Pat Restrictions\", \"Content\": \"None\" } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/chartmodules/31/PlannedAppts","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/chartmodules/31/PlannedAppts","host":["{{url_local}}{{version_api}}"],"path":["/chartmodules/31/PlannedAppts"],"query":null},"description":"ChartModules GET PlannedAppts Version Added: 22.2 Gets Planned Appointments for a patient, similarly to how it shows in the Chart Module's Planned Appointments tab. PatNum: Required in the URL. Returned field types are detailed below: AptNum: The planned appointment's appointment.AptNum ProvNum: The provider associated with the appointment. ItemOrder: Order of the planned appointment. minutes: The length of the appointment in minutes. ProcDescript: The procedure(s) attached to this appointment. Note: Appointment Note. dateSched: DateTime of the linked scheduled appointment. AptStatus: appointment.AptStatus. Example Request: GET /chartmodules/31/PlannedAppts Example Response: [ { \"AptNum\": \"999\", \"ProvNum\": \"1\", \"ItemOrder\": \"1\", \"minutes\": \"50\", \"ProcDescript\": \"#1-MOD-C3(P)\", \"Note\": \"\", \"dateSched\": \"2022-06-20 00:00:00\", \"AptStatus\": \"Planned\" }, { \"AptNum\": \"1000\", \"ProvNum\": \"3\", \"ItemOrder\": \"2\", \"minutes\": \"40\", \"ProcDescript\": \"#19-ML-C2(P)\", \"Note\": \"Pain in LL quadrant\", \"dateSched\": \"2022-06-21 00:00:00\", \"AptStatus\": \"Planned\" } ] 200 OK 404 Not Found (\"Patient not found.\")","body":{"mode":"raw","raw":"[ { \"AptNum\": \"999\", \"ProvNum\": \"1\", \"ItemOrder\": \"1\", \"minutes\": \"50\", \"ProcDescript\": \"#1-MOD-C3(P)\", \"Note\": \"\", \"dateSched\": \"2022-06-20 00:00:00\", \"AptStatus\": \"Planned\" }, { \"AptNum\": \"1000\", \"ProvNum\": \"3\", \"ItemOrder\": \"2\", \"minutes\": \"40\", \"ProcDescript\": \"#19-ML-C2(P)\", \"Note\": \"Pain in LL quadrant\", \"dateSched\": \"2022-06-21 00:00:00\", \"AptStatus\": \"Planned\" } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API ClaimPayments","item":[{"name":"/claimpayments/1822","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/claimpayments/1822","host":["{{url_local}}{{version_api}}"],"path":["/claimpayments/1822"],"query":null},"description":"ClaimPayments GET (single) Version Added: 23.2.15 Gets a single claimpayment. Parameters: ClaimPaymentNum: Required in URL. Example Request: GET /claimpayments/1822 Example Response: { \"ClaimPaymentNum\": 1822, \"CheckDate\": \"2023-08-16\", \"CheckAmt\": \"300\", \"CheckNum\": \"2468657\", \"BankBranch\": \"Southwest Federal Bank\", \"Note\": \"\", \"ClinicNum\": 3, \"DepositNum\": 9867, \"CarrierName\": \"ODS Oregon Dental Service\", \"DateIssued\": \"2023-08-16\", \"IsPartial\": \"false\", \"PayType\": 356, \"payType\": \"Check\", \"SecUserNumEntry\": 12, \"SecDateEntry\": \"2023-08-16\", \"SecDateTEdit\": \"2023-08-21 13:00:37\", \"PayGroup\": 451, \"payGroup\": \"Lockbox 1\" } 200 OK 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"ClaimPaymentNum\": 1822, \"CheckDate\": \"2023-08-16\", \"CheckAmt\": \"300\", \"CheckNum\": \"2468657\", \"BankBranch\": \"Southwest Federal Bank\", \"Note\": \"\", \"ClinicNum\": 3, \"DepositNum\": 9867, \"CarrierName\": \"ODS Oregon Dental Service\", \"DateIssued\": \"2023-08-16\", \"IsPartial\": \"false\", \"PayType\": 356, \"payType\": \"Check\", \"SecUserNumEntry\": 12, \"SecDateEntry\": \"2023-08-16\", \"SecDateTEdit\": \"2023-08-21 13:00:37\", \"PayGroup\": 451, \"payGroup\": \"Lockbox 1\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/claimpayments?SecDateTEdit=2023-08-15%2010%3A30%3A00","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/claimpayments?SecDateTEdit=2023-08-15%2010%3A30%3A00","host":["{{url_local}}{{version_api}}"],"path":["/claimpayments?SecDateTEdit=2023-08-15%2010%3A30%3A00"],"query":null},"description":"ClaimPayments GET (multiple) Version Added: 23.2.15 Gets a list of claimpayments. Parameters: All Optional. SecDateTEdit: The last date the ClaimPayment was edited. Returns all ClaimPayments on or after this date. String in \"yyyy-MM-dd HH:mm:ss\" format. Example Requests: GET /claimpayments?SecDateTEdit=2023-08-15%2010%3A30%3A00 Example Response: [ { \"ClaimPaymentNum\": 5822, \"CheckDate\": \"2023-08-16\", \"CheckAmt\": \"300\", \"CheckNum\": \"2468657\", \"BankBranch\": \"Southwest Federal Bank\", \"Note\": \"\", \"ClinicNum\": 3, \"DepositNum\": 9867, \"CarrierName\": \"ODS Oregon Dental Service\", \"DateIssued\": \"2023-08-16\", \"IsPartial\": \"false\", \"PayType\": 356, \"payType\": \"Check\", \"SecUserNumEntry\": 12, \"SecDateEntry\": \"2023-08-16\", \"SecDateTEdit\": \"2023-08-21 13:00:37\", \"PayGroup\": 451, \"payGroup\": \"Lockbox 1\" }, { \"ClaimPaymentNum\": 5823, \"CheckDate\": \"2023-08-18\", \"CheckAmt\": \"1500.99\", \"CheckNum\": \"9876\", \"BankBranch\": \"4567-89654\", \"Note\": \"Received in Mail\", \"ClinicNum\": 3, \"DepositNum\": 0, \"CarrierName\": \"BCBS\", \"DateIssued\": \"2023-08-14\", \"IsPartial\": \"false\", \"PayType\": 356, \"payType\": \"Check\", \"SecUserNumEntry\": 11, \"SecDateEntry\": \"2023-08-18\", \"SecDateTEdit\": \"2023-08-19 12:53:39\", \"PayGroup\": 452, \"payGroup\": \"Lockbox 2\" } ] 200 OK 400 BadRequest (with explanation)","body":{"mode":"raw","raw":"[ { \"ClaimPaymentNum\": 5822, \"CheckDate\": \"2023-08-16\", \"CheckAmt\": \"300\", \"CheckNum\": \"2468657\", \"BankBranch\": \"Southwest Federal Bank\", \"Note\": \"\", \"ClinicNum\": 3, \"DepositNum\": 9867, \"CarrierName\": \"ODS Oregon Dental Service\", \"DateIssued\": \"2023-08-16\", \"IsPartial\": \"false\", \"PayType\": 356, \"payType\": \"Check\", \"SecUserNumEntry\": 12, \"SecDateEntry\": \"2023-08-16\", \"SecDateTEdit\": \"2023-08-21 13:00:37\", \"PayGroup\": 451, \"payGroup\": \"Lockbox 1\" }, { \"ClaimPaymentNum\": 5823, \"CheckDate\": \"2023-08-18\", \"CheckAmt\": \"1500.99\", \"CheckNum\": \"9876\", \"BankBranch\": \"4567-89654\", \"Note\": \"Received in Mail\", \"ClinicNum\": 3, \"DepositNum\": 0, \"CarrierName\": \"BCBS\", \"DateIssued\": \"2023-08-14\", \"IsPartial\": \"false\", \"PayType\": 356, \"payType\": \"Check\", \"SecUserNumEntry\": 11, \"SecDateEntry\": \"2023-08-18\", \"SecDateTEdit\": \"2023-08-19 12:53:39\", \"PayGroup\": 452, \"payGroup\": \"Lockbox 2\" } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/claimpayments","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/claimpayments","host":["{{url_local}}{{version_api}}"],"path":["/claimpayments"],"query":null},"description":"ClaimPayments POST Version Added: 22.4.8 Finalize a ClaimPayment for a single Claim. Only used for Check payments. Cannot use this method if the dental office has the preference ClaimPaymentBatchOnly set to true. Does not link Deposits or Attach EOBs. Prior to running this method, use ClaimProcs PUT (update) to update the Status to either \"Received\" or \"Supplemental\", and finalize the InsPayAmt. ClaimProc.InsPayAmt cannot be updated when there is already a ClaimPayment attached. Then use Claims PUT (update) to update the Claim ClaimStatus to \"R\" (Received). claimNum: Required. FK to Claim.ClaimNum that is receiving the payment. CheckAmt: Required. The amount of the check. Must match the total of the ClaimProcs' InsPayAmt for all of the ClaimProcs attached to the Claim that have a ClaimPaymentNum of 0. CheckDate: Optional. Date the check was entered into this system, not the date on the check. String in \"yyyy-MM-dd\" format. Default today's date. CheckNum: Optional. The check number. BankBranch: Optional. Bank and branch. Note: Optional. Note for this check if needed. ClinicNum: Optional. Default is the ClinicNum of the Claim. CarrierName: Optional. Default is the CarrierName attached to the InsPlan that is attached to the Claim. DateIssued: Optional. Date that the carrier issued the check. Date on the check. String in \"yyyy-MM-dd\" format. PayType: Optional. Definition.DefNum where category=32. See also Definitions: Insurance Payment Types. Default is the first definition in that Category. PayGroup: Optional. Definition.DefNum where category=40. See also Definitions: Claim Payment Groups. Default is the first definition in that Category. Example Request: POST /claimpayments { \"claimNum\": 3567, \"CheckAmt\": \"567.42\" } or { \"claimNum\": 3567, \"CheckAmt\": \"567.42\", \"CheckDate\": \"2022-10-25\", \"CheckNum\": \"1234\", \"BankBranch\": \"124-85425\", \"Note\": \"Check was lost in mail, but envelope is dated appropriately.\", \"ClinicNum\": 3, \"CarrierName\": \"Great Insurance\", \"DateIssued\": \"2022-10-20\", \"PayType\": 386, \"PayGroup\": 394 } Example Response: { \"ClaimPaymentNum\": 897, \"CheckDate\": \"10/25/2022\", \"CheckAmt\": \"567.42\", \"CheckNum\": \"1234\", \"BankBranch\": \"124-85425\", \"Note\": \"Check was lost in mail, but envelope is dated appropriately.\", \"ClinicNum\": 3, \"DepositNum\": 0, \"CarrierName\": \"Great Insurance\", \"DateIssued\": \"10/20/2022\", \"IsPartial\": \"false\", \"PayType\": 386, \"payType\": \"Check\", \"SecUserNumEntry\": 0, \"SecDateEntry\": \"10/25/2022\", \"SecDateTEdit\": \"11/10/2022 12:54:48\", \"PayGroup\": 394, \"payGroup\": \"Default\" } 201 Created 400 BadRequest (with explaination) 404 NotFound (with explaination)","body":{"mode":"raw","raw":"{ \"claimNum\": 3567, \"CheckAmt\": \"567.42\" } or { \"claimNum\": 3567, \"CheckAmt\": \"567.42\", \"CheckDate\": \"2022-10-25\", \"CheckNum\": \"1234\", \"BankBranch\": \"124-85425\", \"Note\": \"Check was lost in mail, but envelope is dated appropriately.\", \"ClinicNum\": 3, \"CarrierName\": \"Great Insurance\", \"DateIssued\": \"2022-10-20\", \"PayType\": 386, \"PayGroup\": 394 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/claimpayments/1434","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/claimpayments/1434","host":["{{url_local}}{{version_api}}"],"path":["/claimpayments/1434"],"query":null},"description":"ClaimPayments PUT Version Added: 23.2.15 Updates an existing claimpayment by ClaimPaymentNum. See Finalize Insurance Payment. ClaimPaymentNum: Required in the URL. CheckNum: Optional. The check number. BankBranch: Optional. Bank and branch. Note: Optional. Note for this check if needed. Replaces existing Note. CarrierName: Optional. Descriptive name of the carrier just for reporting purposes. PayType: Optional. Definition.DefNum where definition.Category=32. See also Definitions: Insurance Payment Types. PayGroup: Optional. Definition.DefNum where definition.Category=40. See also Definitions: Claim Payment Groups. Example Request: PUT /claimpayments/1434 { \"CheckNum\": \"758946\", \"BankBranch\": \"124-85425\", \"Note\": \"Check was lost in mail, but envelope is dated appropriately.\", \"CarrierName\": \"ODS Oregon Dental Service\", \"PayType\": 356, \"PayGroup\": 412 } Example Response: { \"ClaimPaymentNum\": 1434, \"CheckDate\": \"2023-08-16\", \"CheckAmt\": \"567.42\", \"CheckNum\": \"758946\", \"BankBranch\": \"124-85425\", \"Note\": \"Check was lost in mail, but envelope is dated appropriately.\", \"ClinicNum\": 3, \"DepositNum\": 0, \"CarrierName\": \"ODS Oregon Dental Service\", \"DateIssued\": \"2023-08-14\", \"IsPartial\": \"false\", \"PayType\": 356 \"payType\": \"Check\", \"SecUserNumEntry\": 0, \"SecDateEntry\": \"2023-08-16\", \"SecDateTEdit\": \"2023-08-17 12:53:39\", \"PayGroup\": 412, \"payGroup\": \"Default\" } 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"CheckNum\": \"758946\", \"BankBranch\": \"124-85425\", \"Note\": \"Check was lost in mail, but envelope is dated appropriately.\", \"CarrierName\": \"ODS Oregon Dental Service\", \"PayType\": 356, \"PayGroup\": 412 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API ClaimProcs","item":[{"name":"/claimprocs?ProcNum=1734730","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/claimprocs?ProcNum=1734730","host":["{{url_local}}{{version_api}}"],"path":["/claimprocs?ProcNum=1734730"],"query":null},"description":"ClaimProcs GET Version Added: 22.2.33 Gets a list of ClaimProcs. Parameters: All Optional. ProcNum: (Added in version 23.2.16) FK to procedurelog.ProcNum. ClaimNum: (Optional after version 23.2.16) FK to claim.ClaimNum. PatNum: (Optional after version 23.2.16) FK to patient.PatNum. ClaimPaymentNum: (Added in version 23.2.16) FK to claimpayment.ClaimPaymentNum. Example Request: GET /claimprocs?ProcNum=1734730 GET /claimprocs?ClaimNum=98567 GET /claimprocs?PatNum=1337&ClaimPaymentNum=6352 Example Response: [ { \"ClaimProcNum\": 1984257, \"ProcNum\": 1734730, \"ClaimNum\": 98567, \"PatNum\": 1337, \"ProvNum\": 7, \"FeeBilled\": 88.0, \"InsPayEst\": 88.0, \"DedApplied\": 10.0, \"Status\": \"Received\", \"InsPayAmt\": 78.0, \"Remarks\": \"\", \"ClaimPaymentNum\": 6352, \"PlanNum\": 12, \"DateCP\": \"2021-02-16\", \"WriteOff\": 0.0, \"CodeSent\": \"D0330\", \"AllowedOverride\": -1.0, \"Percentage\": 100, \"PercentOverride\": -1, \"CopayAmt\": -1.0, \"NoBillIns\": \"false\", \"PaidOtherIns\": 0.0, \"BaseEst\": 88.0, \"CopayOverride\": -1.0, \"ProcDate\": \"2021-02-16\", \"DateEntry\": \"0001-01-01\", \"DedEst\": 0.0, \"DedEstOverride\": -1.0, \"InsEstTotal\": 88.0, \"InsEstTotalOverride\": -1.0, \"PaidOtherInsOverride\": -1.0, \"EstimateNote\": \"\", \"WriteOffEst\": -1.0, \"WriteOffEstOverride\": -1.0, \"ClinicNum\": 2, \"InsSubNum\": 3, \"PaymentRow\": 1, \"PayPlanNum\": 0, \"ClaimPaymentTracking\": 0, \"claimPaymentTracking\": \"\", \"SecUserNumEntry\": 1, \"SecDateEntry\": \"2021-01-26\", \"SecDateTEdit\": \"2021-02-16 09:43:17\", \"DateSuppReceived\": \"2021-02-16\", \"DateInsFinalized\": \"2021-02-16\", \"IsTransfer\": \"false\", \"ClaimAdjReasonCodes\": \"\" }, { \"ClaimProcNum\": 1984258, \"ProcNum\": 1734728, \"ClaimNum\": 98567, \"PatNum\": 1337, \"ProvNum\": 7, \"FeeBilled\": 76.0, \"InsPayEst\": 76.0, \"DedApplied\": 0.0, \"Status\": \"Received\", \"InsPayAmt\": 76.0, \"Remarks\": \"\", \"ClaimPaymentNum\": 6352, \"PlanNum\": 12, \"DateCP\": \"2021-02-16\", \"WriteOff\": 0.0, \"CodeSent\": \"D1110\", \"AllowedOverride\": -1.0, \"Percentage\": 100, \"PercentOverride\": -1, \"CopayAmt\": -1.0, \"NoBillIns\": \"false\", \"PaidOtherIns\": 0.0, \"BaseEst\": 76.0, \"CopayOverride\": -1.0, \"ProcDate\": \"2021-02-16\", \"DateEntry\": \"0001-01-01\", \"DedEst\": 0.0, \"DedEstOverride\": -1.0, \"InsEstTotal\": 76.0, \"InsEstTotalOverride\": -1.0, \"PaidOtherInsOverride\": -1.0, \"EstimateNote\": \"\", \"WriteOffEst\": -1.0, \"WriteOffEstOverride\": -1.0, \"ClinicNum\": 2, \"InsSubNum\": 3, \"PaymentRow\": 1, \"PayPlanNum\": 0, \"ClaimPaymentTracking\": 0, \"claimPaymentTracking\": \"\", \"SecUserNumEntry\": 1, \"SecDateEntry\": \"2021-01-26\", \"SecDateTEdit\": \"2021-02-16 09:44:44\", \"DateSuppReceived\": \"2021-02-16\", \"DateInsFinalized\": \"2021-02-16\", \"IsTransfer\": \"false\", \"ClaimAdjReasonCodes\": \"\" }, ect. ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"ClaimProcNum\": 1984257, \"ProcNum\": 1734730, \"ClaimNum\": 98567, \"PatNum\": 1337, \"ProvNum\": 7, \"FeeBilled\": 88.0, \"InsPayEst\": 88.0, \"DedApplied\": 10.0, \"Status\": \"Received\", \"InsPayAmt\": 78.0, \"Remarks\": \"\", \"ClaimPaymentNum\": 6352, \"PlanNum\": 12, \"DateCP\": \"2021-02-16\", \"WriteOff\": 0.0, \"CodeSent\": \"D0330\", \"AllowedOverride\": -1.0, \"Percentage\": 100, \"PercentOverride\": -1, \"CopayAmt\": -1.0, \"NoBillIns\": \"false\", \"PaidOtherIns\": 0.0, \"BaseEst\": 88.0, \"CopayOverride\": -1.0, \"ProcDate\": \"2021-02-16\", \"DateEntry\": \"0001-01-01\", \"DedEst\": 0.0, \"DedEstOverride\": -1.0, \"InsEstTotal\": 88.0, \"InsEstTotalOverride\": -1.0, \"PaidOtherInsOverride\": -1.0, \"EstimateNote\": \"\", \"WriteOffEst\": -1.0, \"WriteOffEstOverride\": -1.0, \"ClinicNum\": 2, \"InsSubNum\": 3, \"PaymentRow\": 1, \"PayPlanNum\": 0, \"ClaimPaymentTracking\": 0, \"claimPaymentTracking\": \"\", \"SecUserNumEntry\": 1, \"SecDateEntry\": \"2021-01-26\", \"SecDateTEdit\": \"2021-02-16 09:43:17\", \"DateSuppReceived\": \"2021-02-16\", \"DateInsFinalized\": \"2021-02-16\", \"IsTransfer\": \"false\", \"ClaimAdjReasonCodes\": \"\" }, { \"ClaimProcNum\": 1984258, \"ProcNum\": 1734728, \"ClaimNum\": 98567, \"PatNum\": 1337, \"ProvNum\": 7, \"FeeBilled\": 76.0, \"InsPayEst\": 76.0, \"DedApplied\": 0.0, \"Status\": \"Received\", \"InsPayAmt\": 76.0, \"Remarks\": \"\", \"ClaimPaymentNum\": 6352, \"PlanNum\": 12, \"DateCP\": \"2021-02-16\", \"WriteOff\": 0.0, \"CodeSent\": \"D1110\", \"AllowedOverride\": -1.0, \"Percentage\": 100, \"PercentOverride\": -1, \"CopayAmt\": -1.0, \"NoBillIns\": \"false\", \"PaidOtherIns\": 0.0, \"BaseEst\": 76.0, \"CopayOverride\": -1.0, \"ProcDate\": \"2021-02-16\", \"DateEntry\": \"0001-01-01\", \"DedEst\": 0.0, \"DedEstOverride\": -1.0, \"InsEstTotal\": 76.0, \"InsEstTotalOverride\": -1.0, \"PaidOtherInsOverride\": -1.0, \"EstimateNote\": \"\", \"WriteOffEst\": -1.0, \"WriteOffEstOverride\": -1.0, \"ClinicNum\": 2, \"InsSubNum\": 3, \"PaymentRow\": 1, \"PayPlanNum\": 0, \"ClaimPaymentTracking\": 0, \"claimPaymentTracking\": \"\", \"SecUserNumEntry\": 1, \"SecDateEntry\": \"2021-01-26\", \"SecDateTEdit\": \"2021-02-16 09:44:44\", \"DateSuppReceived\": \"2021-02-16\", \"DateInsFinalized\": \"2021-02-16\", \"IsTransfer\": \"false\", \"ClaimAdjReasonCodes\": \"\" }, ect. ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/claimprocs/293","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/claimprocs/293","host":["{{url_local}}{{version_api}}"],"path":["/claimprocs/293"],"query":null},"description":"ClaimProcs PUT (update) Version Added: 22.3.33 ClaimProcs are complex. They are used to link procedures to claims, insurance payments to procedures or claims, and insurance estimates to procedures without a claim. See Claim Procedures ( claimprocs ) and Claim for more details. Updates a ClaimProc exactly as in Open Dental, performing the same calculations for necessary fields. All below fields are optional. However, which fields can be changed depends on the status of the ClaimProc and the Claim (if associated). Editing a received ClaimProc can delete all of the Income Transfers on the claim. Cannot update a ClaimProc that has IsTransfer set to true, or a Status of \"Adjustment\", \"InsHist\", \"CapClaim\", \"CapComplete\", or \"CapEstimate\". To update a ClaimProc with a Status of Adjustment, use ClaimProcs PUT InsAdjust. Updating a ClaimProc recalculates the claim totals of the Claim to which it's attached. BlueBook values are not updated. Override field values use -1 to represent none or blank. ClaimProcNum: Required in the URL. ProvNum: ProvNum of a provider. Follows the ProcProvChangesClaimProcWithClaim preference. See Claimproc Provider for more information. FeeBilled: The amount billed to insurance. DedApplied: Deductible applied to this procedure only. DedApplied will always match the DedEstOverride value when ClaimProc status is NotReceived or Preauth. Status: Either \"NotReceived\", \"Received\", \"Preauth\", \"Supplemental\", or \"Estimate\". When set to Received or Supplemental, ClaimProc.DateEntry will be updated to DateTime.Now. InsPayAmt: Amount insurance actually paid. Cannot be updated once the procedure is attached to a check. Remarks: The remarks that insurance sends in the EOB about procedures. Overwrites any existing Remarks. WriteOff: Amount not covered by insurance which is written off. CodeSent: The procedure code that was sent to insurance. Usually it is the same as the actual procedure code, but may be different if using alternate codes (for example: Medicaid), medical codes, or custom codes with suffixes that get removed before being sent. See also Incorrect Procedures on Claim. Use ProcedureCodes GET to get a list of valid codes. PercentOverride: The percentage that insurance is expected to cover. A number between 0 and 100. Use -1 to indicate no override. NoBillIns: (Added in version 23.2.10) Determines if the procedure should be billed to the insurance plan. Either \"true\" or \"false\". Set to true to not bill to the insurance plan and remove all estimate and override field values. CopayOverride: Based on the insurance plan's copay fee schedule, and subtracted from the amount that insurance will pay. Use -1 to indicate no override. DedEstOverride: The amount that the patient must pay each year before insurance kicks in, and always subtracted before Percentage is calculated. Use -1 to indicate no override. InsEstTotalOverride: The estimated amount that insurance will pay. If the claimproc is already attached to a claim, this will not affect the patient balance. Use -1 to indicate no override. PaidOtherInsOverride: Adds up all amounts paid by insurance plans that are lower in order. Use -1 to indicate no override. WriteOffEstOverride: WriteOff amount usually only used for PPOs. Use -1 to indicate no override. ClaimPaymentTracking: Used to document information about the payment of the procedure. Useful to track why payment was rejected. See also Definitions: Claim Payment Tracking. Definition.DefNum where definition.Category=36. Example Request: PUT /claimprocs/293 { \"Status\": \"Received\", \"InsPayAmt\": \"50.00\" } or { \"ProvNum\": 10, \"FeeBilled\": \"65.00\", \"DedApplied\": \"5\", \"Status\": \"Received\", \"InsPayAmt\": \"50.00\", \"Remarks\": \"Patient has reached their annual limit\", \"WriteOff\": \"5\", \"CodeSent\": \"D0021\", \"PercentOverride\": \"-1\", \"CopayOverride\": \"-1\", \"DedEstOverride\": \"-1\", \"InsEstTotalOverride\": \"50\", \"PaidOtherInsOverride\": \"-1\", \"WriteOffEstOverride\": \"-1\", \"ClaimPaymentTracking\": 448 } Example Response: { \"ClaimProcNum\": 293, \"ProcNum\": 966, \"ClaimNum\": 45, \"PatNum\": 72, \"ProvNum\": 10, \"FeeBilled\": 65.0, \"InsPayEst\": 50.0, \"DedApplied\": 5.0, \"Status\": \"Received\", \"InsPayAmt\": 50.0, \"Remarks\": \"Patient has reached their annual limit\", \"ClaimPaymentNum\": 0, \"PlanNum\": 3, \"DateCP\": \"2022-11-23\", \"WriteOff\": 5.0, \"CodeSent\": \"D0021\", \"AllowedOverride\": -1.0, \"Percentage\": 0, \"PercentOverride\": -1, \"CopayAmt\": -1.0, \"NoBillIns\": \"false\", \"PaidOtherIns\": 0.0, \"BaseEst\": 0.0, \"CopayOverride\": -1.0, \"ProcDate\": \"2022-12-02\", \"DateEntry\": \"2022-12-02\", \"DedEst\": 0.0, \"DedEstOverride\": -1.0, \"InsEstTotal\": 0.0, \"InsEstTotalOverride\": 50.0, \"PaidOtherInsOverride\": -1.0, \"EstimateNote\": \"\", \"WriteOffEst\": -1.0, \"WriteOffEstOverride\": -1.0, \"ClinicNum\": 3, \"InsSubNum\": 13, \"PaymentRow\": 0, \"PayPlanNum\": 0, \"ClaimPaymentTracking\": 448, \"claimPaymentTracking\": \"Paid In Full\", \"SecUserNumEntry\": 1, \"SecDateEntry\": \"2022-11-23\", \"SecDateTEdit\": \"2022-12-02 11:46:14\", \"DateSuppReceived\": \"2022-12-02\", \"DateInsFinalized\": \"0001-01-01\", \"IsTransfer\": \"false\", \"ClaimAdjReasonCodes\": \"\" } 200 OK 400 Bad Request (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"Status\": \"Received\", \"InsPayAmt\": \"50.00\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/claimprocs/InsAdjust","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/claimprocs/InsAdjust","host":["{{url_local}}{{version_api}}"],"path":["/claimprocs/InsAdjust"],"query":null},"description":"ClaimProcs PUT InsAdjust Version Added: 21.1 This adds or changes a claimproc that is acting as an insurance adjustment. PatPlanNum is required. You can obtain the PatPlanNum from FamilyModules GET Insurance. \"date\" is optional and defaults to today. It should be a date within the benefit year that you are interested in. Any adjustment that is created will also use that date. Either insUsed or deductibleUsed is Required. Pass in the total insurance and/or deductible used. The logic will take into consideration existing paid claims. For example, if payments of $200 are already entered into Open Dental, and you pass in insUsed of $300, then it will result in a $100 adjustment so that it will properly show the $300. If the insUsed passed in exactly equals payments already in Open Dental, then any existing adjustment will be deleted. The calculations do not distinguish family or lifetime benefits. PatPlanNum: Required. insUsed: This or deductibleUsed is required. deductibleUsed: This or insUsed is required. date: Optional. String in \"yyyy-MM-dd\" format. Default today's date. Example Request: PUT /claimprocs/InsAdjust { \"PatPlanNum\": 123, \"date\": \"2020-01-01\", \"insUsed\":\"300\", \"deductibleUsed\":\"25\" } Example Response: 200 OK (Regardless of how the math worked out. ClaimProcs could have been added or deleted.)","body":{"mode":"raw","raw":"{ \"PatPlanNum\": 123, \"date\": \"2020-01-01\", \"insUsed\":\"300\", \"deductibleUsed\":\"25\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/claimprocs/InsAdjust","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/claimprocs/InsAdjust","host":["{{url_local}}{{version_api}}"],"path":["/claimprocs/InsAdjust"],"query":null},"description":"ClaimProcs POST InsAdjust Version Added: 23.2.5 Creates a claimproc that is acting as an insurance adjustment. See Adjustments to Insurance Benefits for more information. PatPlanNum: Required. insUsed: Optional. Default 0. deductibleUsed: Optional. Default 0. date: Optional. String in \"yyyy-MM-dd\" format. Default today's date. Example Request: POST /claimprocs/InsAdjust { \"PatPlanNum\": 123, \"date\": \"2023-07-18\", \"insUsed\":\"300.75\", \"deductibleUsed\":\"25.99\" } Example Response: { \"ClaimProcNum\": 1117, \"ProcNum\": 0, \"ClaimNum\": 0, \"PatNum\": 72, \"ProvNum\": 0, \"FeeBilled\": 0.0, \"InsPayEst\": 0.0, \"DedApplied\": 25.99, \"Status\": \"Adjustment\", \"InsPayAmt\": 300.75, \"Remarks\": \"\", \"ClaimPaymentNum\": 0, \"PlanNum\": 38, \"DateCP\": \"0001-01-01\", \"WriteOff\": 0.0, \"CodeSent\": \"\", \"AllowedOverride\": 0.0, \"Percentage\": 0, \"PercentOverride\": 0, \"CopayAmt\": 0.0, \"NoBillIns\": \"false\", \"PaidOtherIns\": 0.0, \"BaseEst\": 0.0, \"CopayOverride\": 0.0, \"ProcDate\": \"2023-07-18\", \"DateEntry\": \"0001-01-01\", \"DedEst\": 0.0, \"DedEstOverride\": 0.0, \"InsEstTotal\": 0.0, \"InsEstTotalOverride\": 0.0, \"PaidOtherInsOverride\": 0.0, \"EstimateNote\": \"\", \"WriteOffEst\": 0.0, \"WriteOffEstOverride\": 0.0, \"ClinicNum\": 0, \"InsSubNum\": 30, \"PaymentRow\": 0, \"PayPlanNum\": 0, \"ClaimPaymentTracking\": 0, \"claimPaymentTracking\": \"\", \"SecUserNumEntry\": 0, \"SecDateEntry\": \"2023-08-01\", \"SecDateTEdit\": \"2023-08-01 14:41:25\", \"DateSuppReceived\": \"0001-01-01\", \"DateInsFinalized\": \"0001-01-01\", \"IsTransfer\": \"false\", \"ClaimAdjReasonCodes\": \"\" } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PatPlanNum\": 123, \"date\": \"2023-07-18\", \"insUsed\":\"300.75\", \"deductibleUsed\":\"25.99\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Claims","item":[{"name":"/claims/1","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/claims/1","host":["{{url_local}}{{version_api}}"],"path":["/claims/1"],"query":null},"description":"Claims GET (single) Version Added: 23.3.11 Gets a single claim. Parameters: ClaimNum: Required in URL. Example Request: GET /claims/1 Example Response: { \"ClaimNum\": 1, \"PatNum\": 23, \"DateService\": \"2022-07-16\", \"DateSent\": \"2022-07-18\", \"ClaimStatus\": \"R\", \"DateReceived\": \"2022-07-29\", \"PlanNum\": 19, \"ProvTreat\": 1, \"ClaimFee\": 250.0, \"InsPayEst\": 200.0, \"InsPayAmt\": 200.0, \"DedApplied\": 0.0, \"IsProsthesis\": \"N\", \"PriorDate\": \"0001-01-01\", \"ReasonUnderPaid\": \"\", \"ClaimNote\": \"Insurance payment of $200\", \"ClaimType\": \"P\", \"ProvBill\": 1, \"PlaceService\": \"Office\", \"AccidentRelated\": \"\", \"AccidentDate\": \"0001-01-01\", \"AccidentST\": \"\", \"IsOrtho\": \"True\", \"OrthoRemainM\": 0, \"OrthoDate\": \"2021-03-10\", \"PatRelat\": \"Self\", \"PlanNum2\": 0, \"PatRelat2\": \"Self\", \"WriteOff\": 0.0, \"ClaimForm\": \"4\", \"InsSubNum\": \"24\", \"InsSubNum2\": \"0\", \"PriorAuthorizationNumber\": \"\", \"OrthoTotalM\": 20, \"SecDateTEdit\": \"2022-07-29 11:55:44\" } 200 OK 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"ClaimNum\": 1, \"PatNum\": 23, \"DateService\": \"2022-07-16\", \"DateSent\": \"2022-07-18\", \"ClaimStatus\": \"R\", \"DateReceived\": \"2022-07-29\", \"PlanNum\": 19, \"ProvTreat\": 1, \"ClaimFee\": 250.0, \"InsPayEst\": 200.0, \"InsPayAmt\": 200.0, \"DedApplied\": 0.0, \"IsProsthesis\": \"N\", \"PriorDate\": \"0001-01-01\", \"ReasonUnderPaid\": \"\", \"ClaimNote\": \"Insurance payment of $200\", \"ClaimType\": \"P\", \"ProvBill\": 1, \"PlaceService\": \"Office\", \"AccidentRelated\": \"\", \"AccidentDate\": \"0001-01-01\", \"AccidentST\": \"\", \"IsOrtho\": \"True\", \"OrthoRemainM\": 0, \"OrthoDate\": \"2021-03-10\", \"PatRelat\": \"Self\", \"PlanNum2\": 0, \"PatRelat2\": \"Self\", \"WriteOff\": 0.0, \"ClaimForm\": \"4\", \"InsSubNum\": \"24\", \"InsSubNum2\": \"0\", \"PriorAuthorizationNumber\": \"\", \"OrthoTotalM\": 20, \"SecDateTEdit\": \"2022-07-29 11:55:44\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/claims?PatNum=23","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/claims?PatNum=23","host":["{{url_local}}{{version_api}}"],"path":["/claims?PatNum=23"],"query":null},"description":"Claims GET (multiple) Version Added: 22.2 Gets a list of claims. Parameters: PatNum: (Optional after version 23.3.11) FK to patient.PatNum. ClaimStatus: (Added in version 23.3.11) Single character. \"U\" for Unsent, \"H\" for Hold until pri received, \"W\" for Waiting in queue, \"S\" for Sent, \"R\" for Received or \"I\" for Hold for In Process. SecDateTEdit: (Added in version 23.3.11) In \"yyyy-mm-dd HH:mm:ss\" format. The date the claim was last edited. Returns all claims on or after this date. Example Request: GET /claims?PatNum=23 GET /claims?ClaimStatus=S GET /claims?SecDateTEdit=2022-03-30 00:00:00 Example Response: [ { \"ClaimNum\": 1, \"PatNum\": 23, \"DateService\": \"2022-07-16\", \"DateSent\": \"2022-07-18\", \"ClaimStatus\": \"R\", \"DateReceived\": \"2022-07-29\", \"PlanNum\": 19, \"ProvTreat\": 1, \"ClaimFee\": 250.0, \"InsPayEst\": 200.0, \"InsPayAmt\": 200.0, \"DedApplied\": 0.0, \"IsProsthesis\": \"N\", \"PriorDate\": \"0001-01-01\", \"ReasonUnderPaid\": \"\", \"ClaimNote\": \"Insurance payment of $200\", \"ClaimType\": \"P\", \"ProvBill\": 1, \"PlaceService\": \"Office\", \"AccidentRelated\": \"\", \"AccidentDate\": \"0001-01-01\", \"AccidentST\": \"\", \"IsOrtho\": \"True\", \"OrthoRemainM\": 0, \"OrthoDate\": \"2021-03-10\", \"PatRelat\": \"Self\", \"PlanNum2\": 0, \"PatRelat2\": \"Self\", \"WriteOff\": 0.0, \"ClaimForm\": \"4\", \"InsSubNum\": \"24\", \"InsSubNum2\": \"0\", \"PriorAuthorizationNumber\": \"\", \"OrthoTotalM\": 20, \"SecDateTEdit\": \"2022-07-29 11:55:44\" }, { \"ClaimNum\": 2, \"PatNum\": 23, \"DateService\": \"2022-07-16\", \"DateSent\": \"0001-01-01\", \"ClaimStatus\": \"W\", \"DateReceived\": \"0001-01-01\", \"PlanNum\": 19, \"ProvTreat\": 1, \"ClaimFee\": 90.0, \"InsPayEst\": 0.0, \"InsPayAmt\": 0.0, \"DedApplied\": 0.0, \"IsProsthesis\": \"N\", \"PriorDate\": \"0001-01-01\", \"ReasonUnderPaid\": \"\", \"ClaimNote\": \"\", \"ClaimType\": \"P\", \"ProvBill\": 5, \"PlaceService\": \"OtherLocation\", \"AccidentRelated\": \"A\", \"AccidentDate\": \"2022-05-20\", \"AccidentST\": \"OR\", \"IsOrtho\": \"False\", \"OrthoRemainM\": 0, \"OrthoDate\": \"0001-01-01\", \"PatRelat\": \"Self\", \"PlanNum2\": 0, \"PatRelat2\": \"Self\", \"WriteOff\": 0.0, \"ClaimForm\": \"4\", \"InsSubNum\": \"24\", \"InsSubNum2\": \"0\", \"PriorAuthorizationNumber\": \"6128612926\", \"OrthoTotalM\": 0, \"SecDateTEdit\": \"2022-07-16 11:55:44\" }, { \"ClaimNum\": 3, \"PatNum\": 23, \"DateService\": \"2022-07-16\", \"DateSent\": \"0001-01-01\", \"ClaimStatus\": \"S\", \"DateReceived\": \"0001-01-01\", \"PlanNum\": 19, \"ProvTreat\": 2, \"ClaimFee\": 49.5, \"InsPayEst\": 0.0, \"InsPayAmt\": 0.0, \"DedApplied\": 0.0, \"IsProsthesis\": \"R\", \"PriorDate\": \"2016-01-15\", \"ReasonUnderPaid\": \"\", \"ClaimNote\": \"\", \"ClaimType\": \"P\", \"ProvBill\": 1, \"PlaceService\": \"Office\", \"AccidentRelated\": \"\", \"AccidentDate\": \"0001-01-01\", \"AccidentST\": \"\", \"IsOrtho\": \"False\", \"OrthoRemainM\": 0, \"OrthoDate\": \"0001-01-01\", \"PatRelat\": \"Self\", \"PlanNum2\": 0, \"PatRelat2\": \"Self\", \"WriteOff\": 0.0, \"ClaimForm\": \"4\", \"InsSubNum\": \"24\", \"InsSubNum2\": \"0\", \"PriorAuthorizationNumber\": \"\", \"OrthoTotalM\": 0, \"SecDateTEdit\": \"2022-07-16 11:55:44\" } ] 200 OK 400 BadRequest (with explanation) 404 NotFound \"Patient not found.\"","body":{"mode":"raw","raw":"[ { \"ClaimNum\": 1, \"PatNum\": 23, \"DateService\": \"2022-07-16\", \"DateSent\": \"2022-07-18\", \"ClaimStatus\": \"R\", \"DateReceived\": \"2022-07-29\", \"PlanNum\": 19, \"ProvTreat\": 1, \"ClaimFee\": 250.0, \"InsPayEst\": 200.0, \"InsPayAmt\": 200.0, \"DedApplied\": 0.0, \"IsProsthesis\": \"N\", \"PriorDate\": \"0001-01-01\", \"ReasonUnderPaid\": \"\", \"ClaimNote\": \"Insurance payment of $200\", \"ClaimType\": \"P\", \"ProvBill\": 1, \"PlaceService\": \"Office\", \"AccidentRelated\": \"\", \"AccidentDate\": \"0001-01-01\", \"AccidentST\": \"\", \"IsOrtho\": \"True\", \"OrthoRemainM\": 0, \"OrthoDate\": \"2021-03-10\", \"PatRelat\": \"Self\", \"PlanNum2\": 0, \"PatRelat2\": \"Self\", \"WriteOff\": 0.0, \"ClaimForm\": \"4\", \"InsSubNum\": \"24\", \"InsSubNum2\": \"0\", \"PriorAuthorizationNumber\": \"\", \"OrthoTotalM\": 20, \"SecDateTEdit\": \"2022-07-29 11:55:44\" }, { \"ClaimNum\": 2, \"PatNum\": 23, \"DateService\": \"2022-07-16\", \"DateSent\": \"0001-01-01\", \"ClaimStatus\": \"W\", \"DateReceived\": \"0001-01-01\", \"PlanNum\": 19, \"ProvTreat\": 1, \"ClaimFee\": 90.0, \"InsPayEst\": 0.0, \"InsPayAmt\": 0.0, \"DedApplied\": 0.0, \"IsProsthesis\": \"N\", \"PriorDate\": \"0001-01-01\", \"ReasonUnderPaid\": \"\", \"ClaimNote\": \"\", \"ClaimType\": \"P\", \"ProvBill\": 5, \"PlaceService\": \"OtherLocation\", \"AccidentRelated\": \"A\", \"AccidentDate\": \"2022-05-20\", \"AccidentST\": \"OR\", \"IsOrtho\": \"False\", \"OrthoRemainM\": 0, \"OrthoDate\": \"0001-01-01\", \"PatRelat\": \"Self\", \"PlanNum2\": 0, \"PatRelat2\": \"Self\", \"WriteOff\": 0.0, \"ClaimForm\": \"4\", \"InsSubNum\": \"24\", \"InsSubNum2\": \"0\", \"PriorAuthorizationNumber\": \"6128612926\", \"OrthoTotalM\": 0, \"SecDateTEdit\": \"2022-07-16 11:55:44\" }, { \"ClaimNum\": 3, \"PatNum\": 23, \"DateService\": \"2022-07-16\", \"DateSent\": \"0001-01-01\", \"ClaimStatus\": \"S\", \"DateReceived\": \"0001-01-01\", \"PlanNum\": 19, \"ProvTreat\": 2, \"ClaimFee\": 49.5, \"InsPayEst\": 0.0, \"InsPayAmt\": 0.0, \"DedApplied\": 0.0, \"IsProsthesis\": \"R\", \"PriorDate\": \"2016-01-15\", \"ReasonUnderPaid\": \"\", \"ClaimNote\": \"\", \"ClaimType\": \"P\", \"ProvBill\": 1, \"PlaceService\": \"Office\", \"AccidentRelated\": \"\", \"AccidentDate\": \"0001-01-01\", \"AccidentST\": \"\", \"IsOrtho\": \"False\", \"OrthoRemainM\": 0, \"OrthoDate\": \"0001-01-01\", \"PatRelat\": \"Self\", \"PlanNum2\": 0, \"PatRelat2\": \"Self\", \"WriteOff\": 0.0, \"ClaimForm\": \"4\", \"InsSubNum\": \"24\", \"InsSubNum2\": \"0\", \"PriorAuthorizationNumber\": \"\", \"OrthoTotalM\": 0, \"SecDateTEdit\": \"2022-07-16 11:55:44\" } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/claims","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/claims","host":["{{url_local}}{{version_api}}"],"path":["/claims"],"query":null},"description":"Claims POST (create) Version Added: 23.2.5 Creates a new claim. See Claims, Preauthorization, and Insurance Plan for more information. Use Claims PUT to modify additional fields on the claim. Use ClaimProcs PUT to modify the Claim Procedures ( claimprocs ) attached to the claim. The insurance plan specified must be associated with the patient. Creating a primary or secondary claim will use the patient's primary or secondary insurance respectively. PatNum: Required. FK to patient.PatNum. procNums: Required. An array of ProcNums, in [1,2,3] format to attach to this Claim. ClaimType: Required. Either \"P\" for primary, \"S\" for secondary, or \"PreAuth\" for preauthorization. InsSubNum: Required only when ClaimType is \"PreAuth\". FK to inssub.InsSubNum. The insurance plan used for the claim. Default to the patient's primary or secondary insurance on file when creating a primary or secondary claim. InsSubNum2: Optional. FK to inssub.InsSubNum. The \"Other Coverage\" insurance for the claim. Default to 0. PatRelat: Required only when ClaimType is \"PreAuth\". Either \"Self\", \"Spouse\", \"Child\", \"Employee\", \"HandicapDep\", \"SignifOther\", \"InjuredPlaintiff\", \"LifePartner\", or \"Dependent\". Default to the patient's relationship to the plan's subscriber for primary and secondary claims. PatRelat2: Optional. Either \"Self\", \"Spouse\", \"Child\", \"Employee\", \"HandicapDep\", \"SignifOther\", \"InjuredPlaintiff\", \"LifePartner\", or \"Dependent\". If using InSubNum2, will default to the patient's relationship to the plan's subscriber. DateService: Optional. String in \"yyyy-MM-dd\" format. Default to same date as earliest procedure from procNums array. Ignored if ClaimType is \"PreAuth\". DateSent: Optional. String in \"yyyy-MM-dd\" format. Default to today. ClaimForm: Optional. FK to claimform.ClaimFormNum. Default to ClaimForm attached to Insurance Plan. ProvTreat: Optional. FK to provider.ProvNum. Default to same treating provider when creating a claim in Open Dental. ProvBill: Optional. FK to provider.ProvNum. Default to same billing provider when creating a claim in Open Dental. Example Request: POST /claims { \"PatNum\": 1337, \"procNums\": [12857, 12859, 12952], \"ClaimType\": \"P\" } or { \"PatNum\": 1337, \"procNums\": [12857, 12859, 12952], \"ClaimType\": \"PreAuth\", \"InsSubNum\": 894, \"PatRelat\": \"Employee\" } or { \"PatNum\": 1337, \"procNums\": [12857, 12859, 12952], \"ClaimType\": \"PreAuth\", \"InsSubNum\": 894, \"InsSubNum2\": 856, \"PatRelat\": \"Self\", \"PatRelat2\": \"Spouse\", \"DateService\": \"2023-05-19\", \"DateSent\": \"2023-05-21\", \"ClaimForm\": 19, \"ProvTreat\": 8, \"ProvBill\": 2 } Example Response: { \"ClaimNum\": 35879 \"PatNum\": 1337, \"DateService\": \"0001-01-01\", \"DateSent\": \"2023-05-21\", \"ClaimStatus\": \"W\", \"DateReceived\": \"0001-01-01\", \"PlanNum\": 31, \"ProvTreat\": 8, \"ClaimFee\": 295.5, \"InsPayEst\": 220.0, \"InsPayAmt\": 0.0, \"DedApplied\": 0.0, \"IsProsthesis\": \"N\", \"PriorDate\": \"0001-01-01\", \"ReasonUnderPaid\": \"\", \"ClaimNote\": \"\", \"ClaimType\": \"PreAuth\", \"ProvBill\": 2, \"PlaceService\": \"Office\", \"AccidentRelated\": \"\", \"AccidentDate\": \"0001-01-01\", \"AccidentST\": \"\", \"IsOrtho\": \"False\", \"OrthoRemainM\": 0, \"OrthoDate\": \"0001-01-01\", \"PatRelat\": \"Self\", \"PlanNum2\": 28, \"PatRelat2\": \"Spouse\", \"WriteOff\": 0.0, \"ClaimForm\": \"19\", \"InsSubNum\": \"894\", \"InsSubNum2\": \"856\", \"PriorAuthorizationNumber\": \"\", \"OrthoTotalM\": 0, \"SecDateTEdit\": \"2023-05-21 10:25:44\" } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PatNum\": 1337, \"procNums\": [12857, 12859, 12952], \"ClaimType\": \"P\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/claims/21","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/claims/21","host":["{{url_local}}{{version_api}}"],"path":["/claims/21"],"query":null},"description":"Claims PUT (update) Version Added: 21.4 All fields are optional and it is common to only set one or two fields. ClaimNum: Required in the URL. ClaimStatus: Single character. \"U\" for Unsent, \"H\" for Hold until pri received, \"W\" for Waiting in queue, \"S\" for Sent or \"R\" for Received. DateReceived: Date the claim was received. String in \"yyyy-MM-dd\" format. ProvTreat: ProvNum of treating provider for dental claims. IsProsthesis: Single character. \"N\" for No, \"I\" for Initial or \"R\" for Replacement. PriorDate: Date prior prosthesis was placed. This is only for paper claims. E-claims have a date field on each individual procedure. String in \"yyyy-MM-dd\" format. ClaimNote: Note to be sent to insurance. E-Claims have notes on each procedure. Will overwrite existing note. ReasonUnderPaid: (Added in version 22.3.31) Note on a patient's statement explaining why the insurance does not pay as much as expected. Will overwrite existing note. ProvBill: ProvNum of billing provider. PlaceService: Service location. Usually \"Office\". See Database Schema for other options. AccidentRelated: Type of accident. \"No\" for No, \"A\" for Auto, \"E\" for Employment, or \"O\" for Other. AccidentDate: (Added in version 22.1) Date of accident. String in \"yyyy-MM-dd\" format. AccidentST: Accident state. Two characters. IsOrtho: Either \"true\" or \"false\". OrthoRemainM: (Added in version 23.2.18) Remaining months of ortho. Valid values are 1-36. OrthoDate: Date the ortho appliance was placed. Cannot change date if \"Use the first ortho procedure date as Date of Placement\" pref is enabled during Ortho Setup. String in \"yyyy-MM-dd\" format. ClaimForm: FK to claimform.ClaimFormNum. Is 0 if not assigned to use the claimform for the insplan. PriorAuthorizationNumber: (Rare) Also called the preauthorization number. Typically used for medical claims. This is NOT the predetermination of benefits number. OrthoTotalM: Estimated months of ortho. Valid values are 1-36. Example Request: PUT /claims/21 { \"ClaimStatus\":\"R\", \"DateReceived\":\"2021-05-25\", \"ProvTreat\":1, \"IsProsthesis\":\"N\", \"PriorDate\":\"2020-06-26\", \"ClaimNote\":\"Existing RCT from 2019-05-14.\", \"ProvBill\":1, \"PlaceService\":\"Office\", \"AccidentRelated\":\"O\", \"AccidentDate\":\"2021-05-15\", \"AccidentST\":\"MO\", \"IsOrtho\":\"true\", \"OrthoRemainM\":12, \"OrthoDate\":\"2021-05-25\", \"ClaimForm\":0, \"PriorAuthorizationNumber\":\"6549848516\", \"OrthoTotalM\":36 } Example Response: 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"ClaimStatus\":\"R\", \"DateReceived\":\"2021-05-25\", \"ProvTreat\":1, \"IsProsthesis\":\"N\", \"PriorDate\":\"2020-06-26\", \"ClaimNote\":\"Existing RCT from 2019-05-14.\", \"ProvBill\":1, \"PlaceService\":\"Office\", \"AccidentRelated\":\"O\", \"AccidentDate\":\"2021-05-15\", \"AccidentST\":\"MO\", \"IsOrtho\":\"true\", \"OrthoRemainM\":12, \"OrthoDate\":\"2021-05-25\", \"ClaimForm\":0, \"PriorAuthorizationNumber\":\"6549848516\", \"OrthoTotalM\":36 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/claims/26/Status","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/claims/26/Status","host":["{{url_local}}{{version_api}}"],"path":["/claims/26/Status"],"query":null},"description":"Claims PUT Status Version Added: 21.3 Sets the ClaimStatus of a claim to \"Sent\" and automatically creates an Etrans entry. ClaimNum: Required in the URL. DateSent: Required. Date the claim was most recently sent. String in \"yyyy-MM-dd\" format.\" DateSentOrig: Optional. String in \"yyyy-MM-dd\" format. Defaults to DateSent. Will be ignored for claims that have been marked as \"Sent\" previously. Example Requests: PUT /claims/26/Status { \"DateSent\": \"2021-09-13\" } { \"DateSent\": \"2021-09-13\", \"DateSentOrig\": \"2021-09-01\" } Example Response: 200 OK 400 BadRequest (Missing or invalid fields) 404 NotFound \"Claim not found\"","body":{"mode":"raw","raw":"{ \"DateSent\": \"2021-09-13\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/claims/26/Split","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/claims/26/Split","host":["{{url_local}}{{version_api}}"],"path":["/claims/26/Split"],"query":null},"description":"Claims PUT Split Version Added: 22.1 Splits an existing claim. Moves the specified procedure(s) sent with the request from the original claim to a newly created one. Use Claims GET and ClaimProcs GET to obtain ClaimNum and ProcNums of desired procedures. ClaimNum: Required in the URL. ProcNums: Required. An array of ProcNums, in [1,2,3] format. Example Requests: PUT /claims/26/Split { \"ProcNums\": [153, 154, 155] } Example Response: { \"ClaimNum\": 27, \"ProcNums\": [153, 154, 155] } 201 Created 400 BadRequest (Missing or invalid fields) 404 NotFound","body":{"mode":"raw","raw":"{ \"ProcNums\": [153, 154, 155] }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/claims/26","item":null,"description":null,"request":{"method":"DELETE","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/claims/26","host":["{{url_local}}{{version_api}}"],"path":["/claims/26"],"query":null},"description":"Claims DELETE Version Added: 22.1 Deletes a claim. Will not delete claims with insurance payments/checks attached or have a status of Received. If the claim is attached to at least one ERA it will unassociate from the ERA(s) before deleting. ClaimNum: Required in the URL. Example Requests: DELETE /claims/26 Example Response: 200 OK 400 BadRequest (with explanation) 404 NotFound","body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API ClaimTrackings","item":[{"name":"/claimtrackings","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/claimtrackings","host":["{{url_local}}{{version_api}}"],"path":["/claimtrackings"],"query":null},"description":"ClaimTrackings GET Version Added: 23.2.5 Gets a list of ClaimTrackings. ClaimNum: Optional. FK to claim.ClaimNum. Example Requests: GET /claimtrackings GET /claimtrackings?ClaimNum=25 Example Response: [ { \"ClaimTrackingNum\": 45, \"ClaimNum\": 19, \"TrackingType\": \"StatusHistory\", \"UserNum\": 1, \"DateTimeEntry\": \"2023-07-20 14:05:45\", \"Note\": \"\", \"TrackingDefNum\": 345, \"TrackingErrorDefNum\": 343 }, { \"ClaimTrackingNum\": 46, \"ClaimNum\": 3, \"TrackingType\": \"StatusHistory\", \"UserNum\": 1, \"DateTimeEntry\": \"2023-07-20 13:23:20\", \"Note\": \"\", \"TrackingDefNum\": 341, \"TrackingErrorDefNum\": 0 }, { \"ClaimTrackingNum\": 34, \"ClaimNum\": 1, \"TrackingType\": \"StatusHistory\", \"UserNum\": 1, \"DateTimeEntry\": \"2023-07-20 13:22:19\", \"Note\": \"\", \"TrackingDefNum\": 0, \"TrackingErrorDefNum\": 0 }, etc... ] 200 OK 404 NotFound (Claim not found)","body":{"mode":"raw","raw":"[ { \"ClaimTrackingNum\": 45, \"ClaimNum\": 19, \"TrackingType\": \"StatusHistory\", \"UserNum\": 1, \"DateTimeEntry\": \"2023-07-20 14:05:45\", \"Note\": \"\", \"TrackingDefNum\": 345, \"TrackingErrorDefNum\": 343 }, { \"ClaimTrackingNum\": 46, \"ClaimNum\": 3, \"TrackingType\": \"StatusHistory\", \"UserNum\": 1, \"DateTimeEntry\": \"2023-07-20 13:23:20\", \"Note\": \"\", \"TrackingDefNum\": 341, \"TrackingErrorDefNum\": 0 }, { \"ClaimTrackingNum\": 34, \"ClaimNum\": 1, \"TrackingType\": \"StatusHistory\", \"UserNum\": 1, \"DateTimeEntry\": \"2023-07-20 13:22:19\", \"Note\": \"\", \"TrackingDefNum\": 0, \"TrackingErrorDefNum\": 0 }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/claimtrackings","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/claimtrackings","host":["{{url_local}}{{version_api}}"],"path":["/claimtrackings"],"query":null},"description":"ClaimTrackings POST (create) Version Added: 23.2.5 Creates a new ClaimTracking. Requires one-time setup by the Dental Office, see Edit Claim - Status History Tab. ClaimNum: Required. FK to claim.ClaimNum. Note: Optional. Default empty string. TrackingDefNum: Required and cannot be 0 if the ClaimTrackingStatusExcludesNone preference is enabled. If not enabled, TrackingDefNum is optional and defaults to 0 (None). Definition.DefNum where definition.Category=31. TrackingErrorDefNum: Optional. Definition.DefNum where definition.Category=43. Default 0. Example Request: POST /claimtrackings { \"ClaimNum\": 15, \"Note\": \"Missing attachment.\", \"TrackingDefNum\": 339, \"TrackingErrorDefNum\": 340 } Example Response: { \"ClaimTrackingNum\": 52, \"ClaimNum\": 15, \"TrackingType\": \"StatusHistory\", \"UserNum\": 0, \"DateTimeEntry\": \"2023-07-26 09:47:10\", \"Note\": \"Missing attachment.\", \"TrackingDefNum\": 339, \"TrackingErrorDefNum\": 340 } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"ClaimNum\": 15, \"Note\": \"Missing attachment.\", \"TrackingDefNum\": 339, \"TrackingErrorDefNum\": 340 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/claimtrackings/52","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/claimtrackings/52","host":["{{url_local}}{{version_api}}"],"path":["/claimtrackings/52"],"query":null},"description":"ClaimTrackings PUT (update) Version Added: 23.2.5 Updates an existing ClaimTracking. ClaimTrackingNum: Required in the URL. Primary key. Note: Optional. Overwrites existing note. TrackingDefNum: Optional. Definition.DefNum where definition.Category=31. Cannot be 0 if the ClaimTrackingStatusExcludesNone preference is enabled. Use 0 to indicate None. TrackingErrorDefNum: Optional. Definition.DefNum where definition.Category=43. Use 0 to indicate None. Example Request: PUT /claimtrackings/52 { \"Note\": \"Attachments sent.\", \"TrackingDefNum\": 341, \"TrackingErrorDefNum\": 0 } Example Responses: { \"ClaimTrackingNum\": 52, \"ClaimNum\": 15, \"TrackingType\": \"StatusHistory\", \"UserNum\": 0, \"DateTimeEntry\": \"2023-07-26 10:00:54\", \"Note\": \"Attachments sent.\", \"TrackingDefNum\": 341, \"TrackingErrorDefNum\": 0 } 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"Note\": \"Attachments sent.\", \"TrackingDefNum\": 341, \"TrackingErrorDefNum\": 0 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Clinics","item":[{"name":"/clinics","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/clinics","host":["{{url_local}}{{version_api}}"],"path":["/clinics"],"query":null},"description":"Clinics GET Version Added: 21.1 Gets all non-hidden clinics. An empty list indicates the dental office does not utilize the Clinics feature. Example Request: GET /clinics Example Response: [ { \"ClinicNum\": 1, \"Description\": \"Clinic1\", \"Address\": \"333 Blackwood St\", \"Address2\": \"\", \"City\": \"Salem\", \"State\": \"Oregon\", \"Zip\": \"97301\", \"BillingAddress\": \"333 Blackwood St \", \"BillingAddress2\": \"\", \"BillingCity\": \" Salem \", \"BillingState\": \" Oregon \", \"BillingZip\": \"97301\", \"PayToAddress\": \"\", \"PayToAddress2\": \"\", \"PayToCity\": \"\", \"PayToState\": \"\", \"PayToZip\": \"\", \"Phone\": \"5105552005\", \"Abbr\": \"Clinic1\", \"IsHidden\": \"false\" } ]","body":{"mode":"raw","raw":"[ { \"ClinicNum\": 1, \"Description\": \"Clinic1\", \"Address\": \"333 Blackwood St\", \"Address2\": \"\", \"City\": \"Salem\", \"State\": \"Oregon\", \"Zip\": \"97301\", \"BillingAddress\": \"333 Blackwood St \", \"BillingAddress2\": \"\", \"BillingCity\": \" Salem \", \"BillingState\": \" Oregon \", \"BillingZip\": \"97301\", \"PayToAddress\": \"\", \"PayToAddress2\": \"\", \"PayToCity\": \"\", \"PayToState\": \"\", \"PayToZip\": \"\", \"Phone\": \"5105552005\", \"Abbr\": \"Clinic1\", \"IsHidden\": \"false\" } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/clinics/5","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/clinics/5","host":["{{url_local}}{{version_api}}"],"path":["/clinics/5"],"query":null},"description":"Clinics PUT (update) Version Added: 21.4 Updates general contact and billing information for a clinic. ClinicNum: Required in the URL. Description: Clinic Name. Will show on statements, letters, etc. Phone: Clinic phone number. Exactly 10 digits. Does not include punctuation. BillingAddress: The billing address used on claims if different than physical treating address. This address will be used on claims if \"Use on Claims\" is checked. If checked, the address cannot be a PO Box for e-claims. BillingAddress2: Second BillingAddress line. BillingCity: City. BillingState: State. BillingZip: Postal Code. PayToAddress: The address where insurance payments will go if different than physical treating address. This can be a PO Box. It will be used as the billing address on claims. If the billing address is also entered, and \"Use on Claims\" is checked, the pay to address is sent with the address on e-claims but overrides the billing address on printed claims. PayToAddress2: Second PayToAddress line. PayToCity: City. PayToState: State. PayToZip: Postal Code. Abbr: Abbreviation for the Clinic's description. Will show in dropdowns and pick lists throughout Open Dental. IsHidden: Indicates whether or not the clinic is hidden. Clinic cannot be hidden if patients are attached. Either \"true\" or \"false\". Example Request: PUT /clinics/5 { \"Description\":\"Clinic 5\", \"Phone\":\"5418675309\", \"BillingAddress\":\"123 Main St\", \"BillingAddress2\":\"\", \"BillingCity\":\" Austin\", \"BillingState\":\"TX\", \"BillingZip\":\"78701\", \"PayToAddress\": \"456 Main St\", \"PayToAddress2\": \"\", \"PayToCity\": \"Austin\", \"PayToState\": \"TX\", \"PayToZip\":\"78702\", \"Abbr\":\"Clinic Five\", \"IsHidden\":\"false\" } Example Response: 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"Description\":\"Clinic 5\", \"Phone\":\"5418675309\", \"BillingAddress\":\"123 Main St\", \"BillingAddress2\":\"\", \"BillingCity\":\" Austin\", \"BillingState\":\"TX\", \"BillingZip\":\"78701\", \"PayToAddress\": \"456 Main St\", \"PayToAddress2\": \"\", \"PayToCity\": \"Austin\", \"PayToState\": \"TX\", \"PayToZip\":\"78702\", \"Abbr\":\"Clinic Five\", \"IsHidden\":\"false\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Commlogs","item":[{"name":"/commlogs?PatNum=15","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/commlogs?PatNum=15","host":["{{url_local}}{{version_api}}"],"path":["/commlogs?PatNum=15"],"query":null},"description":"Commlogs GET Version Added: 21.1 Get all commlogs for a patient. PatNum: Required. Example Request: GET /commlogs?PatNum=15 Example Response: [ { \"CommlogNum\": 2, \"PatNum\": 15, \"CommDateTime\": \"2021-02-07 03:25:29\", \"CommType\": \"239\", \"commType\": \"Misc\", \"Note\": \"Left msg on answering machine\", \"Mode_\": \"Phone\", \"SentOrReceived\": \"Sent\" }, { \"CommlogNum\": 1, \"PatNum\": 15, \"CommDateTime\": \"2021-02-07 03:09:00\", \"CommType\": \"236\", \"commType\": \"Insurance\", \"Note\": \"Note for John Smith\", \"Mode_\": \"Mail\", \"SentOrReceived\": \"Received\" } ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"CommlogNum\": 2, \"PatNum\": 15, \"CommDateTime\": \"2021-02-07 03:25:29\", \"CommType\": \"239\", \"commType\": \"Misc\", \"Note\": \"Left msg on answering machine\", \"Mode_\": \"Phone\", \"SentOrReceived\": \"Sent\" }, { \"CommlogNum\": 1, \"PatNum\": 15, \"CommDateTime\": \"2021-02-07 03:09:00\", \"CommType\": \"236\", \"commType\": \"Insurance\", \"Note\": \"Note for John Smith\", \"Mode_\": \"Mail\", \"SentOrReceived\": \"Received\" } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/commlogs","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/commlogs","host":["{{url_local}}{{version_api}}"],"path":["/commlogs"],"query":null},"description":"Commlogs POST (create) Version Added: 21.1 Creates a commlog for the patient. PatNum: Required. Note: Required. CommDateTime: Optional. String in \"yyyy-mm-dd HH:mm:ss\" format. Default now. CommType: Optional. definition.DefNum where definition.Category=27. Default Miscellaneous. commType: Optional. definition.ItemName where definition.Category=27. Will be used over CommType if both are specified. Mode_: Either \"None\", \"Email\", \"Mail\", \"Phone\", \"In Person\", \"Text\", \"Email and Text\", or \"Phone and Text\". Default \"Phone\". SentOrReceived: Either \"Neither\", \"Sent\", or \"Received\". Default \"Sent\". Prior to version 23.3.7, the response would not include the commlog object. Example Requests: POST /commlogs { \"PatNum\": 15, \"Note\": \"Left msg on answering machine\" } { \"PatNum\": 30, \"commType\": \"ApptRelated\", \"CommDateTime\": \"2022-01-01 11:19:00\", \"Mode_\": \"Text\", \"SentOrReceived\": \"Received\", \"Note\": \"Appointment confirmed for 9:15am.\" } Example Response: { \"CommlogNum\": 14, \"PatNum\": 30, \"CommDateTime\": \"2022-01-01 11:19:00\", \"CommType\": \"235\", \"commType\": \"ApptRelated\", \"Note\": \"Appointment confirmed for 9:15am.\", \"Mode_\": \"Text\", \"SentOrReceived\": \"Received\" } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PatNum\": 15, \"Note\": \"Left msg on answering machine\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Computers","item":[{"name":"/computers","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/computers","host":["{{url_local}}{{version_api}}"],"path":["/computers"],"query":null},"description":"Computers GET Version Added: 23.1.30 Gets a list of computers. LastHeartBeat indicates which computers are actively running. See Database Schema for additional information. Example Request: GET /computers Example Response: [ { \"ComputerNum\": 1, \"CompName\": \"JORDANS\", \"LastHeartBeat\": \"0001-01-01 00:00:00\" }, { \"ComputerNum\": 3, \"CompName\": \"ROCHELLES\", \"LastHeartBeat\": \"0001-01-01 00:00:00\" }, { \"ComputerNum\": 5, \"CompName\": \"SARAHL\", \"LastHeartBeat\": \"0001-01-01 00:00:00\" }, { \"ComputerNum\": 7, \"CompName\": \"JUSTINE\", \"LastHeartBeat\": \"2023-06-28 14:55:25\" }, { \"ComputerNum\": 9, \"CompName\": \"JTS\", \"LastHeartBeat\": \"0001-01-01 00:00:00\" }, { \"ComputerNum\": 11, \"CompName\": \"DEREKR\", \"LastHeartBeat\": \"0001-01-01 00:00:00\" }, etc... ] 200 OK 400 BadRequest","body":{"mode":"raw","raw":"[ { \"ComputerNum\": 1, \"CompName\": \"JORDANS\", \"LastHeartBeat\": \"0001-01-01 00:00:00\" }, { \"ComputerNum\": 3, \"CompName\": \"ROCHELLES\", \"LastHeartBeat\": \"0001-01-01 00:00:00\" }, { \"ComputerNum\": 5, \"CompName\": \"SARAHL\", \"LastHeartBeat\": \"0001-01-01 00:00:00\" }, { \"ComputerNum\": 7, \"CompName\": \"JUSTINE\", \"LastHeartBeat\": \"2023-06-28 14:55:25\" }, { \"ComputerNum\": 9, \"CompName\": \"JTS\", \"LastHeartBeat\": \"0001-01-01 00:00:00\" }, { \"ComputerNum\": 11, \"CompName\": \"DEREKR\", \"LastHeartBeat\": \"0001-01-01 00:00:00\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Definitions","item":[{"name":"/definitions","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/definitions","host":["{{url_local}}{{version_api}}"],"path":["/definitions"],"query":null},"description":"Definitions GET Version Added: 21.1 includeHidden is an optional parameter that defaults to false. Example Requests: GET /definitions GET /definitions?Offset=200 GET /definitions?Category=1 GET /definitions?Category=1&includeHidden=true Example Response: [ { \"DefNum\": 293, \"ItemName\": \"Sales Tax\", \"ItemValue\": \"+\", \"Category\": 1, \"category\": \"AdjTypes\", \"isHidden\": \"false\" }, { \"DefNum\": 8, \"ItemName\": \"Professional Discount\", \"ItemValue\": \"-\", \"Category\": 1, \"category\": \"AdjTypes\", \"isHidden\": \"false\" }, { \"DefNum\": 9, \"ItemName\": \"Cash Discount\", \"ItemValue\": \"-\", \"Category\": 1, \"category\": \"AdjTypes\", \"isHidden\": \"false\" }, etc... ]","body":{"mode":"raw","raw":"[ { \"DefNum\": 293, \"ItemName\": \"Sales Tax\", \"ItemValue\": \"+\", \"Category\": 1, \"category\": \"AdjTypes\", \"isHidden\": \"false\" }, { \"DefNum\": 8, \"ItemName\": \"Professional Discount\", \"ItemValue\": \"-\", \"Category\": 1, \"category\": \"AdjTypes\", \"isHidden\": \"false\" }, { \"DefNum\": 9, \"ItemName\": \"Cash Discount\", \"ItemValue\": \"-\", \"Category\": 1, \"category\": \"AdjTypes\", \"isHidden\": \"false\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"","item":null,"description":null,"request":{"method":"","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}","host":["{{url_local}}{{version_api}}"],"path":[""],"query":null},"description":"Definitions POST (create) Version Added: 22.1 Creates a new Definition, attempts to set the Category (definition.Category) will be silently ignored. ItemName: Required. Name of the definition. category: Required. See the list of current Definitions for a valid definition.Category name. ItemValue: Optional. Values will be validated differently for each Category. isHidden: Optional. Defaults to \"false\". Example Request: POST /definitions { \"ItemName\": \"Interest Payment\", \"category\": \"PaymentTypes\" } { \"ItemName\": \"Cash Discount\", \"ItemValue\":\"-\", \"category\": \"AdjTypes\", \"isHidden\":\"false\" } Example Response: { \"DefNum\": 12, \"ItemName\": \"Cash Discount\", \"ItemValue\":\"-\", \"Category\": 1, \"category\":\"AdjTypes\", \"isHidden\":\"false\" } 201 Created 400 BadRequest (Missing or Invalid fields)","body":{"mode":"raw","raw":"{ \"ItemName\": \"Interest Payment\", \"category\": \"PaymentTypes\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API DiscountPlans","item":[{"name":"/discountplans/2","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/discountplans/2","host":["{{url_local}}{{version_api}}"],"path":["/discountplans/2"],"query":null},"description":"DiscountPlans GET (single) Version Added: 22.4.19 Gets a single Discount Plan. Parameters: DiscountPlanNum: Required in URL. Example Request: GET /discountplans/2 Example Response: { \"DiscountPlanNum\": 2, \"Description\": \"Happy Smiles Basic\", \"FeeSchedNum\": 54, \"DefNum\": 336, \"adjustmentType\": \"Discount Plan\", \"IsHidden\": \"false\", \"PlanNote\": \"50% services when paid cash at time of service.\", \"ExamFreqLimit\": 1, \"XrayFreqLimit\": 1, \"ProphyFreqLimit\": 1, \"FluorideFreqLimit\": 0, \"PerioFreqLimit\": 1, \"LimitedExamFreqLimit\": 0, \"PAFreqLimit\": 1, \"AnnualMax\": 1000.0 } 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"DiscountPlanNum\": 2, \"Description\": \"Happy Smiles Basic\", \"FeeSchedNum\": 54, \"DefNum\": 336, \"adjustmentType\": \"Discount Plan\", \"IsHidden\": \"false\", \"PlanNote\": \"50% services when paid cash at time of service.\", \"ExamFreqLimit\": 1, \"XrayFreqLimit\": 1, \"ProphyFreqLimit\": 1, \"FluorideFreqLimit\": 0, \"PerioFreqLimit\": 1, \"LimitedExamFreqLimit\": 0, \"PAFreqLimit\": 1, \"AnnualMax\": 1000.0 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/discountplans","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/discountplans","host":["{{url_local}}{{version_api}}"],"path":["/discountplans"],"query":null},"description":"DiscountPlans GET (multiple) Version Added: 22.4.19 Gets a list of Discount Plans. Example Request: GET /discountplans Example Response: [ { \"DiscountPlanNum\": 1, \"Description\": \"Happy Smiles Plus\", \"FeeSchedNum\": 54, \"DefNum\": 336, \"adjustmentType\": \"Discount Plan\", \"IsHidden\": \"true\", \"PlanNote\": \"75% services when paid cash at time of service.\", \"ExamFreqLimit\": 1, \"XrayFreqLimit\": 0, \"ProphyFreqLimit\": 0, \"FluorideFreqLimit\": 0, \"PerioFreqLimit\": 1, \"LimitedExamFreqLimit\": 1, \"PAFreqLimit\": 1, \"AnnualMax\": 500.0 }, { \"DiscountPlanNum\": 2, \"Description\": \"Happy Smiles Basic\", \"FeeSchedNum\": 54, \"DefNum\": 336, \"adjustmentType\": \"Discount Plan\", \"IsHidden\": \"false\", \"PlanNote\": \"50% services when paid cash at time of service.\", \"ExamFreqLimit\": 1, \"XrayFreqLimit\": 1, \"ProphyFreqLimit\": 1, \"FluorideFreqLimit\": 0, \"PerioFreqLimit\": 1, \"LimitedExamFreqLimit\": 0, \"PAFreqLimit\": 1, \"AnnualMax\": 1000.0 }, etc... ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"DiscountPlanNum\": 1, \"Description\": \"Happy Smiles Plus\", \"FeeSchedNum\": 54, \"DefNum\": 336, \"adjustmentType\": \"Discount Plan\", \"IsHidden\": \"true\", \"PlanNote\": \"75% services when paid cash at time of service.\", \"ExamFreqLimit\": 1, \"XrayFreqLimit\": 0, \"ProphyFreqLimit\": 0, \"FluorideFreqLimit\": 0, \"PerioFreqLimit\": 1, \"LimitedExamFreqLimit\": 1, \"PAFreqLimit\": 1, \"AnnualMax\": 500.0 }, { \"DiscountPlanNum\": 2, \"Description\": \"Happy Smiles Basic\", \"FeeSchedNum\": 54, \"DefNum\": 336, \"adjustmentType\": \"Discount Plan\", \"IsHidden\": \"false\", \"PlanNote\": \"50% services when paid cash at time of service.\", \"ExamFreqLimit\": 1, \"XrayFreqLimit\": 1, \"ProphyFreqLimit\": 1, \"FluorideFreqLimit\": 0, \"PerioFreqLimit\": 1, \"LimitedExamFreqLimit\": 0, \"PAFreqLimit\": 1, \"AnnualMax\": 1000.0 }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/discountplans","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/discountplans","host":["{{url_local}}{{version_api}}"],"path":["/discountplans"],"query":null},"description":"DiscountPlans POST Version Added: 23.1.20 Creates a DiscountPlan. Frequencies that do not have a limitation display as blank in Open Dental and are stored as -1 in the database. Description: Required. Description of this Discount Plan. FeeSchedNum: Required. FK to feesched.FeeSchedNum. DefNum: Required. definition.DefNum where definition.Category=1 and definition.ItemValue=dp. IsHidden: Optional. Hides a Discount Plan. Default \"false\". PlanNote: Optional. Note on a Discount Plan. ExamFreqLimit: Optional. Number of procedures allowed for a Discount Plan's Exam category. Default -1. XrayFreqLimit: Optional. Number of procedures allowed for a Discount Plan's X-Ray category. Default -1 . ProphyFreqLimit: Optional. Number of procedures allowed for a Discount Plan's Prophylaxis category. Default -1. FluorideFreqLimit: Optional. Number of procedures allowed for a Discount Plan's Fluoride category. Default -1. PerioFreqLimit: Optional. Number of procedures allowed for a Discount Plan's Periodontal category. Default -1. LimitedExamFreqLimit: Optional. Number of procedures allowed for a Discount Plan's Limited Exam category. Default -1. PAFreqLimit: Optional. Number of procedures allowed for a Discount Plan's Periapical X-Ray category. Default -1. AnnualMax: Optional. Annual discount maximum for frequency limitations. Default -1, indicates no annual max limitation. Example Request: POST /discountplans { \"Description\": \"Happy Smiles Ultra\", \"FeeSchedNum\": 54, \"DefNum\": 336 } Example Response: { \"DiscountPlanNum\": 3, \"Description\": \"Happy Smiles Ultra\", \"FeeSchedNum\": 54, \"DefNum\": 336, \"adjustmentType\": \"Discount Plan\", \"IsHidden\": \"false\", \"PlanNote\": \"\", \"ExamFreqLimit\": -1, \"XrayFreqLimit\": -1, \"ProphyFreqLimit\": -1, \"FluorideFreqLimit\": -1, \"PerioFreqLimit\": -1, \"LimitedExamFreqLimit\": -1, \"PAFreqLimit\": -1, \"AnnualMax\": -1.0 } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"Description\": \"Happy Smiles Ultra\", \"FeeSchedNum\": 54, \"DefNum\": 336 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/discountplans/1","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/discountplans/1","host":["{{url_local}}{{version_api}}"],"path":["/discountplans/1"],"query":null},"description":"DiscountPlans PUT Version Added: 23.1.20 Updates an existing DiscountPlan. Updating Description and/or PlanNote will overwrite existing values. Frequencies that do not have a limitation display as blank in Open Dental and are stored as -1 in the database. DiscountPlanNum: Required in URL. Description: Description of this Discount Plan. FeeSchedNum: FK to feesched.FeeSchedNum. DefNum: definition.DefNum where definition.Category=1 and definition.ItemValue=dp. IsHidden: Hides a Discount Plan. Either \"true\" or \"false\". PlanNote: Note on a Discount Plan. ExamFreqLimit: Number of procedures allowed for a Discount Plan's Exam category. -1 indicates blank. XrayFreqLimit: Number of procedures allowed for a Discount Plan's X-Ray category. -1 indicates blank. ProphyFreqLimit: Number of procedures allowed for a Discount Plan's Prophylaxis category. -1 indicates blank. FluorideFreqLimit: Number of procedures allowed for a Discount Plan's Fluoride category. -1 indicates blank. PerioFreqLimit: Number of procedures allowed for a Discount Plan's Periodontal category. -1 indicates blank. LimitedExamFreqLimit: Number of procedures allowed for a Discount Plan's Limited Exam category. -1 indicates blank. PAFreqLimit: Number of procedures allowed for a Discount Plan's Periapical X-Ray category. -1 indicates blank. AnnualMax: Annual discount maximum for frequency limitations. -1 indicates blank or no annual max limitation. Example Request: PUT /discountplans/1 { \"Description\": \"Happy Smiles Basic Plus\", \"IsHidden\": \"false\" } Example Response: { \"DiscountPlanNum\": 1, \"Description\": \"Happy Smiles Basic Plus\", \"FeeSchedNum\": 54, \"DefNum\": 336, \"adjustmentType\": \"Discount Plan\", \"IsHidden\": \"false\", \"PlanNote\": \"75% services when paid cash at time of service.\", \"ExamFreqLimit\": 1, \"XrayFreqLimit\": 0, \"ProphyFreqLimit\": 0, \"FluorideFreqLimit\": 0, \"PerioFreqLimit\": 1, \"LimitedExamFreqLimit\": 1, \"PAFreqLimit\": 1, \"AnnualMax\": 500.0 } 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"Description\": \"Happy Smiles Basic Plus\", \"IsHidden\": \"false\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API DiscountPlanSubs","item":[{"name":"/discountplansubs?PatNum=56","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/discountplansubs?PatNum=56","host":["{{url_local}}{{version_api}}"],"path":["/discountplansubs?PatNum=56"],"query":null},"description":"DiscountPlanSubs GET Version Added: 21.3 Gets the DiscountPlan that is attached to the patient. PatNum: Required. Example Request: GET /discountplansubs?PatNum=56 Example Response: { \"DiscountSubNum\": 32, \"DiscountPlanNum\": 8, \"PatNum\": 56, \"DateEffective\": \"2021-01-01\", \"DateTerm\": \"2022-01-01\", \"SubNote\": \"\" } 200 OK 400 BadRequest \"PatNum is Required\" 404 NotFound \"Patient not found\"","body":{"mode":"raw","raw":"{ \"DiscountSubNum\": 32, \"DiscountPlanNum\": 8, \"PatNum\": 56, \"DateEffective\": \"2021-01-01\", \"DateTerm\": \"2022-01-01\", \"SubNote\": \"\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/discountplansubs","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/discountplansubs","host":["{{url_local}}{{version_api}}"],"path":["/discountplansubs"],"query":null},"description":"DiscountPlanSubs POST Version Added: 21.3 Subscribes a patient to an existing DiscountPlan. DiscountPlanNum: Required. PatNum: Required. DateEffective: Optional. String in \"yyyy-MM-dd\" format. The date the plan starts impacting procedure fees. Default \"0001-01-01\" to indicate the beginning of the current calendar year. DateTerm: Optional. String in \"yyyy-MM-dd\" format. The date the plan no longer impacts procedure fees. Default \"0001-01-01\" to indicate no end date. SubNote: Optional. The subscriber note. Example Request: POST /discountplansubs { \"DiscountPlanNum\": 6, \"PatNum\": 67, \"DateEffective\": \"2021-01-01\", \"DateTerm\": \"2022-01-01\" } Example Response: 201 Created 400 BadRequest (Missing or invalid fields) 404 NotFound \"Patient not found\" or \"DiscountPlan not found\"","body":{"mode":"raw","raw":"{ \"DiscountPlanNum\": 6, \"PatNum\": 67, \"DateEffective\": \"2021-01-01\", \"DateTerm\": \"2022-01-01\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/discountplansubs/14","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/discountplansubs/14","host":["{{url_local}}{{version_api}}"],"path":["/discountplansubs/14"],"query":null},"description":"DiscountPlanSubs PUT Version Added: 22.3.13 Updates an existing DiscountPlanSub. Updating SubNote will overwrite any existing subscriber note. DiscountSubNum: Required in the URL. PatNum: Required. The PatNum attached to the DiscountPlanSub. DateEffective: Optional. String in \"yyyy-MM-dd\" format. DateTerm: Optional. String in \"yyyy-MM-dd\" format. SubNote: Optional. The subscriber note. Example Request: PUT /discountplansubs/14 { \"PatNum\": 23, \"DateEffective\": \"2022-09-16\", \"DateTerm\": \"2024-12-31\", \"SubNote\": \"25% discount to services.\" } Example Response: 200 OK 400 BadRequest (Missing or invalid fields) 404 NotFound \"DiscountPlanSub not found\" or \"Patient not found\"","body":{"mode":"raw","raw":"{ \"PatNum\": 23, \"DateEffective\": \"2022-09-16\", \"DateTerm\": \"2024-12-31\", \"SubNote\": \"25% discount to services.\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/discountplansubs/14","item":null,"description":null,"request":{"method":"DELETE","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/discountplansubs/14","host":["{{url_local}}{{version_api}}"],"path":["/discountplansubs/14"],"query":null},"description":"DiscountPlanSubs DELETE Version Added: 23.1.12 Deletes an existing DiscountPlanSub. DiscountSubNum: Required in URL. Example Request: DELETE /discountplansubs/14 Example Response: 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API DiseaseDefs","item":[{"name":"/diseasedefs","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/diseasedefs","host":["{{url_local}}{{version_api}}"],"path":["/diseasedefs"],"query":null},"description":"DiseaseDefs GET Version Added: 21.3 Gets a list of all diseases (Problems) that can be assigned to patients. Rarely used. Usually just use Diseases GET and POST. Example Requests: GET /diseasedefs GET /diseasedefs?Offset=200 Example Response: [ { \"DiseaseDefNum\": 58, \"DiseaseName\": \"Severe Back Pain\", \"IsHidden\": \"true\", \"DateTStamp\": \"2021-02-07 12:27:28\", \"ICD9Code\": \"\", \"ICD10Code\": \"\", \"SnomedCode\": \"\" }, { \"DiseaseDefNum\": 59, \"DiseaseName\": \"Hypertension\", \"IsHidden\": \"false\", \"DateTStamp\": \"2021-09-07 14:00:10\", \"ICD9Code\": \"402\", \"ICD10Code\": \"\", \"SnomedCode\": \"\" }, etc... ]","body":{"mode":"raw","raw":"[ { \"DiseaseDefNum\": 58, \"DiseaseName\": \"Severe Back Pain\", \"IsHidden\": \"true\", \"DateTStamp\": \"2021-02-07 12:27:28\", \"ICD9Code\": \"\", \"ICD10Code\": \"\", \"SnomedCode\": \"\" }, { \"DiseaseDefNum\": 59, \"DiseaseName\": \"Hypertension\", \"IsHidden\": \"false\", \"DateTStamp\": \"2021-09-07 14:00:10\", \"ICD9Code\": \"402\", \"ICD10Code\": \"\", \"SnomedCode\": \"\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/diseasedefs","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/diseasedefs","host":["{{url_local}}{{version_api}}"],"path":["/diseasedefs"],"query":null},"description":"DiseaseDefs POST Version Added: 21.3 Inserts a single DiseaseDef using a unique DiseaseName. Rarely used. Usually just use Diseases GET and POST. Example Request: POST /diseasedefs { \"DiseaseName\": \"Shingles\" } Example Response: 201 Created 400 BadRequest \"DiseaseName is required\" or \"A DiseaseDef with that name already exists\".","body":{"mode":"raw","raw":"{ \"DiseaseName\": \"Shingles\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Diseases","item":[{"name":"/diseases?PatNum=41","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/diseases?PatNum=41","host":["{{url_local}}{{version_api}}"],"path":["/diseases?PatNum=41"],"query":null},"description":"Diseases GET Version Added: 21.3 PatNum is required. Gets a list of all diseases (Problems) that are assigned to the patient. Example Request: GET /diseases?PatNum=41 Example Response: [ { \"DiseaseNum\": 2, \"PatNum\": 41, \"DiseaseDefNum\": 44, \"diseaseDefName\": \"COPD\", \"PatNote\": \"\", \"ProbStatus\": \"Active\", \"DateStart\": \"0001-01-01 00:00:00\", \"DateStop\": \"0001-01-01 00:00:00\" }, { \"DiseaseNum\": 8, \"PatNum\": 41, \"DiseaseDefNum\": 58, \"diseaseDefName\": \"Severe Back Pain\", \"PatNote\": \"\", \"ProbStatus\": \"Inactive\", \"DateStart\": \"0001-01-01 00:00:00\", \"DateStop\": \"0001-01-01 00:00:00\" }, etc... ] 200 OK 400 BadRequest \"PatNum is required\" 404 NotFound \"Patient not found\"","body":{"mode":"raw","raw":"[ { \"DiseaseNum\": 2, \"PatNum\": 41, \"DiseaseDefNum\": 44, \"diseaseDefName\": \"COPD\", \"PatNote\": \"\", \"ProbStatus\": \"Active\", \"DateStart\": \"0001-01-01 00:00:00\", \"DateStop\": \"0001-01-01 00:00:00\" }, { \"DiseaseNum\": 8, \"PatNum\": 41, \"DiseaseDefNum\": 58, \"diseaseDefName\": \"Severe Back Pain\", \"PatNote\": \"\", \"ProbStatus\": \"Inactive\", \"DateStart\": \"0001-01-01 00:00:00\", \"DateStop\": \"0001-01-01 00:00:00\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/diseases","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/diseases","host":["{{url_local}}{{version_api}}"],"path":["/diseases"],"query":null},"description":"Diseases POST Version Added: 21.3 Attaches a diseaseDef (Problem) to a patient. PatNum: Required. DiseaseDefNum: Rarely used. Just use diseaseDefName instead, which handles insertion of DiseaseDef automatically. diseaseDefName: Required unless you choose to use DiseaseDefNum. DateStart: Optional. String in \"yyyy-MM-dd\" format. Default \"0001-01-01\". DateStop: Optional. String in \"yyyy-MM-dd\" format. Default \"0001-01-01\". ProbStatus: Optional. Either \"Active\", \"Resolved\" or \"Inactive\". Default \"Active\". PatNote: Optional. Example Requests: POST /diseases { \"PatNum\": 74, \"diseaseDefName\": \"Diabetes\" } { \"PatNum\": 74, \"DiseaseDefName\": \"Severe Back Pain\", \"ProbStatus\": \"Resolved\", \"PatNote\": \"Patient underwent corrective surgery 04/11/2019\", \"DateStart\": \"2016-01-01\", \"DateStop\": \"2019-04-30\" } Example Response: 201 Created 400 BadRequest (Missing or Invalid fields) 404 NotFound \"Patient not found\" or \"DiseaseDef not found\"","body":{"mode":"raw","raw":"{ \"PatNum\": 74, \"diseaseDefName\": \"Diabetes\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/diseases/8","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/diseases/8","host":["{{url_local}}{{version_api}}"],"path":["/diseases/8"],"query":null},"description":"Diseases PUT Version Added: 22.1 Updates a disease (Problem) for a patient. DiseaseNum: Required in the URL. DateStart: Optional. String in \"yyyy-MM-dd\" format. DateStop: Optional. String in \"yyyy-MM-dd\" format. ProbStatus: Optional. Either \"Active\", \"Resolved\" or \"Inactive\". PatNote: Optional. Will overwrite existing note. Example Request: PUT /diseases/8 { \"ProbStatus\": \"Resolved\", \"DateStart\": \"2020-10-01\", \"DateStop\": \"2022-05-25\" } Example Response: 200 OK 400 BadRequest (with explanation) 404 NotFound \"Disease not found.\"","body":{"mode":"raw","raw":"{ \"ProbStatus\": \"Resolved\", \"DateStart\": \"2020-10-01\", \"DateStop\": \"2022-05-25\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/diseases/8","item":null,"description":null,"request":{"method":"DELETE","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/diseases/8","host":["{{url_local}}{{version_api}}"],"path":["/diseases/8"],"query":null},"description":"Diseases DELETE Version Added: 22.1 Deletes a disease (Problem) for a patient. DiseaseNum: Required in the URL. Example Request: DELETE /diseases/8 Example Response: 200 OK 400 BadRequest (with explanation) 404 NotFound \"Disease not found.\"","body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Documents","item":[{"name":"/documents?PatNum=101","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/documents?PatNum=101","host":["{{url_local}}{{version_api}}"],"path":["/documents?PatNum=101"],"query":null},"description":"Documents GET Version Added: 21.2 PatNum is required. Gets all documents and mounts for the patient, ordered by DateCreated. If the file storage method is InDatabase, the returned filePath field will blank. Mounts do not have a filePath, ToothNumbers, or a DateTStamp. The result does not include the actual document files. Those can be obtained using Documents POST DownloadSftp. Example Request: GET /documents?PatNum=101 Example Response: [ { \"DocNum\": 34, \"MountNum\": 0, \"filePath\": \"\\\\server\\\\OpenDentImages\\\\S\\\\SmithJohn15\\\\exampleimage.jpg\", \"Description\": \"Scanned image\", \"Note\": \"\", \"DateCreated\": \"2021-04-08 08:12:21\", \"docCategory\": \"Lab Cases\", \"DocCategory\": 14, \"ToothNumbers\": \"1,2,3,4,5\", \"DateTStamp\": \"2021-04-18 11:45:01\", \"serverDateTime\": \"2021-05-20 13:30:54\" }, { \"DocNum\": 0, \"MountNum\": 15, \"filePath\": \"\", \"Description\": \" 5/11/2021: 4BW\", \"Note\": \"Bitewings\", \"DateCreated\": \"2021-05-11 13:26:39\", \"docCategory\": \"Lab Cases\", \"DocCategory\": 14, \"ToothNumbers\": \"\", \"DateTStamp\": \"\", \"serverDateTime\": \"2021-05-20 13:30:54\" } ] 200 OK 400 BadRequest \"PatNum is required\" 404 NotFound \"Patient not found\"","body":{"mode":"raw","raw":"[ { \"DocNum\": 34, \"MountNum\": 0, \"filePath\": \"\\\\server\\\\OpenDentImages\\\\S\\\\SmithJohn15\\\\exampleimage.jpg\", \"Description\": \"Scanned image\", \"Note\": \"\", \"DateCreated\": \"2021-04-08 08:12:21\", \"docCategory\": \"Lab Cases\", \"DocCategory\": 14, \"ToothNumbers\": \"1,2,3,4,5\", \"DateTStamp\": \"2021-04-18 11:45:01\", \"serverDateTime\": \"2021-05-20 13:30:54\" }, { \"DocNum\": 0, \"MountNum\": 15, \"filePath\": \"\", \"Description\": \" 5/11/2021: 4BW\", \"Note\": \"Bitewings\", \"DateCreated\": \"2021-05-11 13:26:39\", \"docCategory\": \"Lab Cases\", \"DocCategory\": 14, \"ToothNumbers\": \"\", \"DateTStamp\": \"\", \"serverDateTime\": \"2021-05-20 13:30:54\" } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/documents/DownloadSftp","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/documents/DownloadSftp","host":["{{url_local}}{{version_api}}"],"path":["/documents/DownloadSftp"],"query":null},"description":"Documents POST DownloadSftp Version Added: 21.2 This will place a file on an SFTP site that you specify. After running this method, download the resulting file from your SFTP site. The user with the SFTP credentials must have write permission in this directory. Directory will be created if it does not exist, and files already existing with the specified name will be overwritten. If the SftpAddress does not contain a file name, the document.FileName will be used. All file storage options (LocalAtoZ, InDatabase, and Cloud) are supported. DocNum: This or MountNum is required. MountNum: This or DocNum is required. SftpAddress: Required. Specify the full path of the file (using /). The user with the SFTP credentials must have write permission in this directory. SftpUsername: Required. SftpPassword: Required. Example Requests: POST /documents/DownloadSftp { \"DocNum\": 389, \"SftpAddress\": \"MySftpSite/myUsername/Documents/SmithJohn389.png\", \"SftpUsername\": \"myUsername\", \"SftpPassword\": \"myPassword\" } { \"MountNum\": 20, \"SftpAddress\": \"MySftpSite/myUsername/Documents/FMX.jpg\", \"SftpUsername\": \"myUsername\", \"SftpPassword\": \"myPassword\" } Example Response: 201 Created, \"location\": The full filepath of the saved file. 400 BadRequest (Invalid fields, invalid file extension, and Sftp connection errors) 404 NotFound \"Document not found\" and \"Mount not found\".","body":{"mode":"raw","raw":"{ \"DocNum\": 389, \"SftpAddress\": \"MySftpSite/myUsername/Documents/SmithJohn389.png\", \"SftpUsername\": \"myUsername\", \"SftpPassword\": \"myPassword\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/documents/UploadSftp","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/documents/UploadSftp","host":["{{url_local}}{{version_api}}"],"path":["/documents/UploadSftp"],"query":null},"description":"Documents POST UploadSftp Version Added: 21.2 Prior to running this method, upload a file to your own SFTP site. This method will then pull the uploaded file into the customer's AtoZ folder, database, or cloud storage. The filePath of the response object will either be the full filepath of the saved file (AtoZ or cloud) or blank (database). PatNum: Required. SftpAddress: Required. Specify the full path of the file. The user with the SFTP credentials must have read permission in this directory. SftpUsername: Required. SftpPassword: Required. DateCreated: (Added in version 21.4) Optional. Defaults to today's date. DocCategory: Optional. Definition.DefNum where definition.Category=18. Defaults to the first definition in that category. ImgType: Optional. Either Document, Radiograph, Photo, File or Attachment. Default is Document. ToothNumbers: (Added in version 23.1.35) Optional. A string of numbers separated by commas and/or hyphen separated ranges. Example Request: POST /documents/UploadSftp { \"PatNum\": 15, \"DateCreated\": \"2021-05-26 08:16:46\", \"DocCategory\": 14, \"ImgType\":\"Photo\", \"ToothNumbers\":\"1-5,8\", \"SftpAddress\": \"MySftpSite/myUsername/Documents/SmithJRadiograph.png\", \"SftpUsername\": \"myUsername\", \"SftpPassword\": \"myPassword\" } Example Response: { \"DocNum\": 411, \"filePath\": \"\\\\server\\OpenDentImages\\S\\SmithJohn15\\SmithJRadiograph.png\", \"Description\": \"SmithJRadiograph.png\", \"ToothNumbers\": \"1,2,3,4,5,8\", \"Note\": \"\", \"DateCreated\": \"2021-05-26 08:16:46\", \"DateTStamp\": \"2021-05-26 08:16:46\", \"DocCategory\": 14, \"docCategory\": \"Lab Cases\", \"serverDateTime\": \"2021-05-26 08:16:46\" } 201 Created 400 BadRequest (missing fields and Sftp connection errors) 404 NotFound \"Patient not found\"","body":{"mode":"raw","raw":"{ \"PatNum\": 15, \"DateCreated\": \"2021-05-26 08:16:46\", \"DocCategory\": 14, \"ImgType\":\"Photo\", \"ToothNumbers\":\"1-5,8\", \"SftpAddress\": \"MySftpSite/myUsername/Documents/SmithJRadiograph.png\", \"SftpUsername\": \"myUsername\", \"SftpPassword\": \"myPassword\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/documents/Upload","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/documents/Upload","host":["{{url_local}}{{version_api}}"],"path":["/documents/Upload"],"query":null},"description":"Documents POST Upload Version Added: 21.1 Upload the actual file as rawBase64. Specify the extension of the file. Examples could include .pdf, .jpg, .dcm, .doc, etc. rawBase64 goes into the database in document.Note as \"_rawBase64_:\" followed by the extension and rawBase64. Example: \"_rawBase64_:.jpg_errGEreRi3fWWtB+gWWEgg...\" The customer never sees this text, but when they later click on the document, the file is created and the note removed. PatNum: Required. rawBase64: Required. extension: Required. DocCategory: Optional. FK to definition.ItemName, where definition.Category=18. Default is first in DocCategory. ImgType: Optional. Either Document, Radiograph, Photo, File or Attachment. Default is Document. Description: Optional. DateCreated: (Added in version 22.1) Optional. Default is today's date. String in \"yyyy-MM-dd HH:mm:ss\" format. ToothNumbers: (Added in version 23.1.35) Optional. A string of numbers separated by commas and/or hyphen separated ranges. Example Request: POST /documents/Upload { \"PatNum\": 101, \"rawBase64\": \"errGEreRi3fWWtB+gWWEgg...\", \"extension\": \".jpg\", \"DocCategory\": 47, \"ImgType\": \"Photo\", \"Description\": \"Extraoral\", \"DateCreated\": \"2022-03-15 14:30:00\", \"ToothNumbers\": \"1-32\" } Example Response: 201 Created (no \"location\" Header or object because we don't yet support GET single documents)","body":{"mode":"raw","raw":"{ \"PatNum\": 101, \"rawBase64\": \"errGEreRi3fWWtB+gWWEgg...\", \"extension\": \".jpg\", \"DocCategory\": 47, \"ImgType\": \"Photo\", \"Description\": \"Extraoral\", \"DateCreated\": \"2022-03-15 14:30:00\", \"ToothNumbers\": \"1-32\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/documents/Thumbnails","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/documents/Thumbnails","host":["{{url_local}}{{version_api}}"],"path":["/documents/Thumbnails"],"query":null},"description":"Documents POST Thumbnails Version Added: 21.2 Prior to running this method, first call a GET /documents for the patient to see their list of documents. Only standard image files from this list can be made into thumbnails. Mounts and pdfs will be skipped. This method gets the thumbnails for all images for the patient, creating any that do not already exist as thumbnails. Created thumbnails will be 100 x 100 and will use the same filename as the original image. This will place files on an SFTP site that you specify. After running this method, download the resulting files from your SFTP site. The user with the SFTP credentials must have write permission in this directory. Directory will be created if it does not exist, and files already existing with the specified name will be overwritten. All file storage options (LocalAtoZ, InDatabase, and Cloud) are supported. PatNum: Required. SftpAddress: Required. Specify the full path of the file. The user with the SFTP credentials must have read permission in this directory. SftpUsername: Required. SftpPassword: Required. Example Request: POST /documents/Thumbnails { \"PatNum\": 15, \"SftpAddress\": \"MySftpSite/myUsername/Thumbnails/\", \"SftpUsername\": \"myUsername\", \"SftpPassword\": \"myPassword\" } Example Responses: [ { \"DocNum\": 440, \"FileName\": \"SmithJohn440.gif\" }, { \"DocNum\": 441, \"FileName\": \"SmithJohn441.gif\" } ] 200 OK \"No documents could be made into thumbnails.\" 201 Created 400 BadRequest (missing fields and Sftp connection errors) 404 NotFound \"Patient not found\" and \"No documents exist for this patient\"","body":{"mode":"raw","raw":"{ \"PatNum\": 15, \"SftpAddress\": \"MySftpSite/myUsername/Thumbnails/\", \"SftpUsername\": \"myUsername\", \"SftpPassword\": \"myPassword\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/documents/DownloadMount","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/documents/DownloadMount","host":["{{url_local}}{{version_api}}"],"path":["/documents/DownloadMount"],"query":null},"description":"Documents POST DownloadMount Version Added: 21.2 You probably don't want to use this. Gets all the individual images for one mount, but there's no information about which position in the mount, flipping, rotation, etc. It is much more common to use Documents POST DownloadSftp to get a composite image for a mount instead of the individual images. Prior to running this method, first call a GET /documents for the patient to see their list of documents and mounts. Use the MountNum to run this method. All images in the mount will be downloaded to the specified folder. Created files will use the same filename as the original image. This will place files on an SFTP site that you specify. After running this method, download the resulting files from your SFTP site. The user with the SFTP credentials must have write permission in this directory. Directory will be created if it does not exist, and files already existing with the same name will be overwritten. All file storage options (LocalAtoZ, InDatabase, and Cloud) are supported. MountNum: Required. SftpAddress: Required. Specify the full path of the file. The user with the SFTP credentials must have read permission in this directory. SftpUsername: Required. SftpPassword: Required. Example Request: POST /documents/DownloadMount { \"MountNum\": 15, \"SftpAddress\": \"MySftpSite/myUsername/Mounts/\", \"SftpUsername\": \"myUsername\", \"SftpPassword\": \"myPassword\" } Example Responses: [ { \"DocNum\": 440, \"FileName\": \"SmithJohn440.gif\" }, { \"DocNum\": 441, \"FileName\": \"SmithJohn441.gif\" } ] 200 OK \"No mount images could be downloaded.\" 201 Created 400 BadRequest (missing fields and Sftp connection errors) 404 NotFound \"Mount not found.\"","body":{"mode":"raw","raw":"{ \"MountNum\": 15, \"SftpAddress\": \"MySftpSite/myUsername/Mounts/\", \"SftpUsername\": \"myUsername\", \"SftpPassword\": \"myPassword\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/documents/SetByUrl","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/documents/SetByUrl","host":["{{url_local}}{{version_api}}"],"path":["/documents/SetByUrl"],"query":null},"description":"Documents POST SetByUrl Version Added: 21.1 URL goes into the database in document.Note as \"_download_:\" followed by the URL. The customer never sees this text, but when they later click on the document, the URL is used to perform a download and the prefix is removed. PatNum: Required. url: Required. DocCategory: Optional. FK to definition.ItemName, where definition.Category=18. Default is first in DocCategory. ImgType: Optional. Either Document, Radiograph, Photo, File or Attachment. Default is Document. Description: Optional. ToothNumbers: (Added in version 23.1.35) Optional. A string of numbers separated by commas and/or hyphen separated ranges. Example Request: POST /documents/SetByUrl { \"PatNum\":101, \"url\": \"https://www.somesite.com/myimage.jpg\", \"DocCategory\":47, \"Description\":\"Extraoral\", \"ImgType\":\"Photo\", \"ToothNumbers: \"1,2\" } Example Response: 201 Created (no \"location\" Header or object because we don't support GET single documents) .","body":{"mode":"raw","raw":"{ \"PatNum\":101, \"url\": \"https://www.somesite.com/myimage.jpg\", \"DocCategory\":47, \"Description\":\"Extraoral\", \"ImgType\":\"Photo\", \"ToothNumbers: \"1,2\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Employers","item":[{"name":"/employers/5","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/employers/5","host":["{{url_local}}{{version_api}}"],"path":["/employers/5"],"query":null},"description":"Employers GET (single) Version Added: 23.3.22 Gets a single employer. Parameters: EmployerNum: Required in URL. Example Request: GET /employers/5 Example Response: { \"EmployerNum\": 5, \"EmpName\": \"Sergio and Sons Co\" } 200 OK 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"EmployerNum\": 5, \"EmpName\": \"Sergio and Sons Co\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/employers","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/employers","host":["{{url_local}}{{version_api}}"],"path":["/employers"],"query":null},"description":"Employers GET (multiple) Version Added: 23.3.22 Gets a list of employers. Example Requests: GET /employers GET /employers?Offset=200 [ { \"EmployerNum\": 1, \"EmpName\": \"Store Mart\" }, { \"EmployerNum\": 2, \"EmpName\": \"Townville Hospital\" }, etc... ] Example Response: 200 OK","body":{"mode":"raw","raw":"[ { \"EmployerNum\": 1, \"EmpName\": \"Store Mart\" }, { \"EmployerNum\": 2, \"EmpName\": \"Townville Hospital\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/employers","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/employers","host":["{{url_local}}{{version_api}}"],"path":["/employers"],"query":null},"description":"Employers POST (create) Version Added: 21.4 Creates a new employer. EmpName: Required. The employer's name. Example Request: POST /employers { \"EmpName\": \"James Smith Confectionery Co.\" } Example Response: { \"EmployerNum\": 4, \"EmpName\": \"James Smith Confectionery Co.\" } 201 Created 400 Bad Request (with explanation)","body":{"mode":"raw","raw":"{ \"EmpName\": \"James Smith Confectionery Co.\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/employers/4","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/employers/4","host":["{{url_local}}{{version_api}}"],"path":["/employers/4"],"query":null},"description":"Employers PUT (update) Version Added: 21.4 Updates the employer's name. EmployerNum: Required in the URL. EmpName: Required. The Employer's name. Example Request: PUT /employers/4 { \"EmpName\": \"Jamie Smith Confectionery Co.\" } Example Response: { \"EmployerNum\": 4, \"EmpName\": \"Jamie Smith Confectionery Co.\" } 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"EmpName\": \"Jamie Smith Confectionery Co.\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/employers/4","item":null,"description":null,"request":{"method":"DELETE","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/employers/4","host":["{{url_local}}{{version_api}}"],"path":["/employers/4"],"query":null},"description":"Employers DELETE Version Added: 23.3.22 Deletes an employer. Employers associated with a patient or an insurance plan cannot be deleted. EmployerNum: Required in the URL. Example Request: DELETE /employers/4 Example Response: 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API EtransMessageTexts","item":[{"name":"/etransmessagetexts/45","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/etransmessagetexts/45","host":["{{url_local}}{{version_api}}"],"path":["/etransmessagetexts/45"],"query":null},"description":"EtransMessageTexts GET (single) Version Added: 23.2.11 Gets a single EtransTextMessage. For more information, see Etrans Edit. Parameters: EtransMessageTextNum: Required in URL. Example Request: GET /etransmessagetexts/45 Example Response: { \"EtransMessageTextNum\": 45, \"MessageText\": \"ISA*00* *00* *30*330989922 *30*330989922 *171003*0802*U*00401*000000000*0*P*:~...\" } 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"EtransMessageTextNum\": 45, \"MessageText\": \"ISA*00* *00* *30*330989922 *30*330989922 *171003*0802*U*00401*000000000*0*P*:~...\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Etranss","item":[{"name":"/etranss?PatNum=66","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/etranss?PatNum=66","host":["{{url_local}}{{version_api}}"],"path":["/etranss?PatNum=66"],"query":null},"description":"Etranss GET Version Added: 23.2.7 Gets all etranss for a patient. Parameters: PatNum: Required. CarrierNum: Optional. FK to Carrier.CarrierNum. ClaimNum: Optional. FK to Claim.ClaimNum. Example Request: GET /etranss?PatNum=66 Example Response: [ { \"EtransNum\": 143, \"DateTimeTrans\": \"2023-07-31 10:40:41\", \"ClearingHouseNum\": 0, \"Etype\": \"ERA_835\", \"ClaimNum\": 54, \"OfficeSequenceNumber\": 0, \"CarrierTransCounter\": 0, \"CarrierTransCounter2\": 0, \"CarrierNum\": 12, \"CarrierNum2\": 0, \"PatNum\": 66, \"BatchNumber\": 4534, \"AckCode\": \"\", \"TransSetNum\": 0, \"Note\": \"\", \"EtransMessageTextNum\": 22, \"AckEtransNum\": 0, \"PlanNum\": 72, \"InsSubNum\": 21, \"TransSetId835\": 0, \"CarrierNameRaw\": \"Yamhill Community Care\", \"PatientNameRaw\": \"Smith, Jane\", \"UserNum\": 0 } ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"EtransNum\": 143, \"DateTimeTrans\": \"2023-07-31 10:40:41\", \"ClearingHouseNum\": 0, \"Etype\": \"ERA_835\", \"ClaimNum\": 54, \"OfficeSequenceNumber\": 0, \"CarrierTransCounter\": 0, \"CarrierTransCounter2\": 0, \"CarrierNum\": 12, \"CarrierNum2\": 0, \"PatNum\": 66, \"BatchNumber\": 4534, \"AckCode\": \"\", \"TransSetNum\": 0, \"Note\": \"\", \"EtransMessageTextNum\": 22, \"AckEtransNum\": 0, \"PlanNum\": 72, \"InsSubNum\": 21, \"TransSetId835\": 0, \"CarrierNameRaw\": \"Yamhill Community Care\", \"PatientNameRaw\": \"Smith, Jane\", \"UserNum\": 0 } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API FamilyModules","item":[{"name":"/familymodules/13/Insurance","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/familymodules/13/Insurance","host":["{{url_local}}{{version_api}}"],"path":["/familymodules/13/Insurance"],"query":null},"description":"FamilyModules GET Insurance Version Added: 21.4 Gets the insurance information for a patient similarly to how it shows in the Family Module. Will typically return between 0 and 2 rows, one row for each insurance for the patient. Coverage percentages are not returned here, but must be obtained separately (currently with a query). This area of the Family Module also shows discount plans, which are obtained through DiscountPlanSubs GET. PatNum: Required in the URL. Returned fields are detailed below: InsSubNum:inssub.InsSubNum. Primary key to insurance subscriber. Subscriber: inssub.Subscriber. The PatNum of the subscriber. subscriber: First and last name of Subscriber from patient table. SubscriberID: inssub.SubscriberID. Number assigned by insurance company, may be Medicaid ID. SubscNote: inssub.SubscNote. Stores any other information that affects coverage. PatPlanNum: patplan.PatPlanNum. Primary key to patient plan. Ordinal: patplan.Ordinal. Numerical representation of the patient's insurance order. 1, 2, 3, etc. ordinal: Description of Ordinal. Primary, Secondary, Medical, or Other insurance. IsPending: patplan.IsPending. Informational only. true or false. Identifies insurance information that is incomplete or unverified. Relationship: patplan.Relationship to subscriber. Self, Spouse, Child, Employee, HandicapDep, SignifOther, InjuredPlaintiff, LifePartner, or Dependant. PatID: patplan.PatID. Optional patient ID which overrides Subscriber ID on eclaims. CarrierNum: carrier.CarrierNum. Primary key to the carrier. CarrierName: carrier.CarrierName. Full name of carrier. PlanNum: insplan.PlanNum. Primary key to the insurance plan. GroupName: insplan.GroupName. Each plan has a group name, typically similar to employer. GroupNum: insplan.GroupNum. Issued by the carrier. PlanNote: insplan.PlanNote. Notes specific to the subscriber and associated family members. FeeSched: insplan.FeeSched, foreign key to feesched.FeeSchedNum. feeschedule: feesched.Description of the fee schedule. PlanType: insplan.PlanType. \"\"=percentage, \"p\"=ppo percentage, \"f\"=flat copay, \"c\"=capitation. planType: Description of PlanType. Category Percentage, PPO Fixed Benefit, PPO Percentage, Medicaid or Flat Co-pay, or Capitation. CopayFeeSched: insplan.CopayFeeSched, foreign key to feesched.FeeSchedNum. EmployerNum: insplan.EmployerNum, foreign key to employer.EmployerNum. employer: employer.EmpName. Description of EmployerNum. IsMedical: insplan.IsMedical. True if this is medical insurance rather than dental insurance. Example Request: GET /familymodules/13/Insurance Example Response: [ { \"PatNum\": 13, \"InsSubNum\": 7, \"Subscriber\": 10, \"subscriber\": \"Eve Wilkins\", \"SubscriberID\": \"541147842\", \"SubscNote\": \"\", \"PatPlanNum\": 17, \"Ordinal\": 1, \"ordinal\": \"Primary\", \"IsPending\": \"false\", \"Relationship\": \"LifePartner\", \"PatID\": \"\", \"CarrierNum\": 8, \"CarrierName\": \"BCBS\", \"PlanNum\": 7, \"GroupName\": \"\", \"GroupNum\": \"\", \"PlanNote\": \"\", \"FeeSched\": 53, \"feeSchedule\": \"Standard\", \"PlanType\": \"\", \"planType\": \"Category Percentage\", \"CopayFeeSched\": 0, \"EmployerNum\": 0, \"employer\": \"\", \"IsMedical\": \"false\" }, { \"PatNum\": 13, \"InsSubNum\": 16, \"Subscriber\": 13, \"subscriber\": \"John Wilkins\", \"SubscriberID\": \"987654\", \"SubscNote\": \"\", \"PatPlanNum\": 18, \"Ordinal\": 2, \"ordinal\": \"Secondary\", \"IsPending\": \"false\", \"Relationship\": \"Self\", \"PatID\": \"\", \"CarrierNum\": 9, \"CarrierName\": \"Metlife Dental\", \"PlanNum\": 11, \"GroupName\": \"\", \"GroupNum\": \"\", \"PlanNote\": \"Insurance plan note.\", \"FeeSched\": 0, \"feeSchedule\": \"\", \"PlanType\": \"p\", \"planType\": \"PPO Percentage\", \"CopayFeeSched\": 0, \"EmployerNum\": 2, \"employer\": \"Happy Dental\", \"IsMedical\": \"false\" } ] 200 OK 400 Bad Request (with explanation) 404 Not Found (with explanation)","body":{"mode":"raw","raw":"[ { \"PatNum\": 13, \"InsSubNum\": 7, \"Subscriber\": 10, \"subscriber\": \"Eve Wilkins\", \"SubscriberID\": \"541147842\", \"SubscNote\": \"\", \"PatPlanNum\": 17, \"Ordinal\": 1, \"ordinal\": \"Primary\", \"IsPending\": \"false\", \"Relationship\": \"LifePartner\", \"PatID\": \"\", \"CarrierNum\": 8, \"CarrierName\": \"BCBS\", \"PlanNum\": 7, \"GroupName\": \"\", \"GroupNum\": \"\", \"PlanNote\": \"\", \"FeeSched\": 53, \"feeSchedule\": \"Standard\", \"PlanType\": \"\", \"planType\": \"Category Percentage\", \"CopayFeeSched\": 0, \"EmployerNum\": 0, \"employer\": \"\", \"IsMedical\": \"false\" }, { \"PatNum\": 13, \"InsSubNum\": 16, \"Subscriber\": 13, \"subscriber\": \"John Wilkins\", \"SubscriberID\": \"987654\", \"SubscNote\": \"\", \"PatPlanNum\": 18, \"Ordinal\": 2, \"ordinal\": \"Secondary\", \"IsPending\": \"false\", \"Relationship\": \"Self\", \"PatID\": \"\", \"CarrierNum\": 9, \"CarrierName\": \"Metlife Dental\", \"PlanNum\": 11, \"GroupName\": \"\", \"GroupNum\": \"\", \"PlanNote\": \"Insurance plan note.\", \"FeeSched\": 0, \"feeSchedule\": \"\", \"PlanType\": \"p\", \"planType\": \"PPO Percentage\", \"CopayFeeSched\": 0, \"EmployerNum\": 2, \"employer\": \"Happy Dental\", \"IsMedical\": \"false\" } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API FeeScheds","item":[{"name":"/feescheds","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/feescheds","host":["{{url_local}}{{version_api}}"],"path":["/feescheds"],"query":null},"description":"FeeScheds GET Version Added: 22.4.31 Gets a list of fee schedules. Example Request: GET /feescheds Example Response: [ { \"FeeSchedNum\": 53, \"Description\": \"Standard\", \"FeeSchedType\": \"Normal\", \"ItemOrder\": 0, \"IsHidden\": \"false\", \"IsGlobal\": \"true\", \"SecUserNumEntry\": 0, \"SecDateEntry\": \"0001-01-01\", \"SecDateTEdit\": \"2018-07-18 08:59:30\" }, { \"FeeSchedNum\": 54, \"Description\": \"BCBS Co-pay\", \"FeeSchedType\": \"CoPay\", \"ItemOrder\": 1, \"IsHidden\": \"false\", \"IsGlobal\": \"true\", \"SecUserNumEntry\": 1, \"SecDateEntry\": \"2021-08-05\", \"SecDateTEdit\": \"2021-08-05 12:54:44\" }, { \"FeeSchedNum\": 55, \"Description\": \"USR Archive\", \"FeeSchedType\": \"Normal\", \"ItemOrder\": 2, \"IsHidden\": \"true\", \"IsGlobal\": \"true\", \"SecUserNumEntry\": 1, \"SecDateEntry\": \"2022-02-05\", \"SecDateTEdit\": \"2022-02-05 13:25:55\" }, etc... ] 200 OK 400 BadRequest (with explanation)","body":{"mode":"raw","raw":"[ { \"FeeSchedNum\": 53, \"Description\": \"Standard\", \"FeeSchedType\": \"Normal\", \"ItemOrder\": 0, \"IsHidden\": \"false\", \"IsGlobal\": \"true\", \"SecUserNumEntry\": 0, \"SecDateEntry\": \"0001-01-01\", \"SecDateTEdit\": \"2018-07-18 08:59:30\" }, { \"FeeSchedNum\": 54, \"Description\": \"BCBS Co-pay\", \"FeeSchedType\": \"CoPay\", \"ItemOrder\": 1, \"IsHidden\": \"false\", \"IsGlobal\": \"true\", \"SecUserNumEntry\": 1, \"SecDateEntry\": \"2021-08-05\", \"SecDateTEdit\": \"2021-08-05 12:54:44\" }, { \"FeeSchedNum\": 55, \"Description\": \"USR Archive\", \"FeeSchedType\": \"Normal\", \"ItemOrder\": 2, \"IsHidden\": \"true\", \"IsGlobal\": \"true\", \"SecUserNumEntry\": 1, \"SecDateEntry\": \"2022-02-05\", \"SecDateTEdit\": \"2022-02-05 13:25:55\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/feescheds","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/feescheds","host":["{{url_local}}{{version_api}}"],"path":["/feescheds"],"query":null},"description":"FeeScheds POST (create) Version Added: 23.3.7 Creates a new feesched. Global fee schedules only allow a single (global) fee per procedure. When using a non-global fee schedule, fees can be overridden for clinics or providers. See Fee Override for Provider or Clinic for more information. Description: Required. The name of the fee schedule. FeeSchedType: Required. Either \"Normal\", \"CoPay\", \"OutNetwork\", \"FixedBenefit\", or \"ManualBlueBook\". FeeSchedType cannot be changed once it is inserted. IsHidden: Optional. Either \"true\" or \"false\". Default false. IsGlobal: Optional. Either \"true\" or \"false\". Default true. Example Requests: POST /feescheds { \"Description\": \"BCBS_2023\", \"FeeSchedType\": \"Normal\" } or { \"Description\": \"BCBS_2023\", \"FeeSchedType\": \"Normal\", \"IsHidden\": \"false\", \"IsGlobal\": \"false\" } Example Response: { \"FeeSchedNum\": 274, \"Description\": \"BCBS_2023\", \"FeeSchedType\": \"Normal\", \"ItemOrder\": 16, \"IsHidden\": \"false\", \"IsGlobal\": \"false\", \"SecUserNumEntry\": 0, \"SecDateEntry\": \"2023-11-03\", \"SecDateTEdit\": \"2023-11-03 13:57:46\" } 200 OK 400 BadRequest (with explanation)","body":{"mode":"raw","raw":"{ \"Description\": \"BCBS_2023\", \"FeeSchedType\": \"Normal\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/feescheds/293","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/feescheds/293","host":["{{url_local}}{{version_api}}"],"path":["/feescheds/293"],"query":null},"description":"FeeScheds PUT (update) Version Added: 23.3.7 Updates a feesched. FeeSchedNum: Required in the URL. Description: The name of the fee schedule. IsHidden: Either \"true\" or \"false\". IsGlobal: Either \"true\" or \"false\". Example Request: PUT /feescheds/293 { \"Description\": \"BCBS_outdated\", \"IsHidden\": \"true\", } Example Response: { \"FeeSchedNum\": 293, \"Description\": \"BCBS_outdated\", \"FeeSchedType\": \"Normal\", \"ItemOrder\": 16, \"IsHidden\": \"true\", \"IsGlobal\": \"false\", \"SecUserNumEntry\": 0, \"SecDateEntry\": \"2022-01-01\", \"SecDateTEdit\": \"2023-11-03 14:57:46\" } 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"Description\": \"BCBS_outdated\", \"IsHidden\": \"true\", }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API HistAppointments","item":[{"name":"/histappointments","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/histappointments","host":["{{url_local}}{{version_api}}"],"path":["/histappointments"],"query":null},"description":"HistAppointments GET (multiple) Version Added: 23.1.30 A HistAppointment is a historical copy of an appointment. A new HistAppointment entry is created anytime an appointment is created, changed, missed, cancelled, or deleted. A single AptNum may have many associated HistAppointments. Parameters: All optional. HistApptAction: Either \"Created\", \"Changed\", \"Missed\", \"Cancelled\", or \"Deleted\". AptNum: Filter responses by AptNum. PatNum: Filter responses by PatNum. AptStatus: Either \"Scheduled\", \"Complete\", \"UnschedList\", \"Broken\", or \"Planned\". ClinicNum: Filter responses by ClinicNum. Leave blank if not using clincs or want results for all clinics. date: For a single day, in \"yyyy-MM-dd\" format. dateStart, dateEnd: For a date range, inclusive of both dates, in \"yyyy-MM-dd\" format. Example Requests: GET /histappointments GET /histappointments?PatNum=1 GET /histappointments?AptNum=266 Example Responses: [ { \"HistApptNum\": 1, \"HistUserNum\": 0, \"HistDateTStamp\": \"2021-05-20 14:50:44\", \"HistApptAction\": \"Created\", \"ApptSource\": \"EConnector\", \"AptNum\": 1, \"PatNum\": 1, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XXXX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 7, \"Note\": \"\", \"ProvNum\": 1, \"provAbbr\": \"DOC\", \"ProvHyg\": 0, \"AptDateTime\": \"2021-05-20 15:50:44\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"false\", \"ProcDescript\": \"\", \"ClinicNum\": 1, \"IsHygiene\": \"false\", \"DateTStamp\": \"2021-05-20 14:50:44\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 0, \"Priority\": \"Normal\", \"PatternSecondary\": \"/X////X/\" }, { \"HistApptNum\": 3, \"HistUserNum\": 1, \"HistDateTStamp\": \"2021-05-24 14:32:40\", \"HistApptAction\": \"Changed\", \"ApptSource\": \"None\", \"AptNum\": 2, \"PatNum\": 1, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XXXXXXXX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 7, \"Note\": \"\", \"ProvNum\": 1, \"provAbbr\": \"DOC\", \"ProvHyg\": 0, \"AptDateTime\": \"2021-05-24 12:00:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"true\", \"ProcDescript\": \"PerEx, LimEx, CmpEx\", \"ClinicNum\": 1, \"IsHygiene\": \"false\", \"DateTStamp\": \"2021-05-24 14:32:40\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 0, \"Priority\": \"Normal\", \"PatternSecondary\": \"XX////////XX\" }, { \"HistApptNum\": 4, \"HistUserNum\": 1, \"HistDateTStamp\": \"2021-05-25 08:39:47\", \"HistApptAction\": \"Changed\", \"ApptSource\": \"None\", \"AptNum\": 2, \"PatNum\": 1, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XXXXXXXX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 7, \"Note\": \"\", \"ProvNum\": 1, \"provAbbr\": \"DOC\", \"ProvHyg\": 0, \"AptDateTime\": \"2021-05-25 12:00:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"true\", \"ProcDescript\": \"PerEx, LimEx, CmpEx\", \"ClinicNum\": 1, \"IsHygiene\": \"false\", \"DateTStamp\": \"2021-05-25 08:39:47\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 0, \"Priority\": \"Normal\", \"PatternSecondary\": \"XX////////XX\" }, etc... ] or [ { \"HistApptNum\": 2751, \"HistUserNum\": 1, \"HistDateTStamp\": \"2022-05-16 09:51:38\", \"HistApptAction\": \"Changed\", \"ApptSource\": \"None\", \"AptNum\": 266, \"PatNum\": 68, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 15, \"Note\": \"\", \"ProvNum\": 1, \"provAbbr\": \"DOC\", \"ProvHyg\": 0, \"AptDateTime\": \"2022-05-16 12:40:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"false\", \"ProcDescript\": \"ProChild\", \"ClinicNum\": 5, \"IsHygiene\": \"false\", \"DateTStamp\": \"2022-05-16 09:51:38\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 0, \"Priority\": \"Normal\", \"PatternSecondary\": \"//////\" }, { \"HistApptNum\": 2752, \"HistUserNum\": 1, \"HistDateTStamp\": \"2022-05-16 09:52:28\", \"HistApptAction\": \"Changed\", \"ApptSource\": \"None\", \"AptNum\": 266, \"PatNum\": 68, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 15, \"Note\": \"\", \"ProvNum\": 1, \"provAbbr\": \"DOC\", \"ProvHyg\": 0, \"AptDateTime\": \"2022-05-16 12:40:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"false\", \"ProcDescript\": \"ProChild\", \"ClinicNum\": 5, \"IsHygiene\": \"false\", \"DateTStamp\": \"2022-05-16 09:52:28\", \"DateTimeArrived\": \"2022-05-16 00:00:00\", \"DateTimeSeated\": \"2022-05-16 00:00:00\", \"DateTimeDismissed\": \"2022-05-16 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 0, \"Priority\": \"Normal\", \"PatternSecondary\": \"//////\" }, { \"HistApptNum\": 2753, \"HistUserNum\": 1, \"HistDateTStamp\": \"2022-05-16 09:55:06\", \"HistApptAction\": \"Missed\", \"ApptSource\": \"None\", \"AptNum\": 266, \"PatNum\": 68, \"AptStatus\": \"Broken\", \"Pattern\": \"//XX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 15, \"Note\": \"\", \"ProvNum\": 1, \"provAbbr\": \"DOC\", \"ProvHyg\": 0, \"AptDateTime\": \"2022-05-16 12:40:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"false\", \"ProcDescript\": \"ProChild\", \"ClinicNum\": 5, \"IsHygiene\": \"false\", \"DateTStamp\": \"2022-05-16 09:55:06\", \"DateTimeArrived\": \"2022-05-16 00:00:00\", \"DateTimeSeated\": \"2022-05-16 00:00:00\", \"DateTimeDismissed\": \"2022-05-16 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 0, \"Priority\": \"Normal\", \"PatternSecondary\": \"//////\" }, { \"HistApptNum\": 2754, \"HistUserNum\": 1, \"HistDateTStamp\": \"2022-05-16 09:55:19\", \"HistApptAction\": \"Deleted\", \"ApptSource\": \"None\", \"AptNum\": 266, \"PatNum\": 68, \"AptStatus\": \"Broken\", \"Pattern\": \"//XX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 15, \"Note\": \"\", \"ProvNum\": 1, \"provAbbr\": \"DOC\", \"ProvHyg\": 0, \"AptDateTime\": \"2022-05-16 12:40:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"false\", \"ProcDescript\": \"ProChild\", \"ClinicNum\": 5, \"IsHygiene\": \"false\", \"DateTStamp\": \"2022-05-16 09:55:19\", \"DateTimeArrived\": \"2022-05-16 00:00:00\", \"DateTimeSeated\": \"2022-05-16 00:00:00\", \"DateTimeDismissed\": \"2022-05-16 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 0, \"Priority\": \"Normal\", \"PatternSecondary\": \"//////\" } ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"HistApptNum\": 1, \"HistUserNum\": 0, \"HistDateTStamp\": \"2021-05-20 14:50:44\", \"HistApptAction\": \"Created\", \"ApptSource\": \"EConnector\", \"AptNum\": 1, \"PatNum\": 1, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XXXX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 7, \"Note\": \"\", \"ProvNum\": 1, \"provAbbr\": \"DOC\", \"ProvHyg\": 0, \"AptDateTime\": \"2021-05-20 15:50:44\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"false\", \"ProcDescript\": \"\", \"ClinicNum\": 1, \"IsHygiene\": \"false\", \"DateTStamp\": \"2021-05-20 14:50:44\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 0, \"Priority\": \"Normal\", \"PatternSecondary\": \"/X////X/\" }, { \"HistApptNum\": 3, \"HistUserNum\": 1, \"HistDateTStamp\": \"2021-05-24 14:32:40\", \"HistApptAction\": \"Changed\", \"ApptSource\": \"None\", \"AptNum\": 2, \"PatNum\": 1, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XXXXXXXX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 7, \"Note\": \"\", \"ProvNum\": 1, \"provAbbr\": \"DOC\", \"ProvHyg\": 0, \"AptDateTime\": \"2021-05-24 12:00:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"true\", \"ProcDescript\": \"PerEx, LimEx, CmpEx\", \"ClinicNum\": 1, \"IsHygiene\": \"false\", \"DateTStamp\": \"2021-05-24 14:32:40\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 0, \"Priority\": \"Normal\", \"PatternSecondary\": \"XX////////XX\" }, { \"HistApptNum\": 4, \"HistUserNum\": 1, \"HistDateTStamp\": \"2021-05-25 08:39:47\", \"HistApptAction\": \"Changed\", \"ApptSource\": \"None\", \"AptNum\": 2, \"PatNum\": 1, \"AptStatus\": \"Scheduled\", \"Pattern\": \"//XXXXXXXX//\", \"Confirmed\": 19, \"confirmed\": \"Not Called\", \"Op\": 7, \"Note\": \"\", \"ProvNum\": 1, \"provAbbr\": \"DOC\", \"ProvHyg\": 0, \"AptDateTime\": \"2021-05-25 12:00:00\", \"NextAptNum\": 0, \"UnschedStatus\": 0, \"unschedStatus\": \"\", \"IsNewPatient\": \"true\", \"ProcDescript\": \"PerEx, LimEx, CmpEx\", \"ClinicNum\": 1, \"IsHygiene\": \"false\", \"DateTStamp\": \"2021-05-25 08:39:47\", \"DateTimeArrived\": \"0001-01-01 00:00:00\", \"DateTimeSeated\": \"0001-01-01 00:00:00\", \"DateTimeDismissed\": \"0001-01-01 00:00:00\", \"DateTimeAskedToArrive\": \"0001-01-01 00:00:00\", \"colorOverride\": \"0,0,0\", \"AppointmentTypeNum\": 0, \"Priority\": \"Normal\", \"PatternSecondary\": \"XX////////XX\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API InsPlans","item":[{"name":"/insplans","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/insplans","host":["{{url_local}}{{version_api}}"],"path":["/insplans"],"query":null},"description":"InsPlans GET Version Added: 22.3.30 Gets a list of InsPlans. Example Request: GET /insplans Example Response: [ { \"PlanNum\": 6, \"GroupName\": \"United States Post Office\", \"GroupNum\": \"PB181863\", \"PlanNote\": \"Mostly covered.\", \"FeeSched\": 54, \"PlanType\": \"p\", \"CopayFeeSched\": 0, \"EmployerNum\": 23, \"CarrierNum\": 10, \"CodeSubstNone\": \"true\", \"IsHidden\": \"false\", \"MonthRenew\": 0, \"IsBlueBookEnabled\": \"false\" }, { \"PlanNum\": 14, \"GroupName\": \"REI\", \"GroupNum\": \"G189614\", \"PlanNote\": \"\", \"FeeSched\": 0, \"PlanType\": \"c\", \"CopayFeeSched\": 56, \"EmployerNum\": 23, \"CarrierNum\": 10, \"CodeSubstNone\": \"false\", \"IsHidden\": \"true\", \"MonthRenew\": 6, \"IsBlueBookEnabled\": \"false\" }, etc... ] 200 OK","body":{"mode":"raw","raw":"[ { \"PlanNum\": 6, \"GroupName\": \"United States Post Office\", \"GroupNum\": \"PB181863\", \"PlanNote\": \"Mostly covered.\", \"FeeSched\": 54, \"PlanType\": \"p\", \"CopayFeeSched\": 0, \"EmployerNum\": 23, \"CarrierNum\": 10, \"CodeSubstNone\": \"true\", \"IsHidden\": \"false\", \"MonthRenew\": 0, \"IsBlueBookEnabled\": \"false\" }, { \"PlanNum\": 14, \"GroupName\": \"REI\", \"GroupNum\": \"G189614\", \"PlanNote\": \"\", \"FeeSched\": 0, \"PlanType\": \"c\", \"CopayFeeSched\": 56, \"EmployerNum\": 23, \"CarrierNum\": 10, \"CodeSubstNone\": \"false\", \"IsHidden\": \"true\", \"MonthRenew\": 6, \"IsBlueBookEnabled\": \"false\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"","item":null,"description":null,"request":{"method":"","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}","host":["{{url_local}}{{version_api}}"],"path":[""],"query":null},"description":"InsPlans POST Version Added: 22.4.24 Creates a new InsPlan. CarrierNum: Required. FK to carrier.CarrierNum. GroupName: Optional. Typically the same as the employer. Used to identify difference in plans. GroupNum: Optional. The Plan Number in Canada. PlanNote: Optional. Note for this plan. Same for all subscribers. FeeSched: Optional. FK to feesched.FeeSchedNum. Default 0. PlanType: Optional. Must be one of the following: \"\" (Percentage), \"p\" (PPO Percentage), \"f\" (Flat Copay), or \"c\" (Capitation). Default is \"\" (Percentage). CopayFeeSched: (Added in version 23.3.17) Optional. FK to feesched.FeeSchedNum when FeeSchedType is CoPay. Typically only used for capitation or copay plans. Default 0. EmployerNum: Optional. FK to employer.EmployerNum. Default 0. CodeSubstNone: (Added in version 22.4.31) Optional. Either \"true\" or \"false\". Set \"true\" if this Insurance Plan should ignore any Substitution Codes. Default \"false\". IsHidden: (Added in version 22.4.31) Optional. Either \"true\" or \"false\". Default \"false\". MonthRenew: Optional. The month, 1-12, when the insurance plan renews. It will renew on the first of the month. Default 0 to indicate calendar year. IsBlueBookEnabled: Optional. Determines if the plan utilizes BlueBook or not. Cannot be set to true if PlanType is set to anything other than \"\" (Percentage). Defaults to true if AllowedFeeSchedsAutomate is set to BlueBook, otherwise defaults to false. Example Requests: POST /insplans { \"CarrierNum\": 10 } or { \"GroupName\": \"Walmart\", \"GroupNum\": \"W4875\", \"PlanNote\": \"Copayments\", \"FeeSched\": 56, \"PlanType\": \"f\", \"CopayFeeSched\": 172, \"EmployerNum\": 23, \"CarrierNum\": 10, \"CodeSubstNone\": \"false\", \"IsHidden\": \"false\", \"MonthRenew\": 12, \"IsBlueBookEnabled\": \"false\" } Example Response: { \"PlanNum\": 16, \"GroupName\": \"Walmart\", \"GroupNum\": \"W4875\", \"PlanNote\": \"Copayments\", \"FeeSched\": 56, \"PlanType\": \"f\", \"CopayFeeSched\": 172, \"EmployerNum\": 23, \"CarrierNum\": 10, \"CodeSubstNone\": \"false\", \"IsHidden\": \"false\", \"MonthRenew\": 12, \"IsBlueBookEnabled\": \"false\" } 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"CarrierNum\": 10 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"","item":null,"description":null,"request":{"method":"","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}","host":["{{url_local}}{{version_api}}"],"path":[""],"query":null},"description":"InsPlans PUT Version Added: 22.3.30 Updates an InsPlan. PlanNum: Required in the URL. GroupName: Optional. Typically the same as the employer. Used to identify difference in plans. GroupNum: Optional. The Plan Number in Canada. PlanNote: Optional. Note for this plan. Same for all subscribers. FeeSched: Optional. FK to feesched.FeeSchedNum. PlanType: Optional. Must be one of the following: \"\" (Percentage), \"p\" (PPO Percentage), \"f\" (Flat Copay), or \"c\" (Capitation). CopayFeeSched: (Added in version 23.3.17) Optional. FK to feesched.FeeSchedNum when FeeSchedType is CoPay. Typically only used for capitation or copay plans. EmployerNum: (Added in version 22.4.24) Optional. FK to employer.EmployerNum. CarrierNum: (Added in version 22.4.24) Optional. FK to carrier.CarrierNum. CodeSubstNone: (Added in version 22.4.31) Optional. Either \"true\" or \"false\". Set \"true\" if this Insurance Plan should ignore any Substitution Codes. IsHidden: (Added in version 22.4.31) Optional. Either \"true\" or \"false\". MonthRenew: Optional. The month, 1-12, when the insurance plan renews. It will renew on the first of the month. Use 0 to indicate calendar year. IsBlueBookEnabled: (Added in version 22.4.24) Optional. Determines if the plan utilizes BlueBook or not. Cannot be set to true if PlanType is set to anything other than \"\" (Percentage). Example Requests: PUT /insplans/15 { \"FeeSched\": 0, \"PlanType\": \"\", \"MonthRenew\": 0 } or { \"GroupName\": \"Pixar\", \"GroupNum\": \"Y4845\", \"PlanNote\": \"Copayments\", \"FeeSched\": 56, \"PlanType\": \"f\", \"CopayFeeSched\": 172, \"EmployerNum\": 12, \"CarrierNum\": 8, \"CodeSubstNone\": \"false\", \"IsHidden\": \"false\", \"MonthRenew\": 12 \"IsBlueBookEnabled\": \"false\" } Example Response: { \"PlanNum\": 15, \"GroupName\": \"Pixar\", \"GroupNum\": \"Y4845\", \"PlanNote\": \"Copayments\", \"FeeSched\": 56, \"PlanType\": \"f\", \"CopayFeeSched\": 172, \"EmployerNum\": 12, \"CarrierNum\": 8, \"CodeSubstNone\": \"false\", \"IsHidden\": \"false\", \"MonthRenew\": 12 \"IsBlueBookEnabled\": \"false\" } 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"FeeSched\": 0, \"PlanType\": \"\", \"MonthRenew\": 0 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API InsSubs","item":[{"name":"/inssubs/34","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/inssubs/34","host":["{{url_local}}{{version_api}}"],"path":["/inssubs/34"],"query":null},"description":"InsSubs GET (single) Version Added: 22.4.28 Gets a single InsSub. InsSubNum: Required in the URL. Example Request: GET /inssubs/34 Example Response: { \"InsSubNum\":34, \"PlanNum\": 15, \"Subscriber\": 1, \"DateEffective\":\"2019-01-01\", \"DateTerm\": \"2019-12-31\", \"SubscriberID\":\"8645332\", \"BenefitNotes\":\"\", \"ReleaseInfo\":\"true\", \"AssignBen\":\"true\", \"SubscNote\":\"Other info\", \"SecDateTEdit\":\"2023-03-02 04:15:00\" } 200 OK 404 NotFound 400 BadRequest","body":{"mode":"raw","raw":"{ \"InsSubNum\":34, \"PlanNum\": 15, \"Subscriber\": 1, \"DateEffective\":\"2019-01-01\", \"DateTerm\": \"2019-12-31\", \"SubscriberID\":\"8645332\", \"BenefitNotes\":\"\", \"ReleaseInfo\":\"true\", \"AssignBen\":\"true\", \"SubscNote\":\"Other info\", \"SecDateTEdit\":\"2023-03-02 04:15:00\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/inssubs?PlanNum=11","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/inssubs?PlanNum=11","host":["{{url_local}}{{version_api}}"],"path":["/inssubs?PlanNum=11"],"query":null},"description":"InsSubs GET (multiple) Version Added: 22.4.28 Gets all InsSubs based on provided parameters. If no parameter is given, it will get all InsSubs ordered by InsSubNum. PlanNum: Optional. The PlanNum of the InsPlan. Subscriber: Optional. The PatNum of the patient who is subscribed to this plan. SecDateTEdit: Optional. The last date the InsPlan was edited. Returns all InsSubs on or after this date. Example Request: GET /inssubs?PlanNum=11 GET /inssubs?Subscriber=485 GET /inssubs?SecDateTEdit=2023-03-02%2004:15:00 Example Response: [ { \"InsSubNum\":43, \"PlanNum\": 15, \"Subscriber\": 1, \"DateEffective\":\"2019-01-01\", \"DateTerm\": \"2019-12-31\", \"SubscriberID\":\"8645332\", \"BenefitNotes\":\"\", \"ReleaseInfo\":\"true\", \"AssignBen\":\"true\", \"SubscNote\":\"Other info\", \"SecDateTEdit\":\"2023-03-02 04:15:00\" }, etc... ] 200 OK 404 NotFound 400 BadRequest","body":{"mode":"raw","raw":"[ { \"InsSubNum\":43, \"PlanNum\": 15, \"Subscriber\": 1, \"DateEffective\":\"2019-01-01\", \"DateTerm\": \"2019-12-31\", \"SubscriberID\":\"8645332\", \"BenefitNotes\":\"\", \"ReleaseInfo\":\"true\", \"AssignBen\":\"true\", \"SubscNote\":\"Other info\", \"SecDateTEdit\":\"2023-03-02 04:15:00\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/inssubs","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/inssubs","host":["{{url_local}}{{version_api}}"],"path":["/inssubs"],"query":null},"description":"InsSubs POST (create) Version Added: 21.1 This does not create a new insurance plan or change benefits. SecDateTEdit cannot be set by developers. PlanNum: Required. The PlanNum of the InsPlan. Subscriber: Required. The PatNum of the patient who is subscribed to this plan. SubscriberID: Required. Number assigned by insurance company. DateEffective: Optional. The date this InsPlan became effective. DateTerm: Optional. Not usually used. The date this InsPlan was terminated. BenefitNotes: Optional. BenefitNotes are specifically designed to store automated notes. For example, when automatically requesting benefits through Trojan. Benefits are stored here in text form for later reference. Not at plan level because might be specific to subscriber. If blank, it may display a benefitNote for another subscriber to the plan. ReleaseInfo: Added in 21.4. Optional. This is set to either \"true\" or \"false\". Default \"true\". This authorizes the release of information based on if there is a signature on file. AssignBen: Added in 21.4. Optional. Either \"true\" or \"false\". Default is according to global preference within Open Dental. This authorizes the assignment of benefits based on if there is a signature on file. SubscNote: (Added in version 22.4.26) Optional. Use to store any other info that affects coverage. Example Request: POST /inssubs { \"PlanNum\": 15, \"Subscriber\": 1, \"DateEffective\":\"2019-01-01\", \"DateTerm\": \"2019-12-31\", \"SubscriberID\":\"8645332\", \"BenefitNotes\":\"Waiting period on crowns.\", \"ReleaseInfo\":\"true\", \"AssignBen\":\"true\", \"SubscNote\":\"Other info\", \"SecDateTEdit\":\"2023-01-12 10:45:00\" } Example Response: { \"InsSubNum\":43, \"PlanNum\": 15, \"Subscriber\": 1, \"DateEffective\":\"2019-01-01\", \"DateTerm\": \"2019-12-31\", \"SubscriberID\":\"8645332\", \"BenefitNotes\":\"Add these notes\", \"ReleaseInfo\":\"true\", \"AssignBen\":\"true\", \"SubscNote\":\"Other info\", \"SecDateTEdit\":\"2023-02-02 09:22:00\" } 201 Created (no \"location\" Header is returned because there is no GET method yet) 400 (Missing or invalid fields)","body":{"mode":"raw","raw":"{ \"PlanNum\": 15, \"Subscriber\": 1, \"DateEffective\":\"2019-01-01\", \"DateTerm\": \"2019-12-31\", \"SubscriberID\":\"8645332\", \"BenefitNotes\":\"Waiting period on crowns.\", \"ReleaseInfo\":\"true\", \"AssignBen\":\"true\", \"SubscNote\":\"Other info\", \"SecDateTEdit\":\"2023-01-12 10:45:00\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/inssubs/82","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/inssubs/82","host":["{{url_local}}{{version_api}}"],"path":["/inssubs/82"],"query":null},"description":"InsSubs PUT (update) Version Added: 21.1 This can be used to assign a different PlanNum or Subscriber to this InsSub. None of these changes affect the InsSubNum, so all the PatPlans (coverage) for family members will continue to point to this InsSub and will be untouched. You can obtain the InsSubNum from FamilyModules GET Insurance. SecDateTEdit is updated automatically and cannot be set by developers. InsSubNum: Required in the URL. PlanNum: Optional. The PlanNum of the InsPlan. Subscriber: Added in 21.4. Optional. The PatNum of the patient who is subscribed to this plan. SubscriberID: Added in 21.4. Optional. DateEffective: Added in 21.4. Optional. The date this InsPlan became effective. DateTerm: Added in 21.4. Optional. The date this InsPlan was terminated. BenefitNotes: Optional. BenefitNotes are specifically designed to store automated notes. For example, when automatically requesting benefits through Trojan. Benefits are stored here in text form for later reference. Not at plan level because might be specific to subscriber. If blank, it may display a benefitNote for another subscriber to the plan. ReleaseInfo: Added in 21.4. Optional. This is set to either \"true\" or \"false\". This authorizes the release of information based on if there is a signature on file. AssignBen: Added in 21.4. Optional. Either \"true\" or \"false\". This authorizes the assignment of benefits based on if there is a signature on file. SubscNote: (Added in version 22.4.26) Optional. Use to store any other info that affects coverage. Example Request: PUT /inssubs/82 { \"PlanNum\": 15, \"Subscriber\": 1, \"DateEffective\":\"2019-01-01\", \"DateTerm\": \"2019-12-31\", \"SubscriberID\":\"8645332\", \"BenefitNotes\":\"Waiting period on crowns.\", \"ReleaseInfo\":\"true\", \"AssignBen\":\"true\", \"SubscNote\":\"Other info\", \"SecDateTEdit\":\"2023-05-05 07:20:00\" } Example Response: 200 OK","body":{"mode":"raw","raw":"{ \"PlanNum\": 15, \"Subscriber\": 1, \"DateEffective\":\"2019-01-01\", \"DateTerm\": \"2019-12-31\", \"SubscriberID\":\"8645332\", \"BenefitNotes\":\"Waiting period on crowns.\", \"ReleaseInfo\":\"true\", \"AssignBen\":\"true\", \"SubscNote\":\"Other info\", \"SecDateTEdit\":\"2023-05-05 07:20:00\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/inssubs/82","item":null,"description":null,"request":{"method":"DELETE","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/inssubs/82","host":["{{url_local}}{{version_api}}"],"path":["/inssubs/82"],"query":null},"description":"InsSubs DELETE Version Added: 21.1 Will fail if any PatPlans exist. You can obtain the InsSubNum from FamilyModules GET Insurance. InsSubNum: Required in the URL. Example Request: DELETE /inssubs/82 Example Response: 200 OK 400 Bad Request, \"Can't delete InsSub because PatPlans are still attached.\"","body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API InsVerifies","item":[{"name":"/insverifies/12","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/insverifies/12","host":["{{url_local}}{{version_api}}"],"path":["/insverifies/12"],"query":null},"description":"InsVerifies GET (single) Version Added: 23.2.23 Gets a single insurance verification. InsVerifyNum: Required in the URL. Example Requests: GET /insverifies/12 Example Response: { \"InsVerifyNum\": 12, \"DateLastVerified\": \"2022-11-07\", \"VerifyType\": \"InsuranceBenefit\", \"FKey\": 45, \"DefNum\": 789, \"SecDateTEdit\": \"2022-12-02 09:39:54\" } 200 OK 404 BadRequest (with explanation)","body":{"mode":"raw","raw":"{ \"InsVerifyNum\": 12, \"DateLastVerified\": \"2022-11-07\", \"VerifyType\": \"InsuranceBenefit\", \"FKey\": 45, \"DefNum\": 789, \"SecDateTEdit\": \"2022-12-02 09:39:54\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/insverifies","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/insverifies","host":["{{url_local}}{{version_api}}"],"path":["/insverifies"],"query":null},"description":"InsVerifies GET (multiple) Version Added: 23.2.23 Gets insurance verifications. Parameters: All optional. VerifyType: Can be either \"PatientEnrollment\" to verify a patient's insurance eligibility, or \"InsuranceBenefit\" to verify an insurance plan's benefits. SecDateTEdit: Only include InsVerifies with a SecDateTEdit altered after the specified date and time. String in \"yyyy-MM-dd HH:mm:ss\" format. Example Requests: GET /insverifies GET /insverifies?VerifyType=InsuranceBenefit&SecDateTEdit=2022-07-01%2005%3A30%3A00 Example Response: [ { \"InsVerifyNum\": 12, \"DateLastVerified\": \"2022-11-07\", \"VerifyType\": \"InsuranceBenefit\", \"FKey\": 45, \"DefNum\": 789, \"SecDateTEdit\": \"2022-12-02 09:39:54\" }, { \"InsVerifyNum\": 13, \"DateLastVerified\": \"2022-09-27\", \"VerifyType\": \"PatientEnrollment\", \"FKey\": 325, \"DefNum\": 721, \"SecDateTEdit\": \"2022-09-29 11:09:13\" }, etc... ] 200 OK 400 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"InsVerifyNum\": 12, \"DateLastVerified\": \"2022-11-07\", \"VerifyType\": \"InsuranceBenefit\", \"FKey\": 45, \"DefNum\": 789, \"SecDateTEdit\": \"2022-12-02 09:39:54\" }, { \"InsVerifyNum\": 13, \"DateLastVerified\": \"2022-09-27\", \"VerifyType\": \"PatientEnrollment\", \"FKey\": 325, \"DefNum\": 721, \"SecDateTEdit\": \"2022-09-29 11:09:13\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/insverifies","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/insverifies","host":["{{url_local}}{{version_api}}"],"path":["/insverifies"],"query":null},"description":"InsVerifies PUT Version Added: 21.1 Updates an insurance verification. Sets the date that either a patient's insurance eligibility or an insurance plan's benefits were last verified. As with all insverify entries in our database, historical entries are always retained in the insverifyhist table. See Insurance Verification List for more information on insurance verification. DateLastVerified: Required. String in \"yyyy-MM-dd\" format. VerifyType: Required. Can be either \"PatientEnrollment\" to verify a patient's insurance eligibility, or \"InsuranceBenefit\" to verify an insurance plan's benefits. FKey: Required. If \"PatientEnrollment\" was passed in for VerifyType, then FKey must be a valid patplan.PatPlanNum. If \"InsuranceBenefit\" was passed in for VerifyType, FKey must be a valid insplan.PlanNum. DefNum: Optional. Must be a valid DefNum where definition.Category=38. Example Request: PUT /insverifies { \"DateLastVerified\": \"2022-09-27\", \"VerifyType\": \"PatientEnrollment\", \"FKey\": 325, \"DefNum\": 721 } Example Response: 200 OK 400 BadRequest (with explanation)","body":{"mode":"raw","raw":"{ \"DateLastVerified\": \"2022-09-27\", \"VerifyType\": \"PatientEnrollment\", \"FKey\": 325, \"DefNum\": 721 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API MedicationPats","item":[{"name":"/medicationpats?PatNum=234","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/medicationpats?PatNum=234","host":["{{url_local}}{{version_api}}"],"path":["/medicationpats?PatNum=234"],"query":null},"description":"MedicationPats GET Version Added: 21.3 Gets a list of all medications for a given patient. Example Request: GET /medicationpats?PatNum=234 Example Response: [ { \"MedicationPatNum\": 45, \"PatNum\": \"234\", \"medName\": \"Metformin\", \"MedicationNum\": 12, \"PatNote\": \"500mg, taken twice a day.\", \"DateStart\": \"2000-06-20\", \"DateStop\": \"0001-01-01\", \"ProvNum\": 1 }, etc... ]","body":{"mode":"raw","raw":"[ { \"MedicationPatNum\": 45, \"PatNum\": \"234\", \"medName\": \"Metformin\", \"MedicationNum\": 12, \"PatNote\": \"500mg, taken twice a day.\", \"DateStart\": \"2000-06-20\", \"DateStop\": \"0001-01-01\", \"ProvNum\": 1 }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/medicationpats","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/medicationpats","host":["{{url_local}}{{version_api}}"],"path":["/medicationpats"],"query":null},"description":"MedicationPats POST Version Added: 21.3 Attaches a medication to a patient. PatNum: Required. medName: Required. Tries to match to an existing medication. If a new medication must be created, it will be assumed to be generic rather than brand. For more control, use medication POST. MedicationNum: Rarely used. Just use medName instead, which handles insertion of a Medication automatically. If MedicationNum is used, then medName is not required. PatNote: Optional. DateStart: Optional. String in \"yyyy-MM-dd\" format. Default \"0001-01-01\". DateStop: Optional. String in \"yyyy-MM-dd\" format. Default \"0001-01-01\". ProvNum: Optional. Default is 0. Example Requests: POST /medicationpats { \"PatNum\": 234, \"medName\": \"Metformin\" } or { \"PatNum\": 234, \"medName\": \"Metformin\", \"PatNote\": \"500mg, taken twice a day.\", \"DateStart\": \"2006-02-01\", \"DateStop\": \"0001-01-01\", \"ProvNum\": 1 } Example Response: 201 Created 400 BadRequest (Missing or Invalid fields) 404 NotFound \"Patient not found\", \"Provider not found\" or \"Medication not found\"","body":{"mode":"raw","raw":"{ \"PatNum\": 234, \"medName\": \"Metformin\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/medicationpats/212","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/medicationpats/212","host":["{{url_local}}{{version_api}}"],"path":["/medicationpats/212"],"query":null},"description":"MedicationPats PUT Version Added: 22.1 Updates the medication associated with a patient. MedicationPatNum: Required in the URL. PatNote: Optional. String for notes specific to this patient's medication. DateStart: Optional. String in \"yyyy-MM-dd\" format. Set to an empty string to reset to default of \"0001-01-01\". DateStop: Optional. String in \"yyyy-MM-dd\" format. Set to an empty string to reset to default of \"0001-01-01\". ProvNum: Optional. Example Requests: PUT /medicationpats/212 { \"PatNote\": \"500mg, taken twice a day.\", \"DateStart\": \"2006-02-01\", \"DateStop\": \"2022-05-11\", \"ProvNum\": 1 } Example Response: 200 OK 400 BadRequest (Missing or Invalid fields) 404 NotFound \"Provider not found\", \"Provider not found\" or \"MedicationPat not found\"","body":{"mode":"raw","raw":"{ \"PatNote\": \"500mg, taken twice a day.\", \"DateStart\": \"2006-02-01\", \"DateStop\": \"2022-05-11\", \"ProvNum\": 1 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/medicationpats/5","item":null,"description":null,"request":{"method":"DELETE","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/medicationpats/5","host":["{{url_local}}{{version_api}}"],"path":["/medicationpats/5"],"query":null},"description":"MedicationPats DELETE Version Added: 22.1 Deletes a MedicationPat by MedicationPatNum. MedicationPatNum: Required in URL. Example Request: DELETE /medicationpats/5 Example Response: 200 OK 400 BadRequest \"MedicationPatNum is required.\" 404 NotFound \"MedicationPat not found.\"","body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Medications","item":[{"name":"/medications","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/medications","host":["{{url_local}}{{version_api}}"],"path":["/medications"],"query":null},"description":"Medications GET Version Added: 21.3 Gets the list of medications that can be assigned to patients. Rarely used. Usually just use MedicationPats GET and POST. Example Request: GET /medications Example Response: [ { \"MedicationNum\": 12, \"MedName\": \"Glucophage\", \"GenericNum\": 124, \"genericName\": \"Metformin\", \"Notes\": \"Antidiabetic agent\", \"DateTStamp\": \"2016-12-01\" }, etc... ] Example Response: 201 Created 400 BadRequest (Missing or Invalid fields)","body":{"mode":"raw","raw":"[ { \"MedicationNum\": 12, \"MedName\": \"Glucophage\", \"GenericNum\": 124, \"genericName\": \"Metformin\", \"Notes\": \"Antidiabetic agent\", \"DateTStamp\": \"2016-12-01\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/medications","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/medications","host":["{{url_local}}{{version_api}}"],"path":["/medications"],"query":null},"description":"Medications POST Version Added: 21.3 Creates a new medication. Rarely used. Usually just use MedicationPats GET and POST. MedName: Required. genericName: Optional. If not provided this will be the same as MedName. Notes: Optional. Example Requests: POST /medications { \"MedName\": \"Metformin\" } { \"MedName\": \"Glucophage\", \"genericName\": \"Metformin\", \"Notes\": \"Antidiabetic agent\" } Example Response: 201 Created 400 BadRequest (Missing or Invalid fields) 404 Not Found \"No Medication with that genericName was found\"","body":{"mode":"raw","raw":"{ \"MedName\": \"Metformin\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Operatories","item":[{"name":"/operatories","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/operatories","host":["{{url_local}}{{version_api}}"],"path":["/operatories"],"query":null},"description":"Operatories GET Version Added: 21.1 Gets a list of all operatories. ClinicNum: Optional. Example Requests: GET /operatories GET /operatories?ClinicNum=2 Example Responses: [ { \"OperatoryNum\": 1, \"OpName\": \"Dr. Brian Albert\", \"Abbrev\": \"OP-1\", \"ItemOrder\": 0, \"IsHidden\": \"false\", \"ProvDentist\": 1, \"ProvHygienist\": 0, \"IsHygiene\": \"false\", \"ClinicNum\": 0, \"SetProspective\": \"false\", \"IsWebSched\": \"false\" }, { \"OperatoryNum\": 2, \"OpName\": \"Dr. Sarah Lexington\", \"Abbrev\": \"OP-2\", \"ItemOrder\": 1, \"IsHidden\": \"false\", \"ProvDentist\": 3, \"ProvHygienist\": 0, \"IsHygiene\": \"false\", \"ClinicNum\": 0, \"SetProspective\": \"false\", \"IsWebSched\": \"false\" } ]","body":{"mode":"raw","raw":"[ { \"OperatoryNum\": 1, \"OpName\": \"Dr. Brian Albert\", \"Abbrev\": \"OP-1\", \"ItemOrder\": 0, \"IsHidden\": \"false\", \"ProvDentist\": 1, \"ProvHygienist\": 0, \"IsHygiene\": \"false\", \"ClinicNum\": 0, \"SetProspective\": \"false\", \"IsWebSched\": \"false\" }, { \"OperatoryNum\": 2, \"OpName\": \"Dr. Sarah Lexington\", \"Abbrev\": \"OP-2\", \"ItemOrder\": 1, \"IsHidden\": \"false\", \"ProvDentist\": 3, \"ProvHygienist\": 0, \"IsHygiene\": \"false\", \"ClinicNum\": 0, \"SetProspective\": \"false\", \"IsWebSched\": \"false\" } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API PatFieldDefs","item":[{"name":"/patfielddefs","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/patfielddefs","host":["{{url_local}}{{version_api}}"],"path":["/patfielddefs"],"query":null},"description":"PatFieldDefs GET Version Added: 22.4.9 Gets a list of all Patient Field Defs. Example Request GET /patfielddefs Example Response: [ { \"PatFieldDefNum\": 7, \"FieldName\": \"Outstanding\", \"FieldType\": \"Currency\", \"PickList\": \"\", \"IsHidden\": \"false\" }, { \"PatFieldDefNum\": 8, \"FieldName\": \"Ortho Status\", \"FieldType\": \"PickList\", \"PickList\": \"In Progress\\r\\nDone\" \"IsHidden\": \"false\" }, { \"PatFieldDefNum\": 11, \"FieldName\": \"Accommodations\", \"FieldType\": \"Text\", \"PickList\": \"\" \"IsHidden\": \"false\" } ] 200 OK","body":{"mode":"raw","raw":"[ { \"PatFieldDefNum\": 7, \"FieldName\": \"Outstanding\", \"FieldType\": \"Currency\", \"PickList\": \"\", \"IsHidden\": \"false\" }, { \"PatFieldDefNum\": 8, \"FieldName\": \"Ortho Status\", \"FieldType\": \"PickList\", \"PickList\": \"In Progress\\r\\nDone\" \"IsHidden\": \"false\" }, { \"PatFieldDefNum\": 11, \"FieldName\": \"Accommodations\", \"FieldType\": \"Text\", \"PickList\": \"\" \"IsHidden\": \"false\" } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API PatFields","item":[{"name":"/patfields/5","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/patfields/5","host":["{{url_local}}{{version_api}}"],"path":["/patfields/5"],"query":null},"description":"PatFields GET (single) Version Added: 22.4 Gets a single PatField. PatFieldNum: Required in the URL. Example Request: GET /patfields/5 Example Response: { \"PatFieldNum\": 5, \"PatNum\": 69, \"FieldName\": \"Ins Verified\", \"FieldValue\": \"Yes\" \"SecDateTEdit\": \"2022-12-15 11:26:31\", \"SecDateEntry\":\"2021-12-04\" }","body":{"mode":"raw","raw":"{ \"PatFieldNum\": 5, \"PatNum\": 69, \"FieldName\": \"Ins Verified\", \"FieldValue\": \"Yes\" \"SecDateTEdit\": \"2022-12-15 11:26:31\", \"SecDateEntry\":\"2021-12-04\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/patfields","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/patfields","host":["{{url_local}}{{version_api}}"],"path":["/patfields"],"query":null},"description":"PatFields GET (multiple) Version Added: 21.1 Gets a list of PatFields. Parameters: All optional. PatNum: (Optional after version 22.4.5) The patient's PatNum. FieldName: (Optional after version 22.4.5) FK to patFieldDef.FieldName. Case sensitive. SecDateTEdit: (Added in version 22.4.5) Timestamp representing when the PatField was last edited. In \"yyyy-MM-dd HH:mm:ss\" format. Example Requests: GET /patfields GET /patfields?PatNum=69&FieldName=Ins%20Verified GET /patfields?FieldName=Deposit Example Responses: [ { \"PatFieldNum\": 1, \"PatNum\": 39, \"FieldName\": \"Deposit\", \"FieldValue\": \"450.29\", \"SecDateTEdit\": \"2022-12-22 09:31:00\", \"SecDateEntry\":\"2021-02-04\" }, { \"PatFieldNum\": 2, \"PatNum\": 68, \"FieldName\": \"Over 18\", \"FieldValue\": \"1\", \"SecDateTEdit\": \"2022-10-22 08:35:33\", \"SecDateEntry\":\"2020-03-14\" }, { \"PatFieldNum\": 3, \"PatNum\": 86, \"FieldName\": \"Ortho Status\", \"FieldValue\": \"In Progress\", \"SecDateTEdit\": \"2022-12-22 14:45:11\", \"SecDateEntry\":\"2020-06-24\" }, etc... ] or { \"PatFieldNum\": 5, \"PatNum\": 69, \"FieldName\": \"Ins Verified\", \"FieldValue\":\"Yes\" \"SecDateTEdit\": \"2022-12-15 11:26:31\", \"SecDateEntry\":\"2021-05-05\" } or { \"PatFieldNum\": 1, \"PatNum\": 39, \"FieldName\": \"Deposit\", \"FieldValue\": \"450.29\", \"SecDateTEdit\": \"2022-12-22 09:31:00\", \"SecDateEntry\":\"2009-11-09\" }","body":{"mode":"raw","raw":"[ { \"PatFieldNum\": 1, \"PatNum\": 39, \"FieldName\": \"Deposit\", \"FieldValue\": \"450.29\", \"SecDateTEdit\": \"2022-12-22 09:31:00\", \"SecDateEntry\":\"2021-02-04\" }, { \"PatFieldNum\": 2, \"PatNum\": 68, \"FieldName\": \"Over 18\", \"FieldValue\": \"1\", \"SecDateTEdit\": \"2022-10-22 08:35:33\", \"SecDateEntry\":\"2020-03-14\" }, { \"PatFieldNum\": 3, \"PatNum\": 86, \"FieldName\": \"Ortho Status\", \"FieldValue\": \"In Progress\", \"SecDateTEdit\": \"2022-12-22 14:45:11\", \"SecDateEntry\":\"2020-06-24\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/patfields","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/patfields","host":["{{url_local}}{{version_api}}"],"path":["/patfields"],"query":null},"description":"PatFields POST (create) Version Added: 22.4 Creates a PatField. Use a query to get a list of possible PatFieldDefs. Cannot create PatFields associated with hidden PatFieldDefs. Parameters: PatNum: Required. The patient's PatNum. FieldName: Required. FK to PatFieldDef.FieldName. Case sensitive. FieldValue: Required. Text depending on associated PatFieldDef.FieldType. (Text, PickList, Date, Checkbox, or Currency) Example Request: POST /patfields { \"PatNum\":10, \"FieldName\": \"Ins Verified\", \"FieldValue\":\"Yes\" } Example Response: { \"PatFieldNum\": 29, \"PatNum\": 10, \"FieldName\": \"Ins Verified\", \"FieldValue\": \"Yes\", \"SecDateTEdit\": \"2022-12-28 09:38:01\", \"SecDateEntry\":\"2021-12-04\" } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PatNum\":10, \"FieldName\": \"Ins Verified\", \"FieldValue\":\"Yes\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/patfields","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/patfields","host":["{{url_local}}{{version_api}}"],"path":["/patfields"],"query":null},"description":"PatFields PUT Version Added: 21.1 If a PatField already exists for the patient, it gets set to the new value, overwriting the old value. If a PatField does not yet exist for the patient, then a PatField gets inserted into the database. To delete a PatField, set the FieldValue to an empty string. Parameters: PatNum: Required. The patient's PatNum. FieldName: Required. FK to patFieldDef.FieldName. Case sensitive. FieldValue: Required. Text depending on associated PatFieldDef.FieldType. (Text, PickList, Date, Checkbox, or Currency) Example Request: PUT /patfields { \"PatNum\":101, \"FieldName\": \"Ins Verified\", \"FieldValue\":\"Yes\" } Example Response: 200 OK 400 BadRequest (with explanation)","body":{"mode":"raw","raw":"{ \"PatNum\":101, \"FieldName\": \"Ins Verified\", \"FieldValue\":\"Yes\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/patfields/29","item":null,"description":null,"request":{"method":"DELETE","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/patfields/29","host":["{{url_local}}{{version_api}}"],"path":["/patfields/29"],"query":null},"description":"PatFields DELETE Version Added: 22.4 Deletes a PatField. Will not delete a PatField with an associated PatFieldDef of type CareCreditStatus. PatFieldNum: Required in the URL. Example Request: DELETE /patfields/29 Example Response: 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API PatientNotes","item":[{"name":"/patientnotes/15","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/patientnotes/15","host":["{{url_local}}{{version_api}}"],"path":["/patientnotes/15"],"query":null},"description":"PatientNotes GET Version Added: 21.2 PatientNotes have a 1:1 relationship to Patients and contain additional information about the patient. The PatNum must be included in the URL. Example Request: GET /patientnotes/15 Example Response: { \"Medical\": \"Diabetes.\", \"ICEName\": \"Carolyn Wright\", \"ICEPhone\": \"(820) 202-1134\", \"Service\": \"No flo\" } 200 OK","body":{"mode":"raw","raw":"{ \"Medical\": \"Diabetes.\", \"ICEName\": \"Carolyn Wright\", \"ICEPhone\": \"(820) 202-1134\", \"Service\": \"No flo\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/patientnotes/15","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/patientnotes/15","host":["{{url_local}}{{version_api}}"],"path":["/patientnotes/15"],"query":null},"description":"PatientNotes PUT Version Added: 21.2 Include the PatNum in the URL. All JSON fields are optional. If you want to append a note instead of replace, then use PatientNotes GET, and do your own concatenation before calling PUT. Medical: Replace existing medical history note. ICEName: Replaces existing ICEName. ICEPhone: String. Replaces existing ICEPhone. Service (added in version 21.4): String. Replaces existing service note. Example Requests: PUT /patientnotes/15 { \"Medical\": \"Unknown family history.\" } { \"ICEName\": \"Herbert Grayson\", \"ICEPhone\": \"(134) 721-1321\" } Example Response: { \"Medical\": \"Diabetes.\", \"ICEName\": \"Carolyn Wright\", \"ICEPhone\": \"(820) 202-1134\", \"Service\": \"No flo\" } 200 OK 400 BadRequest (Invalid fields) 404 NotFound \"Patient not found\".","body":{"mode":"raw","raw":"{ \"Medical\": \"Unknown family history.\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API PatientRaces","item":[{"name":"/patientraces?PatNum=73","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/patientraces?PatNum=73","host":["{{url_local}}{{version_api}}"],"path":["/patientraces?PatNum=73"],"query":null},"description":"PatientRaces GET Version Added: 22.3.12 Gets all of the Race and Ethnicity information for a Patient, similarly to how it shows in the Edit Patient Information: Public Health Tab. The dental office must have Public Health enabled to record this information. PatNum: Required. Returned fields are detailed below: PatientRaceNum: Primary key of the patientrace table. PatNum: The PatNum of the patient. CdcrecCode: CDC Race and Ethnicity unique identifier code. descripition: Race or Ethnicity Description corresponding to the CdcrecCode. isEthnicity: True for ethnicity or False for race information. heirarchicalCode: Alphanumeric code that the CDC uses to organize CdcrecCodes. Example Request GET /patientraces?PatNum=73 Example Response: [ { \"PatientRaceNum\": 16, \"PatNum\": 73, \"CdcrecCode\": \"2066-9\", \"descrpition\": \"ZAIREAN\", \"isEthnicity\": \"false\", \"heirarchicalCode\": \"R3.03.006\" }, { \"PatientRaceNum\": 17, \"PatNum\": 73, \"CdcrecCode\": \"2120-4\", \"descrpition\": \"EGYPTIAN\", \"isEthnicity\": \"false\", \"heirarchicalCode\": \"R5.02.002\" }, { \"PatientRaceNum\": 18, \"PatNum\": 73, \"CdcrecCode\": \"2186-5\", \"descrpition\": \"NOT HISPANIC OR LATINO\", \"isEthnicity\": \"true\", \"heirarchicalCode\": \"E2\" } ] 200 OK 400 Bad Request (Patient is deleted, etc) 401 NotFound (Patient not found)","body":{"mode":"raw","raw":"[ { \"PatientRaceNum\": 16, \"PatNum\": 73, \"CdcrecCode\": \"2066-9\", \"descrpition\": \"ZAIREAN\", \"isEthnicity\": \"false\", \"heirarchicalCode\": \"R3.03.006\" }, { \"PatientRaceNum\": 17, \"PatNum\": 73, \"CdcrecCode\": \"2120-4\", \"descrpition\": \"EGYPTIAN\", \"isEthnicity\": \"false\", \"heirarchicalCode\": \"R5.02.002\" }, { \"PatientRaceNum\": 18, \"PatNum\": 73, \"CdcrecCode\": \"2186-5\", \"descrpition\": \"NOT HISPANIC OR LATINO\", \"isEthnicity\": \"true\", \"heirarchicalCode\": \"E2\" } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Patients","item":[{"name":"/patients/48","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/patients/48","host":["{{url_local}}{{version_api}}"],"path":["/patients/48"],"query":null},"description":"Patients GET (single) Version Added: 21.1 A unique patient is identified by a PatNum obtained from a previous search of some sort. Birthdate value can be 0001-01-01, which is equivalent to \"none\". EstBalance is a patient's individual balance. BalTotal is a family's total balance and will return 0 unless the patient is the guarantor. Language is the language used by the patient, typically in ISO 639-2 format, unless custom. Can be \"\" to indicate \"None\". URL Search Parameters: PatNum: In URL only. Example Request: GET /patients/48 Example Response: { \"PatNum\": 48, \"LName\": \"Smith\", \"FName\": \"Jane\", \"MiddleI\": \"\", \"Preferred\": \"\", \"PatStatus\": \"Patient\", \"Gender\": \"Female\", \"Position\": \"Single\", \"Birthdate\": \"1976-05-24\", \"SSN\": \"\", \"Address\": \"125 Satin Heights\", \"Address2\": \"\", \"City\": \"San Jose\", \"State\": \"CA\", \"Zip\": \"97301\", \"HmPhone\": \"(536)624-5871\", \"WkPhone\": \"(536)987-4822\", \"WirelessPhone\": \"(536)987-4822\", \"Guarantor\": 48, \"Email\": \"smithfam@yahoo.com\", \"EstBalance\": 0.0, \"PriProv\": 1, \"priProvAbbr\": \"DOC\", \"SecProv\": 0, \"secProvAbbr\": \"\", \"BillingType\": \"Standard Account\", \"ImageFolder\": \"SmithJane48\", \"FamFinUrgNote\": \"CC on file expiring soon\", \"ChartNumber\": \"\", \"MedicaidID\": \"\", \"BalTotal\": 111.9, \"DateFirstVisit\": \"2021-12-16\", \"ClinicNum\": 0, \"clinicAbbr\": \"\", \"PreferConfirmMethod\": \"None\", \"PreferContactMethod\": \"WirelessPh\", \"PreferRecallMethod\": \"TextMessage\", \"Language\": \"spa\", \"siteDesc\": \"\", \"DateTStamp\": \"2021-12-08 15:34:34\", \"SuperFamily\": 0, \"TxtMsgOk\": \"Unknown\", \"SecDateEntry\":\"2021-12-04\" }","body":{"mode":"raw","raw":"{ \"PatNum\": 48, \"LName\": \"Smith\", \"FName\": \"Jane\", \"MiddleI\": \"\", \"Preferred\": \"\", \"PatStatus\": \"Patient\", \"Gender\": \"Female\", \"Position\": \"Single\", \"Birthdate\": \"1976-05-24\", \"SSN\": \"\", \"Address\": \"125 Satin Heights\", \"Address2\": \"\", \"City\": \"San Jose\", \"State\": \"CA\", \"Zip\": \"97301\", \"HmPhone\": \"(536)624-5871\", \"WkPhone\": \"(536)987-4822\", \"WirelessPhone\": \"(536)987-4822\", \"Guarantor\": 48, \"Email\": \"smithfam@yahoo.com\", \"EstBalance\": 0.0, \"PriProv\": 1, \"priProvAbbr\": \"DOC\", \"SecProv\": 0, \"secProvAbbr\": \"\", \"BillingType\": \"Standard Account\", \"ImageFolder\": \"SmithJane48\", \"FamFinUrgNote\": \"CC on file expiring soon\", \"ChartNumber\": \"\", \"MedicaidID\": \"\", \"BalTotal\": 111.9, \"DateFirstVisit\": \"2021-12-16\", \"ClinicNum\": 0, \"clinicAbbr\": \"\", \"PreferConfirmMethod\": \"None\", \"PreferContactMethod\": \"WirelessPh\", \"PreferRecallMethod\": \"TextMessage\", \"Language\": \"spa\", \"siteDesc\": \"\", \"DateTStamp\": \"2021-12-08 15:34:34\", \"SuperFamily\": 0, \"TxtMsgOk\": \"Unknown\", \"SecDateEntry\":\"2021-12-04\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/patients?Offset=700","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/patients?Offset=700","host":["{{url_local}}{{version_api}}"],"path":["/patients?Offset=700"],"query":null},"description":"Patients GET (multiple) Version Added: 21.1 You can get a list of patients who meet a set of search criteria. Most string parameters support partial match and are not case sensitive. The parameters and results are very similar to the Patient Select window in Open Dental because it uses the same code. The results do not contain every possible patient field, just the ones that you might see in the Patient Select window. You can GET individual patients if you want more information. If you do not yet have a PatNum and are looking for a specific patient by name, you should generally use a combination of LName, FName, and Birthdate to help ensure uniqueness. URL Search Parameters: LName, FName, Phone, Address, hideInactive, City, State, SSN, ChartNumber, guarOnly, showArchived, Birthdate, SiteNum, SubscriberId, Email, Country, clinicNums (comma separated list), clinicAbbr, invoiceNumber. Example Requests: GET /patients?Offset=700 GET /patients?LName=smi GET /patients?LName=smi&FName=j&Birthdate=1976-05-24&hideInactive=true Example Response: [ { \"PatNum\": 16, \"LName\": \"Smith\", \"FName\": \"Jane\", \"MiddleI\": \"\", \"Preferred\": \"\", \"PatStatus\": \"Patient\", \"Birthdate\": \"1976-05-24\", \"SSN\": \"632458956\", \"Address\": \"125 Satin Heights\", \"Address2\": \"\", \"City\": \"San Jose\", \"State\": \"CA\", \"Zip\": 90011, \"HmPhone\": \"(536)624-5871\", \"WkPhone\": \"(536)987-4822\", \"WirelessPhone\": \"\", \"Email\": \"smithfam@yahoo.com\", \"priProvAbbr\": \"DOC1\", \"secProvAbbr\": \"\", \"BillingType\": \"Standard Account\", \"ChartNumber\": \"\", \"ClinicNum\": 0, \"clinicAbbr\": \"\", \"siteDesc\": \"\", \"TxtMsgOk\": \"Unknown\" }, { \"PatNum\": 15, \"LName\": \"Smith\", \"FName\": \"John\", \"MiddleI\": \"\", \"Preferred\": \"\", \"PatStatus\": \"Patient\", \"Birthdate\": \"1979-06-23\", \"SSN\": \"352664588\", \"Address\": \"125 Satin Heights\", \"Address2\": \"\", \"City\": \"San Jose\", \"State\": \"CA\", \"Zip\": 90011, \"HmPhone\": \"(536)624-5871\", \"WkPhone\": \"(536)265-8587\", \"WirelessPhone\": \"(536)987-5621\", \"Email\": \"johns@hotmail.com\", \"priProvAbbr\": \"DOC1\", \"secProvAbbr\": \"\", \"BillingType\": \"Standard Account\", \"ChartNumber\": \"\", \"ClinicNum\": 0, \"clinicAbbr\": \"\", \"siteDesc\": \"\", \"TxtMsgOk\": \"Yes\" }, etc... ] Example Response (No Results): []","body":{"mode":"raw","raw":"[ { \"PatNum\": 16, \"LName\": \"Smith\", \"FName\": \"Jane\", \"MiddleI\": \"\", \"Preferred\": \"\", \"PatStatus\": \"Patient\", \"Birthdate\": \"1976-05-24\", \"SSN\": \"632458956\", \"Address\": \"125 Satin Heights\", \"Address2\": \"\", \"City\": \"San Jose\", \"State\": \"CA\", \"Zip\": 90011, \"HmPhone\": \"(536)624-5871\", \"WkPhone\": \"(536)987-4822\", \"WirelessPhone\": \"\", \"Email\": \"smithfam@yahoo.com\", \"priProvAbbr\": \"DOC1\", \"secProvAbbr\": \"\", \"BillingType\": \"Standard Account\", \"ChartNumber\": \"\", \"ClinicNum\": 0, \"clinicAbbr\": \"\", \"siteDesc\": \"\", \"TxtMsgOk\": \"Unknown\" }, { \"PatNum\": 15, \"LName\": \"Smith\", \"FName\": \"John\", \"MiddleI\": \"\", \"Preferred\": \"\", \"PatStatus\": \"Patient\", \"Birthdate\": \"1979-06-23\", \"SSN\": \"352664588\", \"Address\": \"125 Satin Heights\", \"Address2\": \"\", \"City\": \"San Jose\", \"State\": \"CA\", \"Zip\": 90011, \"HmPhone\": \"(536)624-5871\", \"WkPhone\": \"(536)265-8587\", \"WirelessPhone\": \"(536)987-5621\", \"Email\": \"johns@hotmail.com\", \"priProvAbbr\": \"DOC1\", \"secProvAbbr\": \"\", \"BillingType\": \"Standard Account\", \"ChartNumber\": \"\", \"ClinicNum\": 0, \"clinicAbbr\": \"\", \"siteDesc\": \"\", \"TxtMsgOk\": \"Yes\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/patients/Simple?Offset=700","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/patients/Simple?Offset=700","host":["{{url_local}}{{version_api}}"],"path":["/patients/Simple?Offset=700"],"query":null},"description":"Patients GET Simple Version Added: 21.2 This is used instead of GET (multiple) if you need to pass in DateTStamp to get recent changes, or if you need additional fields that are not included in GET (multiple). LName: Supports partial string matching and is case-insensitive. FName: Supports partial string matching and is case-insensitive. Birthdate: In \"yyyy-mm-dd\" format. ClinicNum: A single ClinicNum. Leave blank if not using clinics or want results for all clinics. PatStatus: Either \"Patient\", \"NonPatient\", \"Inactive\", \"Archived\", \"Deceased\", or \"Prospective\". DateTStamp: In \"yyyy-mm-dd HH:mm:ss\" format. PriProv: (added in version 21.3) A single ProvNum. Leave blank if you want results for all primary providers. Gender: (added in version 22.3.6) Either \"Male\", \"Female\", \"Unknown\", or \"Other\". Position: (added in version 22.3.6) Either \"Single\", \"Married\", \"Child\", \"Widowed\", or \"Divorced\". Guarantor: (added in version 22.4.19) A single PatNum. The person responsible for the account. SuperFamily: (added in version 22.4.38) A single PatNum. The head of a SuperFamily. All parameters are optional. If you do not yet have a PatNum and are looking for a specific patient by name, you should generally use a combination of LName, FName, and Birthdate to help ensure uniqueness. Use the DateTStamp to filter results for patients updated in the database since that date. The serverDateTime is included in the response to use for subsequent requests. EstBalance is a patient's individual balance. BalTotal is a family's total balance and will return 0 unless the patient is the guarantor. Language is the language used by the patient, typically in ISO 639-2 format, unless custom. Can be \"\" to indicate \"None\". Example Requests: GET /patients/Simple?Offset=700 GET /patients/Simple?DateTStamp=2021-07-01%2005%3A30%3A00 GET /patients/Simple?LName=smi&FName=eter&Birthdate=1976-05-24 GET /patients/Simple?PatStatus=Inactive Example Response: [ { \"serverDateTime\": \"2021-08-05 09:05:42\" \"PatNum\": 1, \"LName\": \"Smith\", \"FName\": \"John\", \"MiddleI\": \"\", \"Preferred\": \"\", \"PatStatus\": \"Patient\", \"Gender\": \"Male\", \"Position\": \"Single\", \"Birthdate\": \"1976-05-24\", \"SSN\": \"\", \"Address\": \"123 Elm St\", \"Address2\": \"\", \"City\": \"Salem\", \"State\": \"OR\", \"Zip\": \"97301\", \"HmPhone\": \"\", \"WkPhone\": \"(123)456-7890\", \"WirelessPhone\": \"\", \"Guarantor\": 1, \"Email\": \"name@web.com\", \"EstBalance\": 40.11, \"PriProv\": 1, \"priProvAbbr\": \"DOC1\", \"SecProv\": 0, \"secProvAbbr\": \"\", \"BillingType\": \"Standard Account\", \"ImageFolder\": \"SmithJohn1\", \"FamFinUrgNote\": \"\", \"ChartNumber\": \"\", \"MedicaidID\": \"022419552\", \"BalTotal\": 40.11, \"DateFirstVisit\": \"2021-08-19\", \"ClinicNum\": 1, \"clinicAbbr\": \"Southside\", \"PreferConfirmMethod\": \"None\", \"PreferContactMethod\": \"None\", \"PreferRecallMethod\": \"None\", \"Language\": \"\", \"siteDesc\": \"\", \"DateTStamp\": \"2021-07-26 14:22:55\", \"SuperFamily\": 0, \"TxtMsgOk\": \"Yes\", \"SecDateEntry\":\"2021-01-04\" }, { \"serverDateTime\": \"2021-08-05 09:05:42\" \"PatNum\": 2, \"LName\": \"Johnson\", \"FName\": \"Brody\", \"MiddleI\": \"\", \"Preferred\": \"\", \"PatStatus\": \"Patient\", \"Gender\": \"Male\", \"Position\": \"Single\", \"Birthdate\": \"0001-01-01\", \"SSN\": \"\", \"Address\": \"\", \"Address2\": \"\", \"City\": \"\", \"State\": \"\", \"Zip\": \"\", \"HmPhone\": \"\", \"WkPhone\": \"5035035030\", \"WirelessPhone\": \"\", \"Guarantor\": 2, \"Email\": \"\", \"EstBalance\": 0.0, \"PriProv\": 1, \"priProvAbbr\": \"DOC1\", \"SecProv\": 0, \"secProvAbbr\": \"\", \"BillingType\": \"Standard Account\", \"ImageFolder\": \"JohnsonBrody2\", \"FamFinUrgNote\": \"\", \"ChartNumber\": \"\", \"MedicaidID\": \"052510275\", \"BalTotal\": 0.0, \"DateFirstVisit\": \"2021-08-29\", \"ClinicNum\": 1, \"clinicAbbr\": \"Southside\", \"PreferConfirmMethod\": \"None\", \"PreferContactMethod\": \"None\", \"PreferRecallMethod\": \"None\", \"Language\": \"\", \"siteDesc\": \"\", \"DateTStamp\": \"2021-07-23 14:52:07\", \"SuperFamily\": 0, \"TxtMsgOk\": \"Yes\", \"SecDateEntry\":\"2021-02-04\" }, etc... ] 200 OK 400 BadRequest (Invalid Fields)","body":{"mode":"raw","raw":"[ { \"serverDateTime\": \"2021-08-05 09:05:42\" \"PatNum\": 1, \"LName\": \"Smith\", \"FName\": \"John\", \"MiddleI\": \"\", \"Preferred\": \"\", \"PatStatus\": \"Patient\", \"Gender\": \"Male\", \"Position\": \"Single\", \"Birthdate\": \"1976-05-24\", \"SSN\": \"\", \"Address\": \"123 Elm St\", \"Address2\": \"\", \"City\": \"Salem\", \"State\": \"OR\", \"Zip\": \"97301\", \"HmPhone\": \"\", \"WkPhone\": \"(123)456-7890\", \"WirelessPhone\": \"\", \"Guarantor\": 1, \"Email\": \"name@web.com\", \"EstBalance\": 40.11, \"PriProv\": 1, \"priProvAbbr\": \"DOC1\", \"SecProv\": 0, \"secProvAbbr\": \"\", \"BillingType\": \"Standard Account\", \"ImageFolder\": \"SmithJohn1\", \"FamFinUrgNote\": \"\", \"ChartNumber\": \"\", \"MedicaidID\": \"022419552\", \"BalTotal\": 40.11, \"DateFirstVisit\": \"2021-08-19\", \"ClinicNum\": 1, \"clinicAbbr\": \"Southside\", \"PreferConfirmMethod\": \"None\", \"PreferContactMethod\": \"None\", \"PreferRecallMethod\": \"None\", \"Language\": \"\", \"siteDesc\": \"\", \"DateTStamp\": \"2021-07-26 14:22:55\", \"SuperFamily\": 0, \"TxtMsgOk\": \"Yes\", \"SecDateEntry\":\"2021-01-04\" }, { \"serverDateTime\": \"2021-08-05 09:05:42\" \"PatNum\": 2, \"LName\": \"Johnson\", \"FName\": \"Brody\", \"MiddleI\": \"\", \"Preferred\": \"\", \"PatStatus\": \"Patient\", \"Gender\": \"Male\", \"Position\": \"Single\", \"Birthdate\": \"0001-01-01\", \"SSN\": \"\", \"Address\": \"\", \"Address2\": \"\", \"City\": \"\", \"State\": \"\", \"Zip\": \"\", \"HmPhone\": \"\", \"WkPhone\": \"5035035030\", \"WirelessPhone\": \"\", \"Guarantor\": 2, \"Email\": \"\", \"EstBalance\": 0.0, \"PriProv\": 1, \"priProvAbbr\": \"DOC1\", \"SecProv\": 0, \"secProvAbbr\": \"\", \"BillingType\": \"Standard Account\", \"ImageFolder\": \"JohnsonBrody2\", \"FamFinUrgNote\": \"\", \"ChartNumber\": \"\", \"MedicaidID\": \"052510275\", \"BalTotal\": 0.0, \"DateFirstVisit\": \"2021-08-29\", \"ClinicNum\": 1, \"clinicAbbr\": \"Southside\", \"PreferConfirmMethod\": \"None\", \"PreferContactMethod\": \"None\", \"PreferRecallMethod\": \"None\", \"Language\": \"\", \"siteDesc\": \"\", \"DateTStamp\": \"2021-07-23 14:52:07\", \"SuperFamily\": 0, \"TxtMsgOk\": \"Yes\", \"SecDateEntry\":\"2021-02-04\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/patients","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/patients","host":["{{url_local}}{{version_api}}"],"path":["/patients"],"query":null},"description":"Patients POST (create) Version Added: 21.1 The only required fields are LName and FName. All other fields are optional. New patient information is compared against existing patient information (LName, FName, Birthdate, and Email or phone numbers) to prevent duplicates. Languages are stored in ISO 639-2 format, unless custom, in the preference LanguagesUsedByPatients. Use Preferences GET or a query to find the list of languages. LName: Required. The patient's last name. FName: Required. The patient's first name. MiddleI: The patient's middle initial or name. Preferred: The patient's preferred name. PatStatus: Either \"Patient\", \"NonPatient\", \"Inactive\", \"Archived\", \"Deceased\", or \"Prospective\". Default is Patient. Gender: Either \"Male\", \"Female\", or \"Unknown\". Default is Unknown. Position: Marital status. Either \"Single\", \"Married\", \"Child\", \"Widowed\", or \"Divorced\". Default is Single. Birthdate: String in \"yyyy-mm-dd\" format. SSN: In the USA, 9 digits, no dashes. Any punctuation or format for other countries. Address: The patient's address. Address2: Second address line. City: City State: Two capital character in USA. Province in Canada. Zip: Postal code. Must be in format 12345, 12345-1234, or 123456789 (US) or A0A 0A0 (Canada, added in version 23.2.5). HmPhone: Home phone number including any punctuation. WkPhone: Work phone number including any punctuation. WirelessPhone: Wireless phone number including any punctuation. Guarantor: Head of household's PatNum. Only this or SuperFamily in a single request. Default is patient's PatNum. Email: The patient's email address. PriProv: ProvNum of primary provider. SecProv: ProvNum of secondary provider. BillingType: Must be a definition.ItemName where definition.Category=4. FamFinUrgNote: (Added in version 23.2.5.0) Family financial urgent note. Only allowed to be set if this patient is a guarantor. Default empty string. ChartNumber: Maximum of 15 character string. Usually set during conversion or when bridging to imaging software. DateFirstVisit: (Added in version 22.4.42) String in \"yyyy-mm-dd\" format. ClinicNum: Can be zero if not attached to a clinic or clinics are not set up. PreferConfirmMethod: Either \"None\", \"DoNotCall\", \"HmPhone\", \"WkPhone\", \"WirelessPh\", \"Email\", \"SeeNotes\", \"Mail\", or \"TextMessage\". Default is None. PreferContactMethod: Either \"None\", \"DoNotCall\", \"HmPhone\", \"WkPhone\", \"WirelessPh\", \"Email\", \"SeeNotes\", \"Mail\", or \"TextMessage\". Default is None. PreferRecallMethod: (Added in version 22.2) Either \"None\", \"DoNotCall\", \"HmPhone\", \"WkPhone\", \"WirelessPh\", \"Email\", \"SeeNotes\", \"Mail\", or \"TextMessage\". Default is None. Language: The language used by the patient. Typically eng=English, spa=Spanish, etc. Default is blank which indicates \"None\". SuperFamily: (Added in version 22.4.38) Head of SuperFamily's PatNum. Default is 0. Only this or Guarantor in a single request. Creates a new SuperFamily if one does not exist. Does not honor any Super Family preferences. TxtMsgOk: Either \"Unknown\", \"Yes\", or \"No\". Default is Unknown. Example Request: POST /patients { \"LName\": \"Smith\", \"FName\": \"Jane\", \"Gender\": \"Female\", \"Position\": \"Single\", \"Birthdate\": \"1976-05-24\", \"Address\": \"125 Satin Heights\", \"City\": \"San Jose\", \"State\": \"CA\", \"Zip\": \"97301\", \"HmPhone\": \"(536)624-5871\", \"WkPhone\": \"(536)987-4822\", \"WirelessPhone\": \"\", \"Email\": \"smithfam@yahoo.com\", \"PreferConfirmMethod\": \"HmPhone\", \"Language\": \"spa\", \"TxtMsgOk\": \"Yes\" } Example Response: { \"PatNum\": 48, \"LName\": \"Smith\", \"FName\": \"Jane\", \"MiddleI\": \"\", \"Preferred\": \"\", \"PatStatus\": \"Patient\", \"Gender\": \"Female\", \"Position\": \"Single\", \"Birthdate\": \"1976-05-24\", \"SSN\": \"\", \"Address\": \"125 Satin Heights\", \"Address2\": \"\", \"City\": \"San Jose\", \"State\": \"CA\", \"Zip\": \"97301\", \"HmPhone\": \"(536)624-5871\", \"WkPhone\": \"(536)987-4822\", \"WirelessPhone\": \"\", \"Guarantor\": 48, \"Email\": \"smithfam@yahoo.com\", \"EstBalance\": 0.0, \"PriProv\": 1, \"priProvAbbr\": \"DOC\", \"SecProv\": 0, \"secProvAbbr\": \"\", \"BillingType\": \"Standard Account\", \"FamFinUrgNote\": \"CC on file expiring soon\", \"ImageFolder\": \"SmithJane48\", \"ChartNumber\": \"\", \"MedicaidID\": \"\", \"BalTotal\": 0.0, \"DateFirstVisit\": \"0001-01-01\", \"ClinicNum\": 0, \"clinicAbbr\": \"\", \"PreferConfirmMethod\": \"HmPhone\", \"PreferContactMethod\": \"None\", \"PreferRecallMethod\": \"None\", \"Language\": \"spa\", \"siteDesc\": \"\", \"DateTStamp\": \"2021-10-20 09:05:48\", \"SuperFamily\": 0, \"TxtMsgOk\": \"Unknown\", \"SecDateEntry\":\"2020-12-04\" } Header \"location\": https://api.opendental.com/api/v1/patients/48 201 Created 400 Bad Request (with explanation) 404 Not Found (with explanation)","body":{"mode":"raw","raw":"{ \"LName\": \"Smith\", \"FName\": \"Jane\", \"Gender\": \"Female\", \"Position\": \"Single\", \"Birthdate\": \"1976-05-24\", \"Address\": \"125 Satin Heights\", \"City\": \"San Jose\", \"State\": \"CA\", \"Zip\": \"97301\", \"HmPhone\": \"(536)624-5871\", \"WkPhone\": \"(536)987-4822\", \"WirelessPhone\": \"\", \"Email\": \"smithfam@yahoo.com\", \"PreferConfirmMethod\": \"HmPhone\", \"Language\": \"spa\", \"TxtMsgOk\": \"Yes\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/patients/48","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/patients/48","host":["{{url_local}}{{version_api}}"],"path":["/patients/48"],"query":null},"description":"Patients PUT (update) Version Added: 21.2 All fields are optional, and it is common to only set one or two fields. If an empty string is sent for a string fields, then it will clear that field from the database, except for LName and FName. Languages are stored in ISO 639-2 format, unless custom, in the preference LanguagesUsedByPatients. Use Preferences GET or a query to find the list of languages. PatNum: Required in the URL. LName: The patient's last name. FName: The patient's first name. MiddleI: The patient's middle initial or name. Preferred: The patient's preferred name. PatStatus: Either \"Patient\", \"NonPatient\", \"Inactive\", \"Archived\", \"Deceased\", or \"Prospective\". Default is Patient. Gender: Either \"Male\", \"Female\", or \"Unknown\". Default is Unknown. Position: Marital status. Either \"Single\", \"Married\", \"Child\", \"Widowed\", or \"Divorced\". Default is Single. Birthdate: String in \"yyyy-mm-dd\" format. SSN: In the USA, 9 digits, no dashes. Any punctuation or format for other countries. Address: The patient's address. Address2: Second address line. City: City State: Two capital character in USA. Province in Canada. Zip: Postal code. Must be in format 12345, 12345-1234, or 123456789 (US) or A0A 0A0 (Canada, added in version 23.2.5). HmPhone: Home phone number including any punctuation. WkPhone: Work phone number including any punctuation. WirelessPhone: Wireless phone number including any punctuation. Guarantor: Head of household's PatNum. Only this or SuperFamily in a single request. Guarantor field cannot be updated to a different family member, unless the family's current guarantor is the patient being updated. Email: The patient's email address. PriProv: ProvNum of primary provider. SecProv: ProvNum of secondary provider. BillingType: Must be a definition.ItemName where definition.Category=4. FamFinUrgNote: (Added in version 23.2.5.0) Family financial urgent note. Only allowed to be set if this patient is a guarantor. ChartNumber: Maximum of 15 character string. Usually set during conversion or when bridging to imaging software. DateFirstVisit: (Added in version 22.4.42) String in \"yyyy-mm-dd\" format. ClinicNum: Can be zero if not attached to a clinic or clinics are not set up. PreferConfirmMethod: Either \"None\", \"DoNotCall\", \"HmPhone\", \"WkPhone\", \"WirelessPh\", \"Email\", \"SeeNotes\", \"Mail\", or \"TextMessage\". Default is None. PreferContactMethod: Either \"None\", \"DoNotCall\", \"HmPhone\", \"WkPhone\", \"WirelessPh\", \"Email\", \"SeeNotes\", \"Mail\", or \"TextMessage\". Default is None. PreferRecallMethod: (Added in version 22.2) Either \"None\", \"DoNotCall\", \"HmPhone\", \"WkPhone\", \"WirelessPh\", \"Email\", \"SeeNotes\", \"Mail\", or \"TextMessage\". Default is None. Language: The language used by the patient. Typically eng=English, spa=Spanish, etc. SuperFamily: (Added in version 22.4.38) Head of SuperFamily's PatNum. Only this or Guarantor in a single request. Creates a new SuperFamily if one does not exist. Set to 0 to remove this patient's family from current super family. If patient is in the SuperFamily head's family, 0 will disband the entire super family. Does not honor any Super Family preferences. TxtMsgOk: Either \"Unknown\", \"Yes\", or \"No\". Default is Unknown. Example Request: PUT /patients/48 { \"LName\": \"Smith\", \"FName\": \"Jane\", \"Preferred\": \"\", \"PatStatus\": \"Patient\", \"Gender\": \"Female\", \"Position\": \"Single\", \"Birthdate\": \"1976-05-24\", \"SSN\": \"\", \"Address\": \"125 Satin Heights\", \"City\": \"San Jose\", \"State\": \"CA\", \"Zip\": \"97301\", \"HmPhone\": \"(536)624-5871\", \"WkPhone\": \"(536)987-4822\", \"WirelessPhone\": \"(536)987-4822\", \"Guarantor\": 48, \"Email\": \"smithfam@yahoo.com\", \"PreferContactMethod\": \"WirelessPh\", \"BillingType\": \"Standard Account\", \"DateFirstVisit\": \"2023-04-25\", \"ClinicNum\": 0 } Example Response: { \"PatNum\": 48, \"LName\": \"Smith\", \"FName\": \"Jane\", \"MiddleI\": \"\", \"Preferred\": \"\", \"PatStatus\": \"Patient\", \"Gender\": \"Female\", \"Position\": \"Single\", \"Birthdate\": \"1976-05-24\", \"SSN\": \"\", \"Address\": \"125 Satin Heights\", \"Address2\": \"\", \"City\": \"San Jose\", \"State\": \"CA\", \"Zip\": \"97301\", \"HmPhone\": \"(536)624-5871\", \"WkPhone\": \"(536)987-4822\", \"WirelessPhone\": \"(536)987-4822\", \"Guarantor\": 48, \"Email\": \"smithfam@yahoo.com\", \"EstBalance\": 0.0, \"PriProv\": 1, \"priProvAbbr\": \"DOC\", \"SecProv\": 0, \"secProvAbbr\": \"\", \"BillingType\": \"Standard Account\", \"ImageFolder\": \"SmithJane48\", \"FamFinUrgNote\": \"CC on file expiring soon\", \"ChartNumber\": \"\", \"MedicaidID\": \"\", \"BalTotal\": 111.9, \"DateFirstVisit\": \"2023-04-25\", \"ClinicNum\": 0, \"clinicAbbr\": \"\", \"PreferConfirmMethod\": \"None\", \"PreferContactMethod\": \"WirelessPh\", \"PreferRecallMethod\": \"TextMessage\", \"Language\": \"spa\", \"siteDesc\": \"\", \"DateTStamp\": \"2021-12-08 15:34:34\", \"SuperFamily\": 0, \"TxtMsgOk\": \"Unknown\", \"SecDateEntry\":\"2021-12-04\" } 200 OK 400 Bad Request (with explanation) 404 Not Found (with explanation)","body":{"mode":"raw","raw":"{ \"LName\": \"Smith\", \"FName\": \"Jane\", \"Preferred\": \"\", \"PatStatus\": \"Patient\", \"Gender\": \"Female\", \"Position\": \"Single\", \"Birthdate\": \"1976-05-24\", \"SSN\": \"\", \"Address\": \"125 Satin Heights\", \"City\": \"San Jose\", \"State\": \"CA\", \"Zip\": \"97301\", \"HmPhone\": \"(536)624-5871\", \"WkPhone\": \"(536)987-4822\", \"WirelessPhone\": \"(536)987-4822\", \"Guarantor\": 48, \"Email\": \"smithfam@yahoo.com\", \"PreferContactMethod\": \"WirelessPh\", \"BillingType\": \"Standard Account\", \"DateFirstVisit\": \"2023-04-25\", \"ClinicNum\": 0 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API PatPlans","item":[{"name":"/patplans?PatNum=1897&amp;InsSubNum=697","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/patplans?PatNum=1897&amp;InsSubNum=697","host":["{{url_local}}{{version_api}}"],"path":["/patplans?PatNum=1897&amp;InsSubNum=697"],"query":null},"description":"PatPlans GET Version Added: 22.4.27 Gets a list of PatPlans that meet a set of search criteria. Parameters: All optional. PatNum: FK to patient.PatNum. InsSubNum: FK to inssub.InsSubNum Example Request GET /patplans?PatNum=1897&InsSubNum=697 GET /patplans?PatNum=1897 Example Response: [ { \"PatPlanNum\": 1228, \"PatNum\": 1897, \"Ordinal\": 1, \"IsPending\": \"false\", \"Relationship\": \"Self\", \"PatID\": \"\", \"InsSubNum\": 369, \"OrthoAutoFeeBilledOverride\": -1.0, \"OrthoAutoNextClaimDate\": \"0001-01-01\", \"SecDateTEntry\": \"2021-01-26 14:54:04\", \"SecDateTEdit\": \"2021-02-16 13:42:33\" }, { \"PatPlanNum\": 1232, \"PatNum\": 1897, \"Ordinal\": 2, \"IsPending\": \"false\", \"Relationship\": \"SignifOther\", \"PatID\": \"\", \"InsSubNum\": 393, \"OrthoAutoFeeBilledOverride\": -1.0, \"OrthoAutoNextClaimDate\": \"0001-01-01\", \"SecDateTEntry\": \"2021-02-15 15:47:07\", \"SecDateTEdit\": \"2021-02-16 13:42:33\" }, etc... ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"PatPlanNum\": 1228, \"PatNum\": 1897, \"Ordinal\": 1, \"IsPending\": \"false\", \"Relationship\": \"Self\", \"PatID\": \"\", \"InsSubNum\": 369, \"OrthoAutoFeeBilledOverride\": -1.0, \"OrthoAutoNextClaimDate\": \"0001-01-01\", \"SecDateTEntry\": \"2021-01-26 14:54:04\", \"SecDateTEdit\": \"2021-02-16 13:42:33\" }, { \"PatPlanNum\": 1232, \"PatNum\": 1897, \"Ordinal\": 2, \"IsPending\": \"false\", \"Relationship\": \"SignifOther\", \"PatID\": \"\", \"InsSubNum\": 393, \"OrthoAutoFeeBilledOverride\": -1.0, \"OrthoAutoNextClaimDate\": \"0001-01-01\", \"SecDateTEntry\": \"2021-02-15 15:47:07\", \"SecDateTEdit\": \"2021-02-16 13:42:33\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/patplans","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/patplans","host":["{{url_local}}{{version_api}}"],"path":["/patplans"],"query":null},"description":"PatPlans POST (create) Version Added: 21.1 This adds a PatPlan row to the database. PatNum: Required. InsSubNum: Required. This requires that a valid InsSub is already in place. You can obtain the InsSubNum from FamilyModules GET Insurance, or you can obtain it from an InsSubs POST. If this plan is already linked to this InsSub, then response will be BadRequest. Ordinal: Optional with a default of 1. This is a single digit numeric field (example: 1, 2, 3...). It represents the primary insurance, secondary insurance, etc. 0 is not used. If Ordinal is set to1, and there is already primary insurance, the other insurance will get bumped to Ordinal 2. Relationship: Optional. Default is Self. Values can be \"Self\", \"Spouse\", \"Child\", \"Employee\", \"HandicapDep\", \"SignifOther\", \"InjuredPlantiff\", \"LifePartner\" or \"Dependent\". PatID: Added in 21.4. Optional. A patient ID which will override the subscriber ID on eclaims. Also used for Canada. Example Request: POST /patplans { \"PatNum\": 15, \"Ordinal\": 1, \"Relationship\": \"Self\", \"InsSubNum\": 101 } Example Response: { \"PatPlanNum\": 62, \"PatNum\": 15, \"Ordinal\": 1, \"IsPending\": \"false\", \"Relationship\": \"Self, \"PatID\": \"\", \"InsSubNum\": 101, \"OrthoAutoFeeBilledOverride\": -1.0, \"OrthoAutoNextClaimDate\": \"0001-01-01\", \"SecDateTEntry\": \"2021-02-15 15:47:07\", \"SecDateTEdit\": \"2021-02-16 13:42:33\" } 201 Created 400 (Missing or invalid fields) 404 NotFound \"Patient does not exist\"","body":{"mode":"raw","raw":"{ \"PatNum\": 15, \"Ordinal\": 1, \"Relationship\": \"Self\", \"InsSubNum\": 101 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/patplans/12","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/patplans/12","host":["{{url_local}}{{version_api}}"],"path":["/patplans/12"],"query":null},"description":"PatPlans PUT (update) Version Added: 21.4 This updates an existing PatPlan row in the database. PatNum cannot be updated. Instead, drop the PatPlan and then recreate it. PatPlanNum: Required in URL. InsSubNum: This corresponds to the Change button in the Subscriber Information section of the Insurance Plan window. Ordinal: This is a single digit numeric field (example: 1, 2, 3...). It represents the primary insurance, secondary insurance, etc. 0 is not used. If Ordinal is set to1, and there is already primary insurance, the other insurance will get bumped to Ordinal 2. Relationship: Values can be \"Self\", \"Spouse\", \"Child\", \"Employee\", \"HandicapDep\", \"SignifOther\", \"InjuredPlantiff\", \"LifePartner\" or \"Dependent\". PatID: A patient ID which will override the subscriber ID on eclaims. Also used for Canada. Example Request: PUT /patplans/12 { \"Ordinal\": 1, \"Relationship\": \"Self\", \"PatID\": \"\" } Example Response: { \"PatPlanNum\": 12, \"PatNum\": 1245, \"Ordinal\": 1, \"IsPending\": \"false\", \"Relationship\": \"Self, \"PatID\": \"\", \"InsSubNum\": 101, \"OrthoAutoFeeBilledOverride\": -1.0, \"OrthoAutoNextClaimDate\": \"0001-01-01\", \"SecDateTEntry\": \"2021-02-15 15:47:07\", \"SecDateTEdit\": \"2021-02-16 13:42:33\" } 200 OK 400 (Missing or invalid fields) 404 \"InsSub does not exist\"","body":{"mode":"raw","raw":"{ \"Ordinal\": 1, \"Relationship\": \"Self\", \"PatID\": \"\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/patplans/251","item":null,"description":null,"request":{"method":"DELETE","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/patplans/251","host":["{{url_local}}{{version_api}}"],"path":["/patplans/251"],"query":null},"description":"PatPlans DELETE Version Added: 21.1 This is called \"Drop\" in the Open Dental UI. This removes a PatPlan row from the database, indicating no coverage, but does not affect the InsPlan itself. PatPlanNum: Required in URL. Example Request: DELETE /patplans/251 Example Response: 200 OK","body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Payments","item":[{"name":"/payments?PatNum=1337","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/payments?PatNum=1337","host":["{{url_local}}{{version_api}}"],"path":["/payments?PatNum=1337"],"query":null},"description":"Payments GET Version Added: 22.2.32 Get a list of payments for a patient. Parameters: All optional. PayType: (Added in version 23.3.11) definition.DefNum where definition.Category=10. PatNum: (Optional after version 23.3.11) FK to patient.PatNum. DateEntry: String in \"yyyy-MM-dd\" format. Gets all payments made on or after a certain date. Example Requests: GET /payments?PatNum=1337 GET /payments?PatNum=1337&DateEntry=2022-06-24 Example Response: [ { \"PayNum\": 56734, \"PayType\": 69, \"payType\": \"Check\", \"PayDate\": \"2022-06-24\", \"PayAmt\": \"339\", \"CheckNum\": \"12798\", \"BankBranch\": \"20-6\", \"PayNote\": \"\", \"PatNum\": 1337, \"ClinicNum\": \"0\", \"DateEntry\": \"2022-06-24\", \"DepositNum\": 0, \"Receipt\": \"\", \"IsRecurringCC\": \"true\", \"PaymentSource\": \"None\", \"ProcessStatus\": \"OfficeProcessed\", \"RecurringChargeDate\": \"0001-01-01\", \"IsCcCompleted\": \"false\", \"serverDateTime\": \"2022-08-26 11:55:44\" }, { \"PayNum\": 56952, \"PayType\": 69, \"payType\": \"Check\", \"PayDate\": \"2022-07-24\", \"PayAmt\": \"239\", \"CheckNum\": \"12816\", \"BankBranch\": \"20-6\", \"PayNote\": \"\", \"PatNum\": 1337, \"ClinicNum\": \"0\", \"DateEntry\": \"2022-07-24\", \"DepositNum\": 0, \"Receipt\": \"\", \"IsRecurringCC\": \"true\", \"PaymentSource\": \"None\", \"ProcessStatus\": \"OfficeProcessed\", \"RecurringChargeDate\": \"0001-01-01\", \"IsCcCompleted\": \"false\", \"serverDateTime\": \"2022-08-26 11:55:44\" } ] 200 OK 400 BadRequest (Missing or invalid fields) 404 NotFound (Patient not found)","body":{"mode":"raw","raw":"[ { \"PayNum\": 56734, \"PayType\": 69, \"payType\": \"Check\", \"PayDate\": \"2022-06-24\", \"PayAmt\": \"339\", \"CheckNum\": \"12798\", \"BankBranch\": \"20-6\", \"PayNote\": \"\", \"PatNum\": 1337, \"ClinicNum\": \"0\", \"DateEntry\": \"2022-06-24\", \"DepositNum\": 0, \"Receipt\": \"\", \"IsRecurringCC\": \"true\", \"PaymentSource\": \"None\", \"ProcessStatus\": \"OfficeProcessed\", \"RecurringChargeDate\": \"0001-01-01\", \"IsCcCompleted\": \"false\", \"serverDateTime\": \"2022-08-26 11:55:44\" }, { \"PayNum\": 56952, \"PayType\": 69, \"payType\": \"Check\", \"PayDate\": \"2022-07-24\", \"PayAmt\": \"239\", \"CheckNum\": \"12816\", \"BankBranch\": \"20-6\", \"PayNote\": \"\", \"PatNum\": 1337, \"ClinicNum\": \"0\", \"DateEntry\": \"2022-07-24\", \"DepositNum\": 0, \"Receipt\": \"\", \"IsRecurringCC\": \"true\", \"PaymentSource\": \"None\", \"ProcessStatus\": \"OfficeProcessed\", \"RecurringChargeDate\": \"0001-01-01\", \"IsCcCompleted\": \"false\", \"serverDateTime\": \"2022-08-26 11:55:44\" } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/payments","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/payments","host":["{{url_local}}{{version_api}}"],"path":["/payments"],"query":null},"description":"Payments POST (create) Version Added: 21.2 Creates a payment for a patient. Does not support insurance payments or income transfers. Payments apply to outstanding charges in a FIFO order. Overpayments are inserted as unearned income. Payments will be applied to the patient's payment plan, if one is eligible. The oldest plan will be chosen if there is more than one eligible plan. By marking the payment as a prepayment and supplying a payPlanNum, patients are able to prepay on a specific Dynamic Payment Plan for its future charges. If needed, the user can later detach the payment from the plan within the Edit Payment Plan window by editing the split and unchecking \"Attach to Payment Plan\". They can also attach to a different plan in the same manner. This method also creates appropriate paysplits according to the payment allocation preferences from Setup > Allocations within Open Dental. PayAmt: Required. PatNum: Required. PayType: (Added in version 23.1.27) Optional. definition.DefNum where definition.Category=10. Defaults to the ApiPaymentType preference. PayDate: Optional. String in \"yyyy-MM-dd\" format. Defaults to today's date. Follows the office's preference to allow future-dated payments. CheckNum: Optional. PayNote: Optional. BankBranch: Optional. ClinicNum: Optional. Defaults to patient.ClinicNum isPatientPreferred: Optional. When entering a payment through Open Dental directly, there is a checkbox for this option. This API field allows the same functionality. It causes the splits to go to the patient instead of being split among family members on a FIFO basis. Default \"false\". isPrepayment: (Added in version 22.4.8) Optional. Creates a single paysplit using the default unearned type for unallocated paysplits stored in the PrepaymentUnearnedType preference. See also Unearned / Prepayment. Default \"false\". procNums: (Added in version 22.4.16) Optional. An array of ProcNums, in [1,2,3] format to apply this Payment to. Procedures are paid by Procedure.ProcDate on a FIFO basis. Procedures not in the Patient's family will be silently ignored. Ignored if isPrepayment is set to \"true\". Default is an empty array. payPlanNum: (Added in version 23.1.31) Optional. FK to payplan.PayPlanNum for a Dynamic Payment Plan. Only allowed if isPrepayment is \"true\" prior to version 23.3.4. Default 0. Example Requests: POST /payments { \"PayAmt\": \"129.99\", \"PatNum\": 1568 } { \"PayAmt\": \"129.99\", \"PatNum\": 1568, \"PayDate\": \"2021-07-05\", \"CheckNum\": \"2058\", \"PayNote\": \"Check payment through website\", \"BankBranch\": \"19-7076\", \"ClinicNum\": \"3\", \"isPatientPreferred\": \"true\", \"isPrepayment\": \"true\", \"procNums\": [13,14,18] } { \"PayAmt\": \"129.99\", \"PatNum\": 1568, \"isPrepayment\": \"true\", \"payPlanNum\": 12 } Example Response: { \"PayNum\": 56734, \"PayType\": 383, \"payType\": \"Check\", \"PayDate\": \"2021-07-05\", \"PayAmt\": \"129.99\", \"CheckNum\": \"2058\", \"BankBranch\": \"19-7076\", \"PayNote\": \"Check payment through website\", \"PatNum\": 1568, \"ClinicNum\": \"3\", \"DateEntry\": \"2022-06-24\", \"DepositNum\": 0, \"Receipt\": \"\", \"IsRecurringCC\": \"true\", \"PaymentSource\": \"None\", \"ProcessStatus\": \"OfficeProcessed\", \"RecurringChargeDate\": \"0001-01-01\", \"IsCcCompleted\": \"false\", \"serverDateTime\": \"2022-08-26 11:55:44\" } 201 Created 400 BadRequest (Missing or invalid fields) 404 NotFound (Patient not found)","body":{"mode":"raw","raw":"{ \"PayAmt\": \"129.99\", \"PatNum\": 1568 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/payments/56734","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/payments/56734","host":["{{url_local}}{{version_api}}"],"path":["/payments/56734"],"query":null},"description":"Payments PUT (update) Version Added: 23.3.11 Updates a payment. PayNum: Required in the URL. PayType: definition.DefNum where definition.Category=10. CheckNum: Check number. Overwrites existing value. BankBranch: Bank-branch code for checks. Overwrites existing value. PayNote: Note on payment. Overwrites existing value. Example Request: PUT /payments/56734 { \"PayType\": 449, \"CheckNum\": \"7492\", \"BankBranch\": \"98-795\", \"PayNote\": \"12 months - 10% discount.\" } Example Response: { \"PayNum\": 56734, \"PayType\": 449, \"payType\": \"API Payment Processed\", \"PayDate\": \"2022-06-24\", \"PayAmt\": \"339\", \"CheckNum\": \"7492\", \"BankBranch\": \"98-795\", \"PayNote\": \"12 months - 10% discount.\", \"PatNum\": 1337, \"ClinicNum\": \"0\", \"DateEntry\": \"2022-06-24\", \"DepositNum\": 0, \"Receipt\": \"\", \"IsRecurringCC\": \"true\", \"PaymentSource\": \"None\", \"ProcessStatus\": \"OfficeProcessed\", \"RecurringChargeDate\": \"0001-01-01\", \"IsCcCompleted\": \"false\", \"serverDateTime\": \"2022-08-26 11:55:44\" } 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PayType\": 449, \"CheckNum\": \"7492\", \"BankBranch\": \"98-795\", \"PayNote\": \"12 months - 10% discount.\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API PayPlanCharges","item":[{"name":"/payplancharges?PayPlanNum=23","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/payplancharges?PayPlanNum=23","host":["{{url_local}}{{version_api}}"],"path":["/payplancharges?PayPlanNum=23"],"query":null},"description":"PayPlanCharges GET Version Added: In dev for 23.3.1 Gets all payplancharges for a specified payment plan. PayPlanNum: Required. Example Request: GET /payplancharges?PayPlanNum=23 Example Response: [ { \"PayPlanChargeNum\": 42, \"PayPlanNum\": 23, \"Guarantor\": 30, \"PatNum\": 30, \"ChargeDate\": \"2023-09-20\", \"Principal\": 25.0, \"Interest\": 0.0, \"Note\": \"Down Payment\", \"ProvNum\": 2, \"ClinicNum\": 0, \"ChargeType\": \"Debit\", \"ProcNum\": 0, \"SecDateTEntry\": \"2023-09-20 09:24:16\", \"SecDateTEdit\": \"2023-09-20 09:24:16\", \"StatementNum\": 0, \"FKey\": 134, \"LinkType\": \"Procedure\", \"IsOffset\": \"false\" }, { \"PayPlanChargeNum\": 43, \"PayPlanNum\": 23, \"Guarantor\": 30, \"PatNum\": 30, \"ChargeDate\": \"2023-10-20\", \"Principal\": 40.96, \"Interest\": 0.12, \"Note\": \"\", \"ProvNum\": 2, \"ClinicNum\": 0, \"ChargeType\": \"Debit\", \"ProcNum\": 0, \"SecDateTEntry\": \"2023-10-20 08:58:27\", \"SecDateTEdit\": \"2023-10-20 08:58:27\", \"StatementNum\": 0, \"FKey\": 134, \"LinkType\": \"Procedure\", \"IsOffset\": \"false\" }, { \"PayPlanChargeNum\": 44, \"PayPlanNum\": 23, \"Guarantor\": 30, \"PatNum\": 30, \"ChargeDate\": \"2023-10-23\", \"Principal\": 8.04, \"Interest\": 0.0, \"Note\": \"Close Out Charge\", \"ProvNum\": 2, \"ClinicNum\": 0, \"ChargeType\": \"Debit\", \"ProcNum\": 0, \"SecDateTEntry\": \"2023-10-23 15:38:30\", \"SecDateTEdit\": \"2023-10-23 15:38:30\", \"StatementNum\": 0, \"FKey\": 134, \"LinkType\": \"Procedure\", \"IsOffset\": \"false\" } ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"PayPlanChargeNum\": 42, \"PayPlanNum\": 23, \"Guarantor\": 30, \"PatNum\": 30, \"ChargeDate\": \"2023-09-20\", \"Principal\": 25.0, \"Interest\": 0.0, \"Note\": \"Down Payment\", \"ProvNum\": 2, \"ClinicNum\": 0, \"ChargeType\": \"Debit\", \"ProcNum\": 0, \"SecDateTEntry\": \"2023-09-20 09:24:16\", \"SecDateTEdit\": \"2023-09-20 09:24:16\", \"StatementNum\": 0, \"FKey\": 134, \"LinkType\": \"Procedure\", \"IsOffset\": \"false\" }, { \"PayPlanChargeNum\": 43, \"PayPlanNum\": 23, \"Guarantor\": 30, \"PatNum\": 30, \"ChargeDate\": \"2023-10-20\", \"Principal\": 40.96, \"Interest\": 0.12, \"Note\": \"\", \"ProvNum\": 2, \"ClinicNum\": 0, \"ChargeType\": \"Debit\", \"ProcNum\": 0, \"SecDateTEntry\": \"2023-10-20 08:58:27\", \"SecDateTEdit\": \"2023-10-20 08:58:27\", \"StatementNum\": 0, \"FKey\": 134, \"LinkType\": \"Procedure\", \"IsOffset\": \"false\" }, { \"PayPlanChargeNum\": 44, \"PayPlanNum\": 23, \"Guarantor\": 30, \"PatNum\": 30, \"ChargeDate\": \"2023-10-23\", \"Principal\": 8.04, \"Interest\": 0.0, \"Note\": \"Close Out Charge\", \"ProvNum\": 2, \"ClinicNum\": 0, \"ChargeType\": \"Debit\", \"ProcNum\": 0, \"SecDateTEntry\": \"2023-10-23 15:38:30\", \"SecDateTEdit\": \"2023-10-23 15:38:30\", \"StatementNum\": 0, \"FKey\": 134, \"LinkType\": \"Procedure\", \"IsOffset\": \"false\" } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API PayPlans","item":[{"name":"/payplans?PatNum=72","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/payplans?PatNum=72","host":["{{url_local}}{{version_api}}"],"path":["/payplans?PatNum=72"],"query":null},"description":"PayPlans GET (multiple) Version Added: 22.2.16 Gets a list of payment plans (Patient, Insurance, and Dynamic) that are assigned to the patient. An Insurance payment plan has a PlanNum and InsSubNum value greater then zero, a Dynamic payment plan has IsDynamic as true, otherwise it is a Patient payment plan. DatePayPlanStart and CompletedAmt are only used for Dynamic payment plans. PatNum: This or Guarantor is required in the URL. Guarantor: This or PatNum is required in the URL. Example Requests: GET /payplans?PatNum=72 GET /payplans?Guarantor=72 Example Response: [ { \"PayPlanNum\": 150, \"PatNum\": 72, \"Guarantor\": 72, \"PayPlanDate\": \"2020-04-15\", \"APR\": 0, \"Note\": \"04/15/2020 - Date of Agreement: 04/15/2020, Total Amount: 64.00, APR: 0, Total Cost of Loan: 64.00\", \"PlanNum\": 0, \"CompletedAmt\": 0, \"InsSubNum\": 0, \"PaySchedule\": \"Monthly\", \"NumberOfPayments\": 10, \"PayAmt\": 0, \"DownPayment\": 0, \"IsClosed\": \"true\", \"PlanCategory\": 0, \"planCategory\": \"\", \"IsDynamic\": \"false\", \"ChargeFrequency\": \"Weekly\", \"DatePayPlanStart\": \"2001-01-01\", \"IsLocked\": \"false\", \"DateInterestStart\": \"2001-01-01\", \"DynamicPayPlanTPOption\": \"None\", \"principalAmount\": 64 }, { \"PayPlanNum\": 167, \"PatNum\": 72, \"Guarantor\": 72, \"PayPlanDate\": \"2021-01-23\", \"APR\": 10, \"Note\": \"01/23/2021 - Date of Agreement: 01/23/2021, Total Amount: 1000.00, APR: 10, Total Cost of Loan: 1029.44\", \"PlanNum\": 3, \"CompletedAmt\": 0, \"InsSubNum\": 13, \"PaySchedule\": \"Monthly\", \"NumberOfPayments\": 10, \"PayAmt\": 0, \"DownPayment\": 0, \"IsClosed\": \"true\", \"PlanCategory\": 447, \"planCategory\": \"Implant\", \"IsDynamic\": \"false\", \"ChargeFrequency\": \"Weekly\", \"DatePayPlanStart\": \"2001-01-01\", \"IsLocked\": \"false\", \"DateInterestStart\": \"2021-02-23\", \"DynamicPayPlanTPOption\": \"None\", \"principalAmount\": 1000 }, { \"PayPlanNum\": 169, \"PatNum\": 72, \"Guarantor\": 72, \"PayPlanDate\": \"2022-06-24\", \"APR\": 0, \"Note\": \"06/24/2022 - Date of Agreement: 06/24/2022, Total Amount: 643.00, APR: 0, Total Cost of Loan: 643.00\", \"PlanNum\": 0, \"CompletedAmt\": 643, \"InsSubNum\": 0, \"PaySchedule\": \"Monthly\", \"NumberOfPayments\": 0, \"PayAmt\": 128.6, \"DownPayment\": 0, \"IsClosed\": \"false\", \"PlanCategory\": 446, \"planCategory\": \"Ortho\", \"IsDynamic\": \"true\", \"ChargeFrequency\": \"Monthly\", \"DatePayPlanStart\": \"2022-07-24\", \"IsLocked\": \"false\", \"DateInterestStart\": \"2001-01-01\", \"DynamicPayPlanTPOption\": \"AwaitComplete\", \"principalAmount\": 643 } ] 200 OK 404 NotFound (Patient or Guarantor not found)","body":{"mode":"raw","raw":"[ { \"PayPlanNum\": 150, \"PatNum\": 72, \"Guarantor\": 72, \"PayPlanDate\": \"2020-04-15\", \"APR\": 0, \"Note\": \"04/15/2020 - Date of Agreement: 04/15/2020, Total Amount: 64.00, APR: 0, Total Cost of Loan: 64.00\", \"PlanNum\": 0, \"CompletedAmt\": 0, \"InsSubNum\": 0, \"PaySchedule\": \"Monthly\", \"NumberOfPayments\": 10, \"PayAmt\": 0, \"DownPayment\": 0, \"IsClosed\": \"true\", \"PlanCategory\": 0, \"planCategory\": \"\", \"IsDynamic\": \"false\", \"ChargeFrequency\": \"Weekly\", \"DatePayPlanStart\": \"2001-01-01\", \"IsLocked\": \"false\", \"DateInterestStart\": \"2001-01-01\", \"DynamicPayPlanTPOption\": \"None\", \"principalAmount\": 64 }, { \"PayPlanNum\": 167, \"PatNum\": 72, \"Guarantor\": 72, \"PayPlanDate\": \"2021-01-23\", \"APR\": 10, \"Note\": \"01/23/2021 - Date of Agreement: 01/23/2021, Total Amount: 1000.00, APR: 10, Total Cost of Loan: 1029.44\", \"PlanNum\": 3, \"CompletedAmt\": 0, \"InsSubNum\": 13, \"PaySchedule\": \"Monthly\", \"NumberOfPayments\": 10, \"PayAmt\": 0, \"DownPayment\": 0, \"IsClosed\": \"true\", \"PlanCategory\": 447, \"planCategory\": \"Implant\", \"IsDynamic\": \"false\", \"ChargeFrequency\": \"Weekly\", \"DatePayPlanStart\": \"2001-01-01\", \"IsLocked\": \"false\", \"DateInterestStart\": \"2021-02-23\", \"DynamicPayPlanTPOption\": \"None\", \"principalAmount\": 1000 }, { \"PayPlanNum\": 169, \"PatNum\": 72, \"Guarantor\": 72, \"PayPlanDate\": \"2022-06-24\", \"APR\": 0, \"Note\": \"06/24/2022 - Date of Agreement: 06/24/2022, Total Amount: 643.00, APR: 0, Total Cost of Loan: 643.00\", \"PlanNum\": 0, \"CompletedAmt\": 643, \"InsSubNum\": 0, \"PaySchedule\": \"Monthly\", \"NumberOfPayments\": 0, \"PayAmt\": 128.6, \"DownPayment\": 0, \"IsClosed\": \"false\", \"PlanCategory\": 446, \"planCategory\": \"Ortho\", \"IsDynamic\": \"true\", \"ChargeFrequency\": \"Monthly\", \"DatePayPlanStart\": \"2022-07-24\", \"IsLocked\": \"false\", \"DateInterestStart\": \"2001-01-01\", \"DynamicPayPlanTPOption\": \"AwaitComplete\", \"principalAmount\": 643 } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/payplans/Dynamic","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/payplans/Dynamic","host":["{{url_local}}{{version_api}}"],"path":["/payplans/Dynamic"],"query":null},"description":"PayPlans POST Dynamic Version Added: 22.2.22 Creates a payment plan for the patient with the specified terms. This is a dynamic payment plan, not an insurance or patient payment plan. Procedures and/or adjustments must be associated with the plan. PatNum: Required. PayAmt: This or NumberOfPayments is required. The amount due per payment plan charge. NumberOfPayments: This or PayAmt is required. The total number of payments in the payment plan. procNums: This and/or adjNums is required. An array of ProcNums, in [1,2,3] format. adjNums: This and/or procNums is required. An Array of AdjNums, in [1,2,3] format. Guarantor: Optional. The person responsible for payments. Default this plan's patient. PayPlanDate: Optional. The date of the plan agreement. Default today. APR: Optional. Default 0. DownPayment: Optional. Default 0.00. Note: Optional. The terms of the payment plan are stored in this field by default. Additional note text is appended to these terms. ChargeFrequency: Optional. Either \"Weekly\", \"EveryOtherWeek\", \"Monthly\", \"Quarterly\", or \"OrdinalWeekday\" (ie, second Tueday of each month, based on the DatePayPlanStart). Default \"Monthly\". DatePayPlanStart: Optional. Due date of first payment. Default one month after the PayPlanDate. DateInterestStart: Optional. Date the payment plan can start posting interest charges. Default minval. IsLocked: Optional. Default to \"true\". Required to be true If APR is above 0. DynamicPayPlanTPOption: Either \"AwaitComplete\" or \"TreatAsComplete\". Default \"AwaitComplete\". Example Request: POST /payplans/Dynamic { \"PatNum\" : 72, \"Guarantor\": 72, \"PayPlanDate\": \"2022-06-30\", \"NumberOfPayments\": 8, \"APR\": 10, \"DownPayment\": 100, \"Note\": \"DownPayment in Cash\", \"ChargeFrequency\":\"Monthly\", \"DatePayPlanStart\": \"2022-07-01\", \"DateInterestStart\": \"2022-08-01\", \"IsLocked\": \"true\", \"DynamicPayPlanTPOption\": \"AwaitComplete\", \"procNums\": [848,847,860,865], \"adjNums\": [40] } Example Response: { \"PayPlanNum\": 271, \"PatNum\": 72, \"Guarantor\": 72, \"PayPlanDate\": \"2022-06-30\", \"APR\": 10.0, \"Note\": \"06/30/2022 - Date of Agreement: 06/30/2022, Total Amount: 728.00, APR: 10, Total Cost of Loan: 741.71, DownPayment in Cash\", \"PlanNum\": 0, \"CompletedAmt\": 652.0, \"InsSubNum\": 0, \"PaySchedule\": \"Monthly\", \"NumberOfPayments\": 0, \"PayAmt\": 81.48, \"DownPayment\": 100.0, \"IsClosed\": \"false\", \"PlanCategory\": 0, \"planCategory\": \"\", \"IsDynamic\": \"true\", \"ChargeFrequency\": \"Monthly\", \"DatePayPlanStart\": \"2022-07-01\", \"IsLocked\": \"true\", \"DateInterestStart\": \"2022-08-01\", \"DynamicPayPlanTPOption\": \"AwaitComplete\", \"principalAmount\": 728.0 } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PatNum\" : 72, \"Guarantor\": 72, \"PayPlanDate\": \"2022-06-30\", \"NumberOfPayments\": 8, \"APR\": 10, \"DownPayment\": 100, \"Note\": \"DownPayment in Cash\", \"ChargeFrequency\":\"Monthly\", \"DatePayPlanStart\": \"2022-07-01\", \"DateInterestStart\": \"2022-08-01\", \"IsLocked\": \"true\", \"DynamicPayPlanTPOption\": \"AwaitComplete\", \"procNums\": [848,847,860,865], \"adjNums\": [40] }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/payplans","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/payplans","host":["{{url_local}}{{version_api}}"],"path":["/payplans"],"query":null},"description":"PayPlans POST (create) Version Added: 22.4.39 This method is deprecated in version 23.3.1. Use PayPlans POST Dynamic instead. Creates a payment plan for the patient with the specified terms. This is a patient payment plan, not an insurance or dynamic payment plan. Procedures and adjustments are not associated with the plan. The terms of the payment plan are stored in the PayPlan.Note field and returned in the response. Uses the patient's information to set the provider and clinic (if enabled) associated with the payment plan. PatNum: Required. useEstBalance: (Added in version 22.2) This or principalAmount is required. Setting this to \"true\" will use the Patient's Estimated Balance for the principal amount. principalAmount: This or useEstBalance is required. The principal amount for the plan. PayAmt: This or NumberOfPayments is required. The amount due per payment plan charge. NumberOfPayments: This or PayAmt is required. The total number of payments in the payment plan. Guarantor: Optional. The person responsible for payments. Default this plan's patient. PayPlanDate: Optional. The date of the plan agreement. Default today. APR: Optional. Default 0. DownPayment: Optional. Default 0.00. Note: Optional. The terms of the payment plan are stored in this field by default. Additional note text is appended to these terms. ChargeFrequency: Optional. Either \"Weekly\", \"EveryOtherWeek\", \"Monthly\", \"Quarterly\", or \"OrdinalWeekday\" (ie, second Tueday of each month, based on the DatePayPlanStart). Default \"Monthly\". DatePayPlanStart: Optional. Due date of first payment. Default one month after the PayPlanDate. DateInterestStart: Optional. Date the payment plan can start posting interest charges. Default minval. Example Requests: POST /payplans { \"PatNum\" : 61, \"useEstBalance\": \"true\", \"PayAmt\": 100 } or { \"PatNum\" : 61, \"principalAmount\": 500, \"PayAmt\": 100 } or { \"PatNum\" : 19, \"principalAmount\": 256.12, \"NumberOfPayments\": 12, \"APR\": 5 } or { \"PatNum\" : 11, \"Guarantor\": 21, \"PayPlanDate\": \"2021-09-06\", \"principalAmount\": 500, \"PayAmt\": 75.50, \"APR\": 18, \"DownPayment\": 125, \"ChargeFrequency\": \"OrdinalWeekday\", \"Note\": \"No payments until 12/06/2021. No interest until 01/03/2022. Payments due first Monday of each month.\", \"DatePayPlanStart\": \"2021-12-06\", \"DateInterestStart\": \"2022-01-03\" } Example Responses: \"9/20/2021 - Date of Agreement: 9/20/2021, Total Amount: 612.98, APR: 0, Total Cost of Loan: 612.98 \" or \"9/20/2021 - Date of Agreement: 9/20/2021, Total Amount: 500.00, APR: 0, Total Cost of Loan: 500.00 \" or \"9/20/2021 - Date of Agreement: 9/20/2021, Total Amount: 256.12, APR: 5, Total Cost of Loan: 263.11 \" or \"9/20/2021 - Date of Agreement: 9/6/2021, Total Amount: 500.00, APR: 18, Total Cost of Loan: 511.66 No payments until 12/06/2021. No interest until 01/03/2022. Payments due first Monday of each month.\" 201 Created 400 BadRequest (Missing or invalid fields) 404 NotFound (Patient not found) 410 Gone (Deprecated)","body":{"mode":"raw","raw":"{ \"PatNum\" : 61, \"useEstBalance\": \"true\", \"PayAmt\": 100 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/payplans/343/Close","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/payplans/343/Close","host":["{{url_local}}{{version_api}}"],"path":["/payplans/343/Close"],"query":null},"description":"PayPlans PUT Close Version Added: 22.4.39 Closes a single patient or dynamic payment plan, not an insurance payment plan. Any outstanding interest will be charged to the patient's account and make them due immediately. See Payment Plan Close. PayPlanNum: Required in the URL. Example Requests: PUT /payplans/343/Close Example Responses: { \"PayPlanNum\" : 343, \"PatNum\" : 11, \"Guarantor\": 21, \"PayPlanDate\": \"2021-09-06\", \"APR\": 18, \"Note\": \"No payments until 12/06/2021. No interest until 01/03/2022. Payments due first Monday of each month.\", \"PlanNum\": 34, \"CompletedAmt\": 700.00, \"InsSubNum\": 86546, \"PaySchedule\": 1, \"NumberOfPayments\": 7, \"PayAmt\": 75.50, \"DownPayment\": 125, \"IsClosed\": true, \"PlanCategory\": 371, \"planCategory\": \"General\", \"IsDynamic\": false, \"ChargeFrequency\": \"OrdinalWeekday\", \"DatePayPlanStart\" :\"2022-10-03\", \"IsLocked\": true, \"DateInterestStart\": \"2022-11-03\", \"DynamicPayPlanTPOption\": 0, \"principalAmount\": 500 } 200 OK 400 BadRequest (Missing or invalid fields) 404 NotFound (PayPlan not found)","body":{"mode":"raw","raw":"{ \"PayPlanNum\" : 343, \"PatNum\" : 11, \"Guarantor\": 21, \"PayPlanDate\": \"2021-09-06\", \"APR\": 18, \"Note\": \"No payments until 12/06/2021. No interest until 01/03/2022. Payments due first Monday of each month.\", \"PlanNum\": 34, \"CompletedAmt\": 700.00, \"InsSubNum\": 86546, \"PaySchedule\": 1, \"NumberOfPayments\": 7, \"PayAmt\": 75.50, \"DownPayment\": 125, \"IsClosed\": true, \"PlanCategory\": 371, \"planCategory\": \"General\", \"IsDynamic\": false, \"ChargeFrequency\": \"OrdinalWeekday\", \"DatePayPlanStart\" :\"2022-10-03\", \"IsLocked\": true, \"DateInterestStart\": \"2022-11-03\", \"DynamicPayPlanTPOption\": 0, \"principalAmount\": 500 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API PaySplits","item":[{"name":"/paysplits?PatNum=407","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/paysplits?PatNum=407","host":["{{url_local}}{{version_api}}"],"path":["/paysplits?PatNum=407"],"query":null},"description":"PaySplits GET Version Added: 22.4.16 Get a list of PaySplits for a patient or payment. Parameters: PatNum:This or PayNum is required. Get all PaySplits for a single patient. PayNum: This or PatNum is required. Get all PaySplits for a single payment. Example Request: GET /paysplits?PatNum=407 GET /paysplits?PayNum=8567 GET /paysplits?PatNum=407&PayNum=8567 Example Response: [ { \"SplitNum\": 116, \"SplitAmt\": 140, \"PatNum\": 407, \"PayNum\": 8567, \"ProvNum\": 1, \"PayPlanNum\": 0, \"DatePay\": \"2023-01-27\", \"ProcNum\": 9, \"DateEntry\": \"2023-01-27\", \"UnearnedType\": 0, \"unearnedType\": \"\", \"ClinicNum\": 1, \"SecDateTEdit\": \"2023-01-27\", \"AdjNum\": 0, \"PayPlanChargeNum\": 0, \"PayPlanDebitType\": \"Unknown\" }, { \"SplitNum\": 115, \"SplitAmt\": 140, \"PatNum\": 407, \"PayNum\": 8567, \"ProvNum\": 1, \"PayPlanNum\": 0, \"DatePay\": \"2023-01-27\", \"ProcNum\": 8, \"DateEntry\": \"2023-01-27\", \"UnearnedType\": 0, \"unearnedType\": \"\", \"ClinicNum\": 1, \"SecDateTEdit\": \"2023-01-27\", \"AdjNum\": 0, \"PayPlanChargeNum\": 0, \"PayPlanDebitType\": \"Unknown\" }, etc... ] 200 OK 400 BadRequest (Patient is deleted, etc) 404 NotFound (Patient not found, Payment not found)","body":{"mode":"raw","raw":"[ { \"SplitNum\": 116, \"SplitAmt\": 140, \"PatNum\": 407, \"PayNum\": 8567, \"ProvNum\": 1, \"PayPlanNum\": 0, \"DatePay\": \"2023-01-27\", \"ProcNum\": 9, \"DateEntry\": \"2023-01-27\", \"UnearnedType\": 0, \"unearnedType\": \"\", \"ClinicNum\": 1, \"SecDateTEdit\": \"2023-01-27\", \"AdjNum\": 0, \"PayPlanChargeNum\": 0, \"PayPlanDebitType\": \"Unknown\" }, { \"SplitNum\": 115, \"SplitAmt\": 140, \"PatNum\": 407, \"PayNum\": 8567, \"ProvNum\": 1, \"PayPlanNum\": 0, \"DatePay\": \"2023-01-27\", \"ProcNum\": 8, \"DateEntry\": \"2023-01-27\", \"UnearnedType\": 0, \"unearnedType\": \"\", \"ClinicNum\": 1, \"SecDateTEdit\": \"2023-01-27\", \"AdjNum\": 0, \"PayPlanChargeNum\": 0, \"PayPlanDebitType\": \"Unknown\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API PerioExams","item":[{"name":"/perioexams/171","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/perioexams/171","host":["{{url_local}}{{version_api}}"],"path":["/perioexams/171"],"query":null},"description":"PerioExams GET (single) Version Added: 22.4.36 Gets a single PerioExam. PerioExamNum: Required in the URL. Example Request: GET /perioexams/171 Example Response: { \"PerioExamNum\": 171, \"PatNum\": 236, \"ExamDate\": \"2023-04-01\", \"ProvNum\": 0, \"DateTMeasureEdit\": \"2023-04-01 05:25:46\", \"Note\": \"\" } 200 OK 400 BadRequest (with explanation) 404 Not Found (with explanation)","body":{"mode":"raw","raw":"{ \"PerioExamNum\": 171, \"PatNum\": 236, \"ExamDate\": \"2023-04-01\", \"ProvNum\": 0, \"DateTMeasureEdit\": \"2023-04-01 05:25:46\", \"Note\": \"\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/perioexams?PatNum=236","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/perioexams?PatNum=236","host":["{{url_local}}{{version_api}}"],"path":["/perioexams?PatNum=236"],"query":null},"description":"PerioExams GET (multiple) Version Added: 22.4.36 Gets a list of PerioExams. Parameters: All optional. PatNum: FK to patient.PatNum. ExamDate: String in \"yyyy-MM-dd\" format. Gets all PerioExams made on or after a certain date. Example Request: GET /perioexams?PatNum=236 GET /perioexams?ExamDate=2023-04-01 Example Response: [ { \"PerioExamNum\": 171, \"PatNum\": 236, \"ExamDate\": \"2023-04-01\", \"ProvNum\": 0, \"DateTMeasureEdit\": \"2023-04-01 05:25:46\", \"Note\": \"\" }, etc... ] 200 OK 400 BadRequest (with explanation) 404 Not Found (with explanation)","body":{"mode":"raw","raw":"[ { \"PerioExamNum\": 171, \"PatNum\": 236, \"ExamDate\": \"2023-04-01\", \"ProvNum\": 0, \"DateTMeasureEdit\": \"2023-04-01 05:25:46\", \"Note\": \"\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/perioexams","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/perioexams","host":["{{url_local}}{{version_api}}"],"path":["/perioexams"],"query":null},"description":"PerioExams POST Version Added: 23.1.20 Inserts a new PerioExam for a patient. For more information, see Perio Chart. Rarely used. If UpperFacial, UpperLingual, LowerLingual, and/or LowerFacial are passed in, then corresponding PerioMeasures will be created and inserted along with the new PerioExam. Values strings are parsed left to right and will traverse surfaces in that region from the right side of the mouth to the left side (AutoAdvance Left in UI). Each integer (0-9) functions as a Probing measurement for a new surface. Any bleeding flag characters (b,s,p,c) following the integer sets Bleeding, Suppuration, Plaque, and Calculus respectively for the same surface. Any other characters are ignored. After the region is fully measured, all further characters are ignored. For example, \"UpperFacial\":\"323b\" will insert a PerioMeasure for ToothNum 1 with DB, B, MB values of 3,2,and 3, and a PerioMeasure for ToothNum 1 with a bleeding flag on MB. Use PerioMeasures GET to retrieve any created PerioMeasures. PatNum: Required. FK to patient.PatNum. UpperFacial: Optional, string. Probing and Bleeding values for facial surfaces of upper teeth (1-16). Defaults to empty string. UpperLingual: Optional, string. Probing and Bleeding values for lingual surfaces of upper teeth (1-16). Defaults to empty string. LowerLingual: Optional, string. Probing and Bleeding values for lingual surfaces of lower teeth (17-32). Defaults to empty string. LowerFacial: Optional, string. Probing and Bleeding values for facial surfaces of lower teeth (17-32). Defaults to empty string. Example Request: POST /perioexams { \"PatNum\": 20, \"UpperFacial\": \"32b4b32432332332332bs132332331342c3c3253233223p2c3p22b3b343\", \"UpperLingual\": \"323,323,322,222,232,222,212,212,212,212,232,323,323,323,343,343\", \"LowerLingual\": \"3b2b4b 424 323 323 323 321 323 323.313 42c3c 325 323 322 3p2c3p 22b3b 343c\", \"LowerFacial\": \"4 3b 2s 4bs 4p 2bp 4sp 3bsp 2c 3bc 3sc 2bsc 3pc 3bpc 2spc 3bspc\" } Example Response: { \"PerioExamNum\": 31, \"PatNum\": 20, \"ExamDate\": \"2023-05-12\", \"ProvNum\": 0, \"DateTMeasureEdit\": \"2023-05-12 13:21:48\", \"Note\": \"\" } 201 Created 400 BadRequest (with explanation) 404 NotFound (Patient not found)","body":{"mode":"raw","raw":"{ \"PatNum\": 20, \"UpperFacial\": \"32b4b32432332332332bs132332331342c3c3253233223p2c3p22b3b343\", \"UpperLingual\": \"323,323,322,222,232,222,212,212,212,212,232,323,323,323,343,343\", \"LowerLingual\": \"3b2b4b 424 323 323 323 321 323 323.313 42c3c 325 323 322 3p2c3p 22b3b 343c\", \"LowerFacial\": \"4 3b 2s 4bs 4p 2bp 4sp 3bsp 2c 3bc 3sc 2bsc 3pc 3bpc 2spc 3bspc\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API PerioMeasures","item":[{"name":"/periomeasures","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/periomeasures","host":["{{url_local}}{{version_api}}"],"path":["/periomeasures"],"query":null},"description":"PerioMeasures GET Version Added: 22.4.32 Gets a list of PerioMeasures. PerioExamNum: Optional. FKey to perioexam.PerioExamNum. Use to get all measurements for a single exam. Returned fields are detailed below: SequenceType: Specifies what is being measured. IntTooth: The tooth this measurement is associated to. ToothValue: Used when the measurement does not apply to a surface. MBvalue: Mesial Buccal surface value. Bvalue: Buccal surface value. DBvalue: Distal Buccal surface value. MLvalue: Mesial Lingual surface value. Lvalue: Lingual surface value. DLvalue: Distal Lingual surface value. SecDateTEdit: When this PerioMeasure was last modified. Example Requests: GET /periomeasures GET /periomeasures?PerioExamNum=3 Example Response: [ { \"PerioMeasureNum\": 66, \"PerioExamNum\": 3, \"SequenceType\": \"SkipTooth\", \"IntTooth\": 16, \"ToothValue\": 1, \"MBvalue\": -1, \"Bvalue\": -1, \"DBvalue\": -1, \"MLvalue\": -1, \"Lvalue\": -1, \"DLvalue\": -1, \"SecDateTEdit\": \"2023-03-15 11:35:22\" }, { \"PerioMeasureNum\": 96, \"PerioExamNum\": 3, \"SequenceType\": \"Probing\", \"IntTooth\": 17, \"ToothValue\": -1, \"MBvalue\": 3, \"Bvalue\": 3, \"DBvalue\": 3, \"MLvalue\": 3, \"Lvalue\": 2, \"DLvalue\": 3, \"SecDateTEdit\": \"2023-03-15 11:44:14\" }, { \"PerioMeasureNum\": 97, \"PerioExamNum\": 3, \"SequenceType\": \"Bleeding\", \"IntTooth\": 2, \"ToothValue\": -1, \"MBvalue\": 0, \"Bvalue\": 15, \"DBvalue\": 15, \"MLvalue\": 0, \"Lvalue\": 0, \"DLvalue\": 0, \"SecDateTEdit\": \"2023-03-15 11:50:14\" }, etc... ] 200 OK 400 BadRequest 404 NotFound \"PerioExamNum not found\"","body":{"mode":"raw","raw":"[ { \"PerioMeasureNum\": 66, \"PerioExamNum\": 3, \"SequenceType\": \"SkipTooth\", \"IntTooth\": 16, \"ToothValue\": 1, \"MBvalue\": -1, \"Bvalue\": -1, \"DBvalue\": -1, \"MLvalue\": -1, \"Lvalue\": -1, \"DLvalue\": -1, \"SecDateTEdit\": \"2023-03-15 11:35:22\" }, { \"PerioMeasureNum\": 96, \"PerioExamNum\": 3, \"SequenceType\": \"Probing\", \"IntTooth\": 17, \"ToothValue\": -1, \"MBvalue\": 3, \"Bvalue\": 3, \"DBvalue\": 3, \"MLvalue\": 3, \"Lvalue\": 2, \"DLvalue\": 3, \"SecDateTEdit\": \"2023-03-15 11:44:14\" }, { \"PerioMeasureNum\": 97, \"PerioExamNum\": 3, \"SequenceType\": \"Bleeding\", \"IntTooth\": 2, \"ToothValue\": -1, \"MBvalue\": 0, \"Bvalue\": 15, \"DBvalue\": 15, \"MLvalue\": 0, \"Lvalue\": 0, \"DLvalue\": 0, \"SecDateTEdit\": \"2023-03-15 11:50:14\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/periomeasures","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/periomeasures","host":["{{url_local}}{{version_api}}"],"path":["/periomeasures"],"query":null},"description":"PerioMeasures POST (create) Version Added: 22.4.37 Inserts a new PerioMeasure. New periomeasures are compared against existing periomeasures attached to the same perioexam to prevent duplicates. PerioExamNum: Required. FK to PerioExam.PerioExamNum. SequenceType: Required. Either \"Mobility\", \"Furcation\", \"GingMargin\", \"MGJ\", \"Probing\", \"SkipTooth\", or \"Bleeding\". IntTooth: Required. Valid values are 1-32. The tooth that this measurement is associated to. ToothValue, MBvalue, Bvalue, DBvalue, MLvalue, Lvalue, DLvalue: See the top of this page for more information. Relies on SequenceType. Default -1. Example Requests: POST /periomeasures { \"PerioExamNum\": 5, \"SequenceType\": \"Probing\", \"IntTooth\": 8, \"MBvalue\": 2, \"Bvalue\": 3, \"DBvalue\": 2, \"MLvalue\": 2, \"Lvalue\": 2, \"DLvalue\": 2 } or { \"PerioExamNum\": 5, \"SequenceType\": \"Mobility\", \"IntTooth\": 9, \"ToothValue\": 4 } Example Responses: { \"PerioMeasureNum\": 206, \"PerioExamNum\": 5, \"SequenceType\": \"Probing\", \"IntTooth\": 8, \"ToothValue\": -1, \"MBvalue\": 2, \"Bvalue\": 3, \"DBvalue\": 2, \"MLvalue\": 2, \"Lvalue\": 2, \"DLvalue\": 2, \"SecDateTEdit\": \"2023-03-30 11:20:02\" } or { \"PerioMeasureNum\": 207, \"PerioExamNum\": 5, \"SequenceType\": \"Mobility\", \"IntTooth\": 9, \"ToothValue\": 4, \"MBvalue\": -1, \"Bvalue\": -1, \"DBvalue\": -1, \"MLvalue\": -1, \"Lvalue\": -1, \"DLvalue\": -1, \"SecDateTEdit\": \"2023-03-30 11:23:31\" } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PerioExamNum\": 5, \"SequenceType\": \"Probing\", \"IntTooth\": 8, \"MBvalue\": 2, \"Bvalue\": 3, \"DBvalue\": 2, \"MLvalue\": 2, \"Lvalue\": 2, \"DLvalue\": 2 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/periomeasures/206","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/periomeasures/206","host":["{{url_local}}{{version_api}}"],"path":["/periomeasures/206"],"query":null},"description":"PerioMeasures PUT (update) Version Added: 22.4.37 Updates an existing PerioMeasure. The following fields cannot be set as part of a PUT: PerioMeasureNum, PerioExamNum, SequenceType, and IntTooth. Attempts to set them will be silently ignored. PerioMeasureNum: Required in the URL. Primary key. ToothValue, MBvalue, Bvalue, DBvalue, MLvalue, Lvalue, DLvalue: The values that can be supplied and the measurements they can contain rely on the SequenceType. See the top of this page for more information. Example Requests: PUT /periomeasures/206 { \"MBvalue\": 3, \"Bvalue\": 2, \"DBvalue\": 3, \"MLvalue\": 3, \"Lvalue\": 2, \"DLvalue\": 3 } or { \"ToothValue\": 4 } Example Responses: { \"PerioMeasureNum\": 206, \"PerioExamNum\": 5, \"SequenceType\": \"Probing\", \"IntTooth\": 8, \"ToothValue\": -1, \"MBvalue\": 3, \"Bvalue\": 2, \"DBvalue\": 3, \"MLvalue\": 3, \"Lvalue\": 2, \"DLvalue\": 3, \"SecDateTEdit\": \"2023-04-05 14:30:00\" } or { \"PerioMeasureNum\": 207, \"PerioExamNum\": 5, \"SequenceType\": \"Mobility\", \"IntTooth\": 9, \"ToothValue\": 4, \"MBvalue\": -1, \"Bvalue\": -1, \"DBvalue\": -1, \"MLvalue\": -1, \"Lvalue\": -1, \"DLvalue\": -1, \"SecDateTEdit\": \"2023-04-03 09:48:23\" } 201 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"MBvalue\": 3, \"Bvalue\": 2, \"DBvalue\": 3, \"MLvalue\": 3, \"Lvalue\": 2, \"DLvalue\": 3 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Popups","item":[{"name":"/popups?PatNum=10","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/popups?PatNum=10","host":["{{url_local}}{{version_api}}"],"path":["/popups?PatNum=10"],"query":null},"description":"Popups GET Version Added: 21.4 Gets active and disabled popups for a patient and associated Family and SuperFamily. For versions 22.2 and later, the IsDisabled field is deprecated and may give unreliable information. DateTimeDisabled, also introduced in 22.2, should be referenced instead. Example Request: GET /popups?PatNum=10 Example Response: [ { \"PopupNum\": 1, \"PatNum\": 10, \"Description\": \"Needs to fill out paperwork.\", \"PopupLevel\": \"Patient\", \"IsDisabled\": \"false\", \"DateTimeDisabled\": \"1/1/0001 12:00:00 AM\" }, { \"PopupNum\": 2, \"PatNum\": 10, \"Description\": \"Verify cell phone number is accurate.\", \"PopupLevel\": \"Family\", \"IsDisabled\": \"false\", \"DateTimeDisabled\": \"8/22/2023 8:00:00 AM\" }, { \"PopupNum\": 5, \"PatNum\": 35, \"Description\": \"Ask about medications.\", \"PopupLevel\": \"SuperFamily\", \"IsDisabled\": \"false\", \"DateTimeDisabled\": \"5/22/2022 8:30:00 AM\" } ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"PopupNum\": 1, \"PatNum\": 10, \"Description\": \"Needs to fill out paperwork.\", \"PopupLevel\": \"Patient\", \"IsDisabled\": \"false\", \"DateTimeDisabled\": \"1/1/0001 12:00:00 AM\" }, { \"PopupNum\": 2, \"PatNum\": 10, \"Description\": \"Verify cell phone number is accurate.\", \"PopupLevel\": \"Family\", \"IsDisabled\": \"false\", \"DateTimeDisabled\": \"8/22/2023 8:00:00 AM\" }, { \"PopupNum\": 5, \"PatNum\": 35, \"Description\": \"Ask about medications.\", \"PopupLevel\": \"SuperFamily\", \"IsDisabled\": \"false\", \"DateTimeDisabled\": \"5/22/2022 8:30:00 AM\" } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/popups","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/popups","host":["{{url_local}}{{version_api}}"],"path":["/popups"],"query":null},"description":"Popups POST (create) Version Added: 21.1 Be careful. Popups tend to be annoying to users and are usually reserved for more important notes. PatNum: Required. Description: Required. PopupLevel: Optional. \"Patient\", triggered when patient is selected in Open Dental. \"Family\", triggered when any member of the patient's family is selected in Open Dental. \"SuperFamily\", triggered when any member of the patient's super family is selected in Open Dental. The patient must be part of a SuperFamily for this option to be available. Default is \"Patient\". Example Request: POST /popups { \"PatNum\": \"15\", \"Description\":\"Needs to fill out paperwork\", \"PopupLevel\":\"Patient\" } Example Response: 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PatNum\": \"15\", \"Description\":\"Needs to fill out paperwork\", \"PopupLevel\":\"Patient\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Preferences","item":[{"name":"/preferences?PrefName=RecallDaysPast","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/preferences?PrefName=RecallDaysPast","host":["{{url_local}}{{version_api}}"],"path":["/preferences?PrefName=RecallDaysPast"],"query":null},"description":"Preferences GET Version Added: 21.1 PrefName is optional. Otherwise you end up with all ~1000 preferences, paginated. Example Requests: GET /preferences?PrefName=RecallDaysPast GET /preferences?Offset=200 Example Response: [ { \"PrefNum\": 14, \"PrefName\": \"PracticeDefaultBillType\", \"ValueString\": \"40\" }, { \"PrefNum\": 15, \"PrefName\": \"RecallDaysPast\", \"ValueString\": \"365\" }, { \"PrefNum\": 16, \"PrefName\": \"RecallDaysFuture\", \"ValueString\": \"7\" }, etc... ]","body":{"mode":"raw","raw":"[ { \"PrefNum\": 14, \"PrefName\": \"PracticeDefaultBillType\", \"ValueString\": \"40\" }, { \"PrefNum\": 15, \"PrefName\": \"RecallDaysPast\", \"ValueString\": \"365\" }, { \"PrefNum\": 16, \"PrefName\": \"RecallDaysFuture\", \"ValueString\": \"7\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API ProcedureCodes","item":[{"name":"/procedurecodes","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/procedurecodes","host":["{{url_local}}{{version_api}}"],"path":["/procedurecodes"],"query":null},"description":"ProcedureCodes GET Version Added: 22.3.22 Gets a list of ProcedureCodes. DateTStamp (Added in version 22.4.28): Optional. String in \"yyyy-MM-dd HH:mm:ss\" format. Get ProcedureCodes altered after the specified date and time. Example Requests: GET /procedurecodes GET /procedurecodes?Limit=50&Offset=100 GET /procedurecodes?DateTStamp=2021-11-07%2014%3A00%3A00 Example Response: [ { \"CodeNum\": 74, \"ProcCode\": \"D0120\", \"Descript\": \"periodic oral evaluation - established patient\", \"AbbrDesc\": \"PerEx\", \"ProcTime\": \"/X/\", \"ProcCat\": 73, \"procCat\": \"Exams & Xrays\", \"TreatArea\": \"None\", \"NoBillIns\": \"false\", \"DefaultNote\": \"\", \"IsHygiene\": \"false\", \"MedicalCode\": \"\", \"LaymanTerm\": \"\", \"SubstitutionCode\": \"\", \"SubstOnlyIf\": \"Always\", \"DateTStamp\": \"2021-11-08 10:02:33\", \"ProvNumDefault\": 0, \"CanadaTimeUnits\": 0 }, { \"CodeNum\": 75, \"ProcCode\": \"D0140\", \"Descript\": \"limited oral evaluation - problem focused\", \"AbbrDesc\": \"LimEx\", \"ProcTime\": \"/X/\", \"ProcCat\": 73, \"procCat\": \"Exams & Xrays\", \"TreatArea\": \"None\", \"NoBillIns\": \"false\", \"DefaultNote\": \"\", \"IsHygiene\": \"false\", \"MedicalCode\": \"\", \"LaymanTerm\": \"\", \"SubstitutionCode\": \"C0123\", \"SubstOnlyIf\": \"Molar\", \"DateTStamp\": \"2021-11-08 10:02:33\", \"ProvNumDefault\": 0, \"CanadaTimeUnits\": 0 }, etc... ] 200 OK 400 BadRequest","body":{"mode":"raw","raw":"[ { \"CodeNum\": 74, \"ProcCode\": \"D0120\", \"Descript\": \"periodic oral evaluation - established patient\", \"AbbrDesc\": \"PerEx\", \"ProcTime\": \"/X/\", \"ProcCat\": 73, \"procCat\": \"Exams & Xrays\", \"TreatArea\": \"None\", \"NoBillIns\": \"false\", \"DefaultNote\": \"\", \"IsHygiene\": \"false\", \"MedicalCode\": \"\", \"LaymanTerm\": \"\", \"SubstitutionCode\": \"\", \"SubstOnlyIf\": \"Always\", \"DateTStamp\": \"2021-11-08 10:02:33\", \"ProvNumDefault\": 0, \"CanadaTimeUnits\": 0 }, { \"CodeNum\": 75, \"ProcCode\": \"D0140\", \"Descript\": \"limited oral evaluation - problem focused\", \"AbbrDesc\": \"LimEx\", \"ProcTime\": \"/X/\", \"ProcCat\": 73, \"procCat\": \"Exams & Xrays\", \"TreatArea\": \"None\", \"NoBillIns\": \"false\", \"DefaultNote\": \"\", \"IsHygiene\": \"false\", \"MedicalCode\": \"\", \"LaymanTerm\": \"\", \"SubstitutionCode\": \"C0123\", \"SubstOnlyIf\": \"Molar\", \"DateTStamp\": \"2021-11-08 10:02:33\", \"ProvNumDefault\": 0, \"CanadaTimeUnits\": 0 }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/procedurecodes","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/procedurecodes","host":["{{url_local}}{{version_api}}"],"path":["/procedurecodes"],"query":null},"description":"ProcedureCodes POST (create) Version Added: 22.3 Creates a new ProcedureCode. ProcCode: Required. Dental code. Descript: Required. The main description of the Procedure. AbbrDesc: Required. Abbreviated description. ProcCat: Required if procCat is not provided. FK to definition.DefNum where definition.Category=11. procCat: Required if ProcCat is not provided. The string version of the definition.ItemName. ProcTime: Optional. Default \"/X/\". Time pattern in 5 minute increments. A string consisting of 'X' and '/' characters only. TreatArea: (Added in Version 22.4.34) Optional. Either \"None\", \"Surf\", \"Tooth\", \"Mouth\", \"Quad\", \"Sextant\", \"Arch\", or \"ToothRange\". Default is \"None\". NoBillIns: (Added in Version 23.2.10) Optional. Either \"true\" or \"false\". Default \"false\". DefaultNote: Optional. The default note for this Procedure that will be copied to a ProcNote when marking complete. IsHygiene: Optional. Either \"true\" or \"false\". Default \"false\". MedicalCode: Optional. FK to procedurecode.ProcCode. The medical code that is being referenced must be setup first. Anytime a procedure is added, this medical code will also be added to that Procedure. LaymanTerm: Optional. When creating treatment plans, this description will be used instead of the Descript. SubstitutionCode: (Added in Version 22.4.9) Optional. FK to ProcedureCode.ProcCode. Used to create a substitution code at the procedure level. Case sensitive. SubstOnlyIf: (Added in Version 22.4.9) Optional. Either \"Always\", \"Molar\", \"SecondMolar\", \"Never\", or \"Posterior\". Only used if SubstitutionCode is set. Default is \"Always\". ProvNumDefault: Optional. FK to provider.ProvNum. 0 for none. Otherwise, this provider will override other providers. CanadaTimeUnits: Optional. Tracks scaling insurance and periodontal scaling units for patients depending on coverage. Example Request: POST /procedurecodes { \"ProcCode\": \"G0140\", \"Descript\": \"limited oral evaluation - problem focused\", \"AbbrDesc\": \"LimEx\", \"ProcCat\": 83 } Example Response: { \"CodeNum\": 654, \"ProcCode\": \"G0140\", \"Descript\": \"limited oral evaluation - problem focused\", \"AbbrDesc\": \"LimEx\", \"ProcTime\": \"/X/\", \"ProcCat\": 83, \"procCat\": \"Ortho\", \"TreatArea\": \"None\", \"NoBillIns\": \"false\", \"DefaultNote\": \"\", \"IsHygiene\": \"false\", \"MedicalCode\": \"\", \"LaymanTerm\": \"\", \"SubstitutionCode\": \"\", \"SubstOnlyIf\": \"Always\", \"DateTStamp\": \"2021-11-08 10:02:33\", \"ProvNumDefault\": 0, \"CanadaTimeUnits\": 0 } 201 Created 400 BadRequest (Missing or Invalid fields) 404 NotFound (Provider not found)","body":{"mode":"raw","raw":"{ \"ProcCode\": \"G0140\", \"Descript\": \"limited oral evaluation - problem focused\", \"AbbrDesc\": \"LimEx\", \"ProcCat\": 83 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API ProcedureLogs","item":[{"name":"/procedurelogs/20","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/procedurelogs/20","host":["{{url_local}}{{version_api}}"],"path":["/procedurelogs/20"],"query":null},"description":"ProcedureLogs GET (single) Version Added: 23.3.13 Get a single procedurelog. ProcNum: Required in URL. Example Request: GET /procedurelogs/20 Example Response: { \"ProcNum\": 20, \"PatNum\": 12, \"AptNum\": \"0\", \"ProcDate\": \"2022-05-05\", \"ProcFee\": \"130.00\", \"Surf\": \"MODL\", \"ToothNum\": \"4\", \"ToothRange\": \"\", \"Priority\": 0, \"priority\": \"\", \"ProcStatus\": \"C\", \"ProvNum\": 2, \"provAbbr\": \"DOC2\", \"Dx\": \"\", \"dxName\": \"\", \"PlannedAptNum\": \"0\", \"Prosthesis\": \"\", \"DateOriginalProsth\": \"0001-01-01\", \"ClinicNum\": 0, \"CodeNum\": 2, \"procCode\": \"D0120\", \"descript\": \"periodic oral evaluation - established patient\", \"UnitQty\": 1, \"BaseUnits\": 0, \"DateTStamp\": \"2022-05-05 07:00:34\", \"IsDateProsthEst\": \"false\", \"serverDateTime\": \"2022-05-05 09:00:34\" } 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"ProcNum\": 20, \"PatNum\": 12, \"AptNum\": \"0\", \"ProcDate\": \"2022-05-05\", \"ProcFee\": \"130.00\", \"Surf\": \"MODL\", \"ToothNum\": \"4\", \"ToothRange\": \"\", \"Priority\": 0, \"priority\": \"\", \"ProcStatus\": \"C\", \"ProvNum\": 2, \"provAbbr\": \"DOC2\", \"Dx\": \"\", \"dxName\": \"\", \"PlannedAptNum\": \"0\", \"Prosthesis\": \"\", \"DateOriginalProsth\": \"0001-01-01\", \"ClinicNum\": 0, \"CodeNum\": 2, \"procCode\": \"D0120\", \"descript\": \"periodic oral evaluation - established patient\", \"UnitQty\": 1, \"BaseUnits\": 0, \"DateTStamp\": \"2022-05-05 07:00:34\", \"IsDateProsthEst\": \"false\", \"serverDateTime\": \"2022-05-05 09:00:34\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/procedurelogs?PatNum=261","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/procedurelogs?PatNum=261","host":["{{url_local}}{{version_api}}"],"path":["/procedurelogs?PatNum=261"],"query":null},"description":"ProcedureLogs GET (multiple) Version Added: 21.1 Get a list of procedurelogs that meet a set of search criteria. Parameters: PatNum: All procedures for a single patient. AptNum: (Added in version 22.3.32) All procedures associated to a single appointment. ClinicNum: (Added in version 23.3.13) All procedures associated to a single clinic. DateTStamp: Only useful if not supplying a PatNum. Only include procedurelogs with a DateTStamp altered on or after the specified date and time. This provides a good way for you to keep a synchronized copy of procedurelogs. Store serverDateTime that gets returned and use it to run the next GET. Example Requests: GET /procedurelogs?PatNum=261 GET /procedurelogs?DateTStamp=2020-07-30 08:00:00&Offset=400 GET /procedurelogs?AptNum=202 GET /procedurelogs?ClinicNum=1 Example Response: { \"ProcNum\": 1, \"PatNum\": 1, \"AptNum\": \"0\", \"ProcDate\": \"2021-04-01\", \"ProcFee\": \"255.00\", \"Surf\": \"MODL\", \"ToothNum\": \"4\", \"ToothRange\": \"\", \"Priority\": 0, \"priority\": \"\", \"ProcStatus\": \"C\", \"ProvNum\": 1, \"provAbbr\": \"DOC1\", \"Dx\": \"\", \"dxName\": \"\", \"PlannedAptNum\": \"0\", \"Prosthesis\": \"\", \"DateOriginalProsth\": \"0001-01-01\", \"ClinicNum\": 0, \"CodeNum\": 2, \"procCode\": \"D0120\", \"descript\": \"periodic oral evaluation - established patient\", \"UnitQty\": 1, \"BaseUnits\": 0, \"DateTStamp\": \"2021-11-03 05:30:06\", \"IsDateProsthEst\": \"false\", \"serverDateTime\": \"2021-11-03 09:32:45\" } 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"ProcNum\": 1, \"PatNum\": 1, \"AptNum\": \"0\", \"ProcDate\": \"2021-04-01\", \"ProcFee\": \"255.00\", \"Surf\": \"MODL\", \"ToothNum\": \"4\", \"ToothRange\": \"\", \"Priority\": 0, \"priority\": \"\", \"ProcStatus\": \"C\", \"ProvNum\": 1, \"provAbbr\": \"DOC1\", \"Dx\": \"\", \"dxName\": \"\", \"PlannedAptNum\": \"0\", \"Prosthesis\": \"\", \"DateOriginalProsth\": \"0001-01-01\", \"ClinicNum\": 0, \"CodeNum\": 2, \"procCode\": \"D0120\", \"descript\": \"periodic oral evaluation - established patient\", \"UnitQty\": 1, \"BaseUnits\": 0, \"DateTStamp\": \"2021-11-03 05:30:06\", \"IsDateProsthEst\": \"false\", \"serverDateTime\": \"2021-11-03 09:32:45\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/procedurelogs/InsuranceHistory?PatNum=2617&amp;InsSubNum=2046","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/procedurelogs/InsuranceHistory?PatNum=2617&amp;InsSubNum=2046","host":["{{url_local}}{{version_api}}"],"path":["/procedurelogs/InsuranceHistory?PatNum=2617&amp;InsSubNum=2046"],"query":null},"description":"ProcedureLogs GET InsuranceHistory Version Added: 22.4.31 Gets the previous treatment dates of procedures for a patient's insurance plan, similarly to how it shows in the Insurance History form. Parameters: PatNum: Required. FK to patient.PatNum. InsSubNum: Required. FK to inssub.InsSubNum. Returned fields are detaled below: insHistPrefName: Name of the Preference that is storing the ProcedureCodes for that category. procDate: Previous treatement date for this category. Returns \"No History\" if there is no record, or \"Not Set\" if that preference has no procedure codes. ProcNum: FK to procedure.ProcNum for the most recent procedure for that category. Example Requests: GET /procedurelogs/InsuranceHistory?PatNum=2617&InsSubNum=2046 Example Response: [ { \"insHistPrefName\": \"InsHistBWCodes\", \"procDate\": \"2021-12-12\", \"ProcNum\": 13073 }, { \"insHistPrefName\": \"InsHistPanoCodes\", \"procDate\": \"2023-03-08\", \"ProcNum\": 17068 }, { \"insHistPrefName\": \"InsHistExamCodes\", \"procDate\": \"No History\", \"ProcNum\": 0 }, { \"insHistPrefName\": \"InsHistProphyCodes\", \"procDate\": \"2023-03-07\", \"ProcNum\": 17064 }, { \"insHistPrefName\": \"InsHistPerioURCodes\", \"procDate\": \"No History\", \"ProcNum\": 0 }, { \"insHistPrefName\": \"InsHistPerioULCodes\", \"procDate\": \"Not Set\", \"ProcNum\": 0 }, { \"insHistPrefName\": \"InsHistPerioLRCodes\", \"procDate\": \"No History\", \"ProcNum\": 0 }, { \"insHistPrefName\": \"InsHistPerioLLCodes\", \"procDate\": \"2009-06-19\", \"ProcNum\": 1074 }, { \"insHistPrefName\": \"InsHistPerioMaintCodes\", \"procDate\": \"No History\", \"ProcNum\": 0 }, { \"insHistPrefName\": \"InsHistDebridementCodes\", \"procDate\": \"2023-03-01\", \"ProcNum\": 17067 } ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"insHistPrefName\": \"InsHistBWCodes\", \"procDate\": \"2021-12-12\", \"ProcNum\": 13073 }, { \"insHistPrefName\": \"InsHistPanoCodes\", \"procDate\": \"2023-03-08\", \"ProcNum\": 17068 }, { \"insHistPrefName\": \"InsHistExamCodes\", \"procDate\": \"No History\", \"ProcNum\": 0 }, { \"insHistPrefName\": \"InsHistProphyCodes\", \"procDate\": \"2023-03-07\", \"ProcNum\": 17064 }, { \"insHistPrefName\": \"InsHistPerioURCodes\", \"procDate\": \"No History\", \"ProcNum\": 0 }, { \"insHistPrefName\": \"InsHistPerioULCodes\", \"procDate\": \"Not Set\", \"ProcNum\": 0 }, { \"insHistPrefName\": \"InsHistPerioLRCodes\", \"procDate\": \"No History\", \"ProcNum\": 0 }, { \"insHistPrefName\": \"InsHistPerioLLCodes\", \"procDate\": \"2009-06-19\", \"ProcNum\": 1074 }, { \"insHistPrefName\": \"InsHistPerioMaintCodes\", \"procDate\": \"No History\", \"ProcNum\": 0 }, { \"insHistPrefName\": \"InsHistDebridementCodes\", \"procDate\": \"2023-03-01\", \"ProcNum\": 17067 } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/procedurelogs","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/procedurelogs","host":["{{url_local}}{{version_api}}"],"path":["/procedurelogs"],"query":null},"description":"ProcedureLogs POST (create) Version Added: 21.4 Creates a new procedure for a given patient. The following fields cannot be set as part of a POST: ProcNum, provAbbr, CodeNum, and descript. Attempts to set them will be silently ignored. Furthermore, the following pairs of fields may only have one of the two passed in at once: Priority and priority, Dx and dxName. Not all procedure codes support Surfs, ToothNums, and ToothRanges. Procedure code default notes will not be used. PatNum: Required. ProcDate: Required. String in \"yyyy-MM-dd\" format. ProcStatus: Required. Either Treatment Planned (TP), Complete (C), or Existing Other Provider (EO). procCode: Required. This should be a valid D code, example: D0120. CodeNum is set automatically. AptNum: Optional. ProcFee: Optional. If none is given this will default to the procedurecodes default, with consideration of the patient's insurance. Surf: Required for the treatment areas of some procCodes. Can be tooth Surfaces (B/F,V,M,O/I,D,L), mouth Quadrants (UL,UR,LR,LL), Sextants (1,2,3,4,5,6), or Arches (U or L). ToothNum: Required by procCodes with a Surf or Tooth treatment area. ToothRange: Required by procCodes with a ToothRange treatment area, or for Quadrants and Arches when AreaAlsoToothRange is true. A string of numbers separated by commas and/or hyphen separated ranges. Priority: Optional. Definition.DefNum where definition.Category=20. Default is the first definition in that Category. If Priority is used, then priority will be set automatically. priority: Optional. String version of Priority. If priority is used, then Priority will be set automatically. ProvNum: Optional. Defaults to the PriProv of the appointment if given, otherwise it will check the patient's default provider. Failing either of the previous options, it will be set to the dental office's default provider. If ProvNum is used, then provAbbr will be set automatically. Dx: Optional. Definition.DefNum where definition.Category=16. Default is the first definition in that Category. If Dx is used, then dxName will be set automatically. dxName: Optional. String version of Dx. If dxName is used, then Dx will be set automatically. PlannedAptNum: Optional. Only set if this procedure is on a planned appointment, otherwise it will be 0. ClinicNum: Optional. Defaults to the patient's clinic. Example Requests: POST /procedurelogs { \"PatNum\": 31, \"ProcDate\": \"2021-04-28\", \"ToothRange\": \"2,3, 13-15\", \"Priority\": 149, \"ProcStatus\": \"TP\", \"dxName\": \"Defect (or miss fill)\", \"procCode\": \"D1206\" } { \"PatNum\": 29, \"AptNum\": 0, \"ProcDate\": \"2021-04-25\", \"ProcFee\": \"125.95\", \"Surf\": \"MO\", \"ToothNum\": \"4\", \"priority\": \"Low\", \"ProcStatus\": \"TP\", \"ProvNum\": 1, \"Dx\": 126, \"PlannedAptNum\": 0, \"ClinicNum\": 0, \"procCode\": \"D2331\" } Example Responses: { \"ProcNum\": 301, \"PatNum\": 29, \"AptNum\": 0, \"ProcDate\": \"2021-04-25\", \"ProcFee\": \"125.95\", \"Surf\": \"MO\", \"ToothNum\": \"4\", \"ToothRange\": \"\", \"Priority\": 148, \"priority\": \"Low\", \"ProcStatus\": \"TP\", \"ProvNum\": 1, \"provAbbr\": \"DOC 1\", \"Dx\": 126, \"dxName\": \"Cracked Tooth\", \"PlannedAptNum\": 0, \"ClinicNum\": \"0\", \"CodeNum\": 187, \"procCode\": \"D2331\", \"descript\": \"resin-based composite - two surfaces, anterior\", \"UnitQty\": 1, \"BaseUnits\": 0, \"DateTStamp\": \"\", \"serverDateTime\": \"\" } 400 BadRequest (Missing or invalid fields) 404 NotFound \"Patient not found\", \"Appointment not found\", \"procCode not found\", \"Priority not found\", \"Dx not found\" 201 Created Header \"location\": https://api.opendental.com/api/v1/procedurelogs/345","body":{"mode":"raw","raw":"{ \"PatNum\": 31, \"ProcDate\": \"2021-04-28\", \"ToothRange\": \"2,3, 13-15\", \"Priority\": 149, \"ProcStatus\": \"TP\", \"dxName\": \"Defect (or miss fill)\", \"procCode\": \"D1206\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/procedurelogs/GroupNote","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/procedurelogs/GroupNote","host":["{{url_local}}{{version_api}}"],"path":["/procedurelogs/GroupNote"],"query":null},"description":"ProcedureLogs POST GroupNote Version Added: 22.2 Creates a Group Note for a set of procedures. These procedures must have the same procdate, clinic, and provider. Any repeated ProcNums will be silently ignored. Some dental offices choose to include an aggregate of the individual procedures' notes into their Group Notes, with the new Note text appended. For more information about Group Notes see Procedure Group Note. To create a Note for a single procedure see API ProcNotes. PatNum: Required. ProcNums: Required. An array of ProcNums, in [1,2,3] format. Note: Required. The text for the Group Note. Example Request: POST /procedurelogs/GroupNote { \"PatNum\": 52, \"ProcNums\": [1470, 1472], \"Note\": \"Medical: no changes \\r\\nPt concerns: none\" } Example Responses: { \"PatNum\": 52, \"ProcNums\": [1470, 1472], \"Note\": \"Medical: no changes \\r\\nPt concerns: none\" } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PatNum\": 52, \"ProcNums\": [1470, 1472], \"Note\": \"Medical: no changes \\r\\nPt concerns: none\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/procedurelogs/InsuranceHistory","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/procedurelogs/InsuranceHistory","host":["{{url_local}}{{version_api}}"],"path":["/procedurelogs/InsuranceHistory"],"query":null},"description":"ProcedureLogs POST InsuranceHistory Version Added: 22.4.31 This functions similarly to entering a date in the Insurance History form for a single category. Creates a new Existing Other Provider (EO) procedure and Insurance History (InsHist) claimproc for a given patient. The new procedure will use the patient's default clinic, default provider, and the first alphanumeric procedure code in the category for the insHistPrefName. PatNum: Required. FK to patient.PatNum. InsSubNum: Required. FK to inssub.InsSubNum. insHistPrefName: Required. String. The PrefName of the Insurance History category. Either \"InsHistBWCodes\", \"InsHistPanoCodes\", \"InsHistExamCodes\", \"InsHistProphyCodes\", \"InsHistPerioURCodes\", \"InsHistPerioULCodes\", \"InsHistPerioLRCodes\", \"InsHistPerioLLCodes\", \"InsHistPerioMaintCodes\", or \"InsHistDebridementCodes\". Case sensitive. ProcDate: Required. String in \"yyyy-MM-dd\" format. The date the procedure was completed. Example Request: POST /procedurelogs/InsuranceHistory { \"PatNum\": 572, \"InsSubNum\": 49, \"insHistPrefName\": \"InsHistExamCodes\", \"ProcDate\": \"2023-01-23\" } Example Responses: { \"ProcNum\": 19087, \"PatNum\": 572, \"AptNum\": 0, \"ProcDate\": \"2023-01-23\", \"ProcFee\": \"0.00\", \"Surf\": \"\", \"ToothNum\": \"\", \"ToothRange\": \"\", \"Priority\": 0, \"priority\": \"\", \"ProcStatus\": \"EO\", \"ProvNum\": 1, \"provAbbr\": \"DOC1\", \"Dx\": 0, \"dxName\": \"\", \"PlannedAptNum\": 0, \"ClinicNum\": 3, \"CodeNum\": 2, \"procCode\": \"D0120\", \"descript\": \"periodic oral evaluation - established patient\", \"UnitQty\": 1, \"BaseUnits\": 0, \"DateTStamp\": \"0001-01-01 00:00:00\", \"serverDateTime\": \"\" } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PatNum\": 572, \"InsSubNum\": 49, \"insHistPrefName\": \"InsHistExamCodes\", \"ProcDate\": \"2023-01-23\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/procedurelogs/100","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/procedurelogs/100","host":["{{url_local}}{{version_api}}"],"path":["/procedurelogs/100"],"query":null},"description":"ProcedureLogs PUT (update) Version Added: 22.1 Updates an existing procedure. When changing procCode, the treatment area of the current and passed in procedure codes must match. Attempting to pass in empty strings for ToothNum, Surf, and ToothRange will be silently ignored. The procCode, ToothNum, Surf, and ToothRange fields cannot be updated on procedures with a ProcStatus of C. Procedure code default notes will not be used. ProcedureLogs associated with adjustments, appointments, claimprocs, payments, payplancharges, paysplits, are updated exactly as in Open Dental. ProcNum: Required in URL. AptNum: AptNum of the appointment to attach this procedure to. ProcDate: String in \"yyyy-MM-dd\" format. ProcFee: Procedure fee. Priority: Definition.DefNum where definition.Category=20. ProcStatus: Either Treatment Planned (TP), Complete (C), or Existing Other Provider (EO). ProvNum: ProvNum for a provider. Dx: Definition.DefNum where definition.Category=16. PlannedAptNum: AptNum of a planned appointment this procedure is attached to. ClinicNum: ClinicNum of a clinic. procCode: ProcCode of a procedurecode entry. If passed in, the treatment area must be the same as the current procCode's. ToothNum: Can only be updated if the treatment area of this procCode supports ToothNum. Surf: Can only be updated if the treatment area of this procCode supports Surf. ToothRange: Comma separated ToothNums and/or dash separated ranges of ToothNums. Can only be updated if the treatment area of this procCode supports ToothRange, whether the procCode's TreatArea is ToothRange or its 'AreaAlsoToothRange' field is true. Example Requests: PUT /procedurelogs/100 { \"AptNum\": \"1023\", \"ProcDate\": \"2022-04-25\", \"ProcFee\": \"250\", \"Priority\": \"153\", \"ProcStatus\": \"TP\", \"ProvNum\": \"2\", \"Dx\": \"139\", \"PlannedAptNum\": \"0\", \"ClinicNum\": \"2\", \"ToothNum\":\"14\", \"Surf\":\"MO\", \"ToothRange\": \"\" } { \"procCode\": \"D9972\", \"Surf\": \"L\", \"ToothRange\":\"31,30, 18-21\" } Example Responses: { \"ProcNum\": 179, \"PatNum\": 23, \"AptNum\": \"1023\", \"ProcDate\": \"2022-04-25\", \"ProcFee\": \"250.00\", \"Surf\": \"MO\", \"ToothNum\": \"14\", \"ToothRange\": \"\", \"Priority\": 153, \"priority\": \"3\", \"ProcStatus\": \"TP\", \"ProvNum\": 2, \"provAbbr\": \"HYG1\", \"Dx\": 139, \"dxName\": \"None\", \"PlannedAptNum\": \"0\", \"ClinicNum\": \"2\", \"CodeNum\": 193, \"procCode\": \"D2393\", \"descript\": \"resin-based composite - three surfaces, posterior\", \"UnitQty\": 1, \"BaseUnits\": 0, \"DateTStamp\": \"2022-04-26 13:44:55\", \"serverDateTime\": \"\" } 400 BadRequest (With explanation) 404 NotFound (With explanation) 200 OK","body":{"mode":"raw","raw":"{ \"AptNum\": \"1023\", \"ProcDate\": \"2022-04-25\", \"ProcFee\": \"250\", \"Priority\": \"153\", \"ProcStatus\": \"TP\", \"ProvNum\": \"2\", \"Dx\": \"139\", \"PlannedAptNum\": \"0\", \"ClinicNum\": \"2\", \"ToothNum\":\"14\", \"Surf\":\"MO\", \"ToothRange\": \"\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/procedurelogs/GroupNote","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/procedurelogs/GroupNote","host":["{{url_local}}{{version_api}}"],"path":["/procedurelogs/GroupNote"],"query":null},"description":"ProcedureLogs PUT GroupNote Version Added: 22.2.29 Updates a specific Group Note procedure for a given patient. For more information about Group Notes see Procedure Group Note. To update a Note for a single procedure see API ProcNotes. PatNum: Required. ProcNum: Required. Must be the ProcNum of a procedure with a procCode of \"~GRP~\". Note: Required. The text for the Group Note. Example Request: PUT /procedurelogs/GroupNote { \"PatNum\": 30, \"ProcNum\": 865, \"Note\": \"Dental exam\" } Example Responses: 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PatNum\": 30, \"ProcNum\": 865, \"Note\": \"Dental exam\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/procedurelogs/25","item":null,"description":null,"request":{"method":"DELETE","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/procedurelogs/25","host":["{{url_local}}{{version_api}}"],"path":["/procedurelogs/25"],"query":null},"description":"ProcedureLogs DELETE Version Added: 22.1 Deletes a procedure. Can only delete procedures with a ProcStatus of TP, TPi, or (added in version 23.1.11) C. Procedures cannot be deleted if they are attached to a claim, insurance payment, patient payment, adjustment, prescription, or payment plan. Also cannot delete a procedure if it has referrals attached, is linked to an ortho case, or if it's the last procedure from a preauthorization claim. ProcNum: Required in the URL. Example Request: DELETE /procedurelogs/25 Example Responses: 200 OK 400 BadRequest (With explanation) 404 NotFound \"Procedure not found.\"","body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/procedurelogs/144/GroupNote","item":null,"description":null,"request":{"method":"DELETE","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/procedurelogs/144/GroupNote","host":["{{url_local}}{{version_api}}"],"path":["/procedurelogs/144/GroupNote"],"query":null},"description":"ProcedureLogs DELETE GroupNote Version Added: 22.3.8 Deletes a GroupNote procedure. ProcNum: Required in the URL. Must be the ProcNum of a procedure with a procCode of \"~GRP~\". Example Request: DELETE /procedurelogs/144/GroupNote Example Responses: 200 OK 400 BadRequest (With explanation) 404 NotFound \"Procedure not found.\"","body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API ProcNotes","item":[{"name":"/procnotes","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/procnotes","host":["{{url_local}}{{version_api}}"],"path":["/procnotes"],"query":null},"description":"ProcNotes POST Version Added: 22.2 Creates a new note that is associated with a procedure. If the Procedure Note contains 50 or more consecutive blank lines, they will be removed. The new note will always replace the existing note. Every change is recorded with an archived note history, which can be viewed in the Chart Module under Show Tab > Audit. PatNum: Required. ProcNum: Required. ProcNum of the procedure. Note: Required. The actual note. An empty string will clear the note. Example Request: POST /procnotes { \"PatNum\": 74, \"ProcNum\": 868, \"Note\": \"Review med hx \\nPt chief complaint: Bleeding, swelling \\nDue Date: \\\"\\\"\\nBP taken: BP: 118 / 72 Pulse: 83 \\n Follow up\" } Example Response: { \"PatNum\": 74, \"ProcNum\": 868, \"Note\": \"Review med hx \\nPt chief complaint: Bleeding, swelling \\nDue Date: \\\"\\\"\\nBP taken: BP: 118 / 72 Pulse: 83 \\n Follow up \" } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PatNum\": 74, \"ProcNum\": 868, \"Note\": \"Review med hx \\nPt chief complaint: Bleeding, swelling \\nDue Date: \\\"\\\"\\nBP taken: BP: 118 / 72 Pulse: 83 \\n Follow up\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API ProcTPs","item":[{"name":"/proctps?TreatPlanNum=963","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/proctps?TreatPlanNum=963","host":["{{url_local}}{{version_api}}"],"path":["/proctps?TreatPlanNum=963"],"query":null},"description":"ProcTPs GET Version Added: 22.4.17 Get a list of ProcTPs by the TreatPlanNum. Before calling this method, use TreatPlans GET to find the TreatPlanNum of an existing TreatPlan. TreatPlanNum: Required. FK to TreatPlan.TreatPlanNum. Example Request: GET /proctps?TreatPlanNum=963 Example Response: [ { \"ProcTPNum\": 976, \"TreatPlanNum\": 963, \"PatNum\": 722, \"ProcNumOrig\": 1154, \"ItemOrder\": 0, \"Priority\": 0, \"priority\": \"\", \"ToothNumTP\": \"13\", \"Surf\": \"MOD\", \"ProcCode\": \"D2393\", \"Descript\": \"resin-based composite - three surfaces, posterior\", \"FeeAmt\": 204.0, \"PriInsAmt\": 80.0, \"SecInsAmt\": 0.0, \"PatAmt\": 70.0, \"Discount\": 54.0, \"Prognosis\": \"\", \"Dx\": \"\", \"ProcAbbr\": \"C3 (P)\", \"SecUserNumEntry\": 12, \"SecDateEntry\": \"2023-01-24\", \"SecDateTEdit\": \"2023-01-24 09:33:46\", \"FeeAllowed\": 0.0, \"TaxAmt\": 0.0, \"ProvNum\": 11, \"DateTP\": \"2022-12-19\", \"ClinicNum\": 3, \"CatPercUCR\": 204.0 }, { \"ProcTPNum\": 977, \"TreatPlanNum\": 963, \"PatNum\": 722, \"ProcNumOrig\": 1167, \"ItemOrder\": 1, \"Priority\": 0, \"priority\": \"\", \"ToothNumTP\": \"\", \"Surf\": \"\", \"ProcCode\": \"D0140\", \"Descript\": \"Limited Exam\", \"FeeAmt\": 57.0, \"PriInsAmt\": 57.0, \"SecInsAmt\": 0.0, \"PatAmt\": 0.0, \"Discount\": 0.0, \"Prognosis\": \"\", \"Dx\": \"\", \"ProcAbbr\": \"LimEx\", \"SecUserNumEntry\": 12, \"SecDateEntry\": \"2023-01-24\", \"SecDateTEdit\": \"2023-01-24 09:33:46\", \"FeeAllowed\": 0.0, \"TaxAmt\": 0.0, \"ProvNum\": 11, \"DateTP\": \"2022-12-19\", \"ClinicNum\": 3, \"CatPercUCR\": 57.0 } etc... ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"ProcTPNum\": 976, \"TreatPlanNum\": 963, \"PatNum\": 722, \"ProcNumOrig\": 1154, \"ItemOrder\": 0, \"Priority\": 0, \"priority\": \"\", \"ToothNumTP\": \"13\", \"Surf\": \"MOD\", \"ProcCode\": \"D2393\", \"Descript\": \"resin-based composite - three surfaces, posterior\", \"FeeAmt\": 204.0, \"PriInsAmt\": 80.0, \"SecInsAmt\": 0.0, \"PatAmt\": 70.0, \"Discount\": 54.0, \"Prognosis\": \"\", \"Dx\": \"\", \"ProcAbbr\": \"C3 (P)\", \"SecUserNumEntry\": 12, \"SecDateEntry\": \"2023-01-24\", \"SecDateTEdit\": \"2023-01-24 09:33:46\", \"FeeAllowed\": 0.0, \"TaxAmt\": 0.0, \"ProvNum\": 11, \"DateTP\": \"2022-12-19\", \"ClinicNum\": 3, \"CatPercUCR\": 204.0 }, { \"ProcTPNum\": 977, \"TreatPlanNum\": 963, \"PatNum\": 722, \"ProcNumOrig\": 1167, \"ItemOrder\": 1, \"Priority\": 0, \"priority\": \"\", \"ToothNumTP\": \"\", \"Surf\": \"\", \"ProcCode\": \"D0140\", \"Descript\": \"Limited Exam\", \"FeeAmt\": 57.0, \"PriInsAmt\": 57.0, \"SecInsAmt\": 0.0, \"PatAmt\": 0.0, \"Discount\": 0.0, \"Prognosis\": \"\", \"Dx\": \"\", \"ProcAbbr\": \"LimEx\", \"SecUserNumEntry\": 12, \"SecDateEntry\": \"2023-01-24\", \"SecDateTEdit\": \"2023-01-24 09:33:46\", \"FeeAllowed\": 0.0, \"TaxAmt\": 0.0, \"ProvNum\": 11, \"DateTP\": \"2022-12-19\", \"ClinicNum\": 3, \"CatPercUCR\": 57.0 } etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/proctps/293","item":null,"description":null,"request":{"method":"DELETE","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/proctps/293","host":["{{url_local}}{{version_api}}"],"path":["/proctps/293"],"query":null},"description":"ProcTPs DELETE Version Added: 23.3.10 Deletes a ProcTp. Only ProcTPs associated with an unsigned treatment plan can be deleted. ProcTPNum: Required in the URL. Example Request: DELETE /proctps/293 Example Responses: 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Providers","item":[{"name":"/providers","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/providers","host":["{{url_local}}{{version_api}}"],"path":["/providers"],"query":null},"description":"Providers GET Version Added: 21.1 Gets a list of all providers. Can be optionally filtered by either ClinicNum or DateTStamp. Two different queries are used. ClinicNum is not a field in the Provider table, so it does not get returned in any results. ClinicNum: Optional. Specifying a ClinicNum returns list of non-hidden providers that are either not restricted to a clinic, or are restricted to the ClinicNum provided. When using ClinicNum, a serverDateTime will not be returned. DateTStamp (added in version 21.3): Optional. String in \"yyyy-MM-dd HH:mm:ss\" format. Get providers altered after the specified date and time. This is a good way for you to keep a synchronized copy of providers. Store serverDateTime that gets returned, and use it to run the next GET. Example Requests: GET /providers GET /providers?DateTStamp=2021-08-01%2005%3A30%3A00 Example Response: [ { \"ProvNum\": 1, \"Abbr\": \"DOC1\", \"LName\": \"Albert\", \"FName\": \"Brian\", \"MI\": \"L\", \"Suffix\": \"\", \"FeeSched\": 53, \"Specialty\": 263, \"SSN\": \"1522864182\", \"StateLicense\": \"D7601\", \"IsSecondary\": \"false\", \"provColor\": \"164,255,164\", \"IsHidden\": \"false\", \"UsingTIN\": \"true\", \"NationalProvID\": \"1679608723\", \"DateTStamp\": \"2021-08-04 08:33:01\", \"IsNotPerson\": \"false\", \"ProvStatus\": \"Active\", \"IsHiddenReport\": \"false\", \"Birthdate\": \"0001-01-01\", \"SchedNote\": \"\", \"PreferredName\": \"\", \"serverDateTime\": \"2021-08-31 12:05:31\" }, { \"ProvNum\": 2, \"Abbr\": \"HYG1\", \"LName\": \"Jones\", \"FName\": \"Tina\", \"MI\": \"\", \"Suffix\": \"\", \"FeeSched\": 53, \"Specialty\": 264, \"SSN\": \"\", \"StateLicense\": \"D7601\", \"IsSecondary\": \"true\", \"provColor\": \"203,151,255\", \"IsHidden\": \"false\", \"UsingTIN\": \"false\", \"NationalProvID\": \"1657398425\", \"DateTStamp\": \"2021-08-15 13:18:51\", \"IsNotPerson\": \"false\", \"ProvStatus\": \"Deleted\", \"IsHiddenReport\": \"false\", \"Birthdate\": \"0001-01-01\", \"SchedNote\": \"\", \"PreferredName\": \"\", \"serverDateTime\": \"2021-08-31 12:05:31\" } ] Example Request: GET /providers?ClinicNum=4 Example Response: { \"ProvNum\": 6, \"Abbr\": \"HYG2\", \"LName\": \"Thomason\", \"FName\": \"Shirley\", \"MI\": \"\", \"Suffix\": \"\", \"FeeSched\": 53, \"Specialty\": 264, \"SSN\": \"\", \"StateLicense\": \"D7601\", \"IsSecondary\": \"true\", \"provColor\": \"255,183,183\", \"IsHidden\": \"false\", \"UsingTIN\": \"false\", \"NationalProvID\": \"1857495435\", \"DateTStamp\": \"2021-07-25 10:20:21\", \"IsNotPerson\": \"false\", \"ProvStatus\": \"Active\", \"IsHiddenReport\": \"false\", \"Birthdate\": \"1969-10-01\", \"SchedNote\": \"\", \"PreferredName\": \"\", \"serverDateTime\": \"\" } 200 OK 400 BadRequest \"DateTStamp format must be yyyy-MM-dd HH:mm:ss\" 404 NotFound \"Clinic not found\"","body":{"mode":"raw","raw":"[ { \"ProvNum\": 1, \"Abbr\": \"DOC1\", \"LName\": \"Albert\", \"FName\": \"Brian\", \"MI\": \"L\", \"Suffix\": \"\", \"FeeSched\": 53, \"Specialty\": 263, \"SSN\": \"1522864182\", \"StateLicense\": \"D7601\", \"IsSecondary\": \"false\", \"provColor\": \"164,255,164\", \"IsHidden\": \"false\", \"UsingTIN\": \"true\", \"NationalProvID\": \"1679608723\", \"DateTStamp\": \"2021-08-04 08:33:01\", \"IsNotPerson\": \"false\", \"ProvStatus\": \"Active\", \"IsHiddenReport\": \"false\", \"Birthdate\": \"0001-01-01\", \"SchedNote\": \"\", \"PreferredName\": \"\", \"serverDateTime\": \"2021-08-31 12:05:31\" }, { \"ProvNum\": 2, \"Abbr\": \"HYG1\", \"LName\": \"Jones\", \"FName\": \"Tina\", \"MI\": \"\", \"Suffix\": \"\", \"FeeSched\": 53, \"Specialty\": 264, \"SSN\": \"\", \"StateLicense\": \"D7601\", \"IsSecondary\": \"true\", \"provColor\": \"203,151,255\", \"IsHidden\": \"false\", \"UsingTIN\": \"false\", \"NationalProvID\": \"1657398425\", \"DateTStamp\": \"2021-08-15 13:18:51\", \"IsNotPerson\": \"false\", \"ProvStatus\": \"Deleted\", \"IsHiddenReport\": \"false\", \"Birthdate\": \"0001-01-01\", \"SchedNote\": \"\", \"PreferredName\": \"\", \"serverDateTime\": \"2021-08-31 12:05:31\" } ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/providers","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/providers","host":["{{url_local}}{{version_api}}"],"path":["/providers"],"query":null},"description":"Providers POST (create) Version Added: 21.4 Creates a new provider, billing entity, or dummy provider. After adding a provider, there's no way to delete it, not even from within Open Dental. The best you can do is to go into Open Dental and hide the provider. Abbr: Required. A short abbreviation that shows in various lists throughout Open Dental. LName: Optional. Last name. If billing as an entity, enter the billing entity name. FName: Optional. First name. MI: Optional. Middle initial. Suffix: Optional. MD, DMD, DDS, etc. FeeSched: Optional. Foreign key to feesched.FeeSchedNum. Default is the first in the Fee Schedule list. Specialty: Optional. Definition.DefNum where definition.Category=35. Default is the first in the Specialty list. SSN: Optional. Provider's SSN or TIN. Most offices will enter their TIN here. If SSN the TIN field must be set to \"false\". SSN/TIN is not allowed to have dashes. IsSecondary: Optional. True if provider is a hygienist. Default is false. IsHidden: Optional. If true, provider will be removed as a selection option in various areas of Open Dental. Default is false. UsingTIN: Optional. True if SSN field is storing TIN. Default is true. IsNotPerson: Optional. This is set to true if the provider is used as an entity or organization instead of a person. When set to true, FName and MI must be omitted. Default is false. IsHiddenReport: Optional. Determines whether the provider will show on standard reports. Default is false. BirthDate: Optional. Provider's birth date in \"yyyy-mm-dd\" format. SchedNote: Optional. Indicates if the provider should be scheduled in a certain way. PreferredName: Optional. The preferred name of the provider. This is displayed in the eClipboard. Example Request: POST /providers { \"Abbr\": \"DOCE\", \"LName\": \"Fisher\", \"FName\": \"Ethan\", \"Suffix\": \"DDS\", \"SSN\":\"123859778\", \"IsHiddenReport\": \"true\", \"Birthdate\": \"1987-07-17\", \"SchedNote\": \"Root canals only.\", \"PreferredName\": \"Doc E.\" } Example Response: { \"ProvNum\": 12, \"Abbr\": \"DOCE\", \"LName\": \"Fisher\", \"FName\": \"Ethan\", \"MI\": \"\", \"Suffix\": \"DDS\", \"FeeSched\": 53, \"Specialty\": 263, \"SSN\": \"123859778\", \"StateLicense\": \"D7601\", \"IsSecondary\": \"false\", \"provColor\": \"0,0,0\", \"IsHidden\": \"false\", \"UsingTIN\": \"true\", \"NationalProvID\": \"1857495435\", \"DateTStamp\": \"2021-08-04 08:33:01\", \"IsNotPerson\": \"false\", \"ProvStatus\": \"Active\", \"IsHiddenReport\": \"true\", \"Birthdate\": \"1987-07-17\", \"SchedNote\": \"Root canals only.\", \"PreferredName\": \"Doc E.\", \"serverDateTime\": \"\" } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"Abbr\": \"DOCE\", \"LName\": \"Fisher\", \"FName\": \"Ethan\", \"Suffix\": \"DDS\", \"SSN\":\"123859778\", \"IsHiddenReport\": \"true\", \"Birthdate\": \"1987-07-17\", \"SchedNote\": \"Root canals only.\", \"PreferredName\": \"Doc E.\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/providers/13","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/providers/13","host":["{{url_local}}{{version_api}}"],"path":["/providers/13"],"query":null},"description":"Providers PUT (update) Version Added: 22.1 All fields are optional. Abbr: The provider's abbreviation. Cannot be blank. FName: The provider's first name. LName: The provider's last name. MI: The provider's middle initial. Suffix: The provider's suffix (Jr., III, IV, etc...). PreferredName: The provider's preferred name. Specialty: The DefNum of the provider's specialty, where the definition category is 35. NationalProvId: The provider's national provider ID. StateLicense: The provider's state license number. SSN: Provider's SSN or TIN, no dashes. UsingTIN: True if SSN field is storing TIN. Valid values are \"true\" and \"false\". Example Request: PUT /providers/13 { \"Abbr\": \"DOC1\", \"FName\": \"Philip\", \"LName\": \"Sherman\", \"MI\": \"\", \"Suffix\": \"\", \"PreferredName\": \"Phil\", \"Specialty\": 264, \"NationalProvId\": \"1245319599\", \"StateLicense\": \"183815\", \"SSN\": \"123456789\", \"UsingTIN\": \"false\" } Example Response: { \"ProvNum\": 13, \"Abbr\": \"DOC1\", \"LName\": \"Sherman\", \"FName\": \"Philip\", \"MI\": \"\", \"Suffix\": \"\", \"FeeSched\": 53, \"Specialty\": 263, \"SSN\": \"123456789\", \"StateLicense\": \"D7601\", \"IsSecondary\": \"false\", \"provColor\": \"0,0,0\", \"IsHidden\": \"false\", \"UsingTIN\": \"false\", \"NationalProvID\": \"1245319599\", \"DateTStamp\": \"2021-08-04 08:33:01\", \"IsNotPerson\": \"false\", \"ProvStatus\": \"Active\", \"IsHiddenReport\": \"true\", \"Birthdate\": \"1987-07-17\", \"SchedNote\": \"Root canals only.\", \"PreferredName\": \"Phil\", \"serverDateTime\": \"\" } 200 OK 400 Bad Request (with explanation) 404 Not Found","body":{"mode":"raw","raw":"{ \"Abbr\": \"DOC1\", \"FName\": \"Philip\", \"LName\": \"Sherman\", \"MI\": \"\", \"Suffix\": \"\", \"PreferredName\": \"Phil\", \"Specialty\": 264, \"NationalProvId\": \"1245319599\", \"StateLicense\": \"183815\", \"SSN\": \"123456789\", \"UsingTIN\": \"false\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Queries","item":[{"name":"/queries","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/queries","host":["{{url_local}}{{version_api}}"],"path":["/queries"],"query":null},"description":"Queries POST Version Added: 21.1 Runs a custom query against the database. Queries are screened to be read-only. Temporary tables are allowed. Any command that would change the database will not be run. The Audit Trail for these requests includes the command that was run. Rarely, an office will insist on higher security for queries. There is a OpenDentalWebConfig.xml file in the eConnector installation folder. This config file has two tags that are normally empty: <UserLow> and <PasswordLow>. You can set up a different MySQL that has more restrictive permissions than the MySQL user used for all the other API methods. Once this MySQL user is set up, enter their username and password into <UserLow> and <PasswordLow>, and that user will be used here for queries. If those tags are blank, then the regular MySQL user will be used. Don't remove those tags, or the eConnector won't start. The results of the query are written to a file and saved to the SFTP site specified in the JSON. SftpPort is optional with port 22 used by default. The SftpAddress string must contain the full filePath. The user with the SFTP credentials must have write permission in this directory. Directory will be created if it does not exist, and files already existing with the specified name will be overwritten. Query results are written in comma-delimited CSV format. If there are no results, then the file will only contain \"OK\". Example Requests: POST /queries { \"SqlCommand\": \"SELECT PatPlanNum, PatNum, InsSubNum FROM patplan\", \"SftpAddress\": \"MySftpSite/myUsername/Patient Plans/PatPlans-35.csv\", \"SftpPort\": 25, \"SftpUsername\": \"myUsername\", \"SftpPassword\": \"myPassword\" } { \"SqlCommand\": \" SELECT * FROM patient WHERE Birthdate LIKE '%-06-22' \", \"SftpAddress\": \"MySftpSite/myUsername/Birthdays/Jun22.csv\", \"SftpUsername\": \"myUsername\", \"SftpPassword\": \"myPassword\" } { \"SqlCommand\": \"SELECT * FROM InsSub WHERE DateTerm < '2021-01-01'\", \"SftpAddress\": \"MySftpSite/myUsername/Insurance Subscriptions/Expired2021.csv\", \"SftpUsername\": \"myUsername\", \"SftpPassword\": \"myPassword\" } Example Response: 201 Created 400 BadRequest (SQL syntax and Sftp connection errors) 401 Unauthorized (Query is not read-only or is not executing on temporary tables)","body":{"mode":"raw","raw":"{ \"SqlCommand\": \"SELECT PatPlanNum, PatNum, InsSubNum FROM patplan\", \"SftpAddress\": \"MySftpSite/myUsername/Patient Plans/PatPlans-35.csv\", \"SftpPort\": 25, \"SftpUsername\": \"myUsername\", \"SftpPassword\": \"myPassword\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/queries/ShortQuery","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/queries/ShortQuery","host":["{{url_local}}{{version_api}}"],"path":["/queries/ShortQuery"],"query":null},"description":"Queries PUT ShortQuery Version Added: 21.2 Runs a custom query against the database, returning at most 100 rows. Queries are screened to be read-only. Temporary tables are allowed. Any command that would change the database will not be run. See Queries Post, above, for an explanation of the completely optional restricted MySQL UserLow. The Audit Trail for these requests includes the command that was run. The results of the query are returned as a datatable in the JSON. While pagination is supported for results that return over 100 rows, it is recommended to instead use Queries POST for longer results. Example Requests: PUT /queries/ShortQuery PUT /queries/ShortQuery?Offset=200 { \"SqlCommand\": \"SELECT clinic.Description, COUNT(*) AS NumberOfPatients FROM patient,clinic WHERE patient.ClinicNum=clinic.ClinicNum GROUP BY clinic.ClinicNum\" } { \"SqlCommand\": \"SELECT * FROM payperiod\" } Example Responses: [ { \"PayPeriodNum\": 200, \"DateStart\": \"2021-05-01T00:00:00\", \"DateStop\": \"2021-05-31T00:00:00\", \"DatePaycheck\": \"2021-06-04T00:00:00\" }, { \"PayPeriodNum\": 201, \"DateStart\": \"2021-06-01T00:00:00\", \"DateStop\": \"2021-06-30T00:00:00\", \"DatePaycheck\": \"2021-07-05T00:00:00\" } ] 200 OK 400 BadRequest (SQL syntax errors) 401 Unauthorized (Query is not read-only or is not executing on temporary tables)","body":{"mode":"raw","raw":"{ \"SqlCommand\": \"SELECT clinic.Description, COUNT(*) AS NumberOfPatients FROM patient,clinic WHERE patient.ClinicNum=clinic.ClinicNum GROUP BY clinic.ClinicNum\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API QuickPasteCats","item":[{"name":"/quickpastecats/2","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/quickpastecats/2","host":["{{url_local}}{{version_api}}"],"path":["/quickpastecats/2"],"query":null},"description":"QuickPasteCats GET (single) Version Added: 22.3.26 Gets a QuickPasteCat corresponding to a passed in QuickPasteCatNum. Example Request: GET /quickpastecats/2 Example Response: { \"QuickPasteCatNum\": 2, \"Description\": \"Medical Summary\", \"ItemOrder\": 1, \"DefaultForTypes\": \"MedicalSummary\" } 200 OK 404 NotFound","body":{"mode":"raw","raw":"{ \"QuickPasteCatNum\": 2, \"Description\": \"Medical Summary\", \"ItemOrder\": 1, \"DefaultForTypes\": \"MedicalSummary\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/quickpastecats","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/quickpastecats","host":["{{url_local}}{{version_api}}"],"path":["/quickpastecats"],"query":null},"description":"QuickPasteCats GET (multiple) Version Added: 22.3.26 Gets a list of QuickPasteCats. Example Request: GET /quickpastecats GET /quickpastecats?Limit=20&Offset=50 Example Response: [ { \"QuickPasteCatNum\": 1, \"Description\": \"Medical Urgent\", \"ItemOrder\": 0, \"DefaultForTypes\": \"\" }, { \"QuickPasteCatNum\": 2, \"Description\": \"Medical Summary\", \"ItemOrder\": 1, \"DefaultForTypes\": \"MedicalSummary\" }, { \"QuickPasteCatNum\": 3, \"Description\": \"Notes\", \"ItemOrder\": 2, \"DefaultForTypes\": \"ServiceNotes,PatAddressNote,FinancialNotes,AutoNote\" }, etc... ] 200 OK 400 BadRequest","body":{"mode":"raw","raw":"[ { \"QuickPasteCatNum\": 1, \"Description\": \"Medical Urgent\", \"ItemOrder\": 0, \"DefaultForTypes\": \"\" }, { \"QuickPasteCatNum\": 2, \"Description\": \"Medical Summary\", \"ItemOrder\": 1, \"DefaultForTypes\": \"MedicalSummary\" }, { \"QuickPasteCatNum\": 3, \"Description\": \"Notes\", \"ItemOrder\": 2, \"DefaultForTypes\": \"ServiceNotes,PatAddressNote,FinancialNotes,AutoNote\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API QuickPasteNotes","item":[{"name":"/quickpastenotes/25","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/quickpastenotes/25","host":["{{url_local}}{{version_api}}"],"path":["/quickpastenotes/25"],"query":null},"description":"QuickPasteNotes GET (single) Version Added: 22.3.24 Gets the QuickPasteNote corresponding to a passed in QuickPasteNoteNum. Example Request: GET /quickpastenotes/25 Example Response: { \"QuickPasteNoteNum\": 25, \"QuickPasteCatNum\": 3, \"ItemOrder\": 0, \"Note\": \"Patient called to cancel upcoming appointment on DATE.\", \"Abbreviation\": \"cancel\" } 200 OK 404 NotFound \"QuickPasteNote not found.\"","body":{"mode":"raw","raw":"{ \"QuickPasteNoteNum\": 25, \"QuickPasteCatNum\": 3, \"ItemOrder\": 0, \"Note\": \"Patient called to cancel upcoming appointment on DATE.\", \"Abbreviation\": \"cancel\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/quickpastenotes","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/quickpastenotes","host":["{{url_local}}{{version_api}}"],"path":["/quickpastenotes"],"query":null},"description":"QuickPasteNotes GET (multiple) Version Added: 22.3.24 Gets a list of QuickPasteNotes. Parameters: QuickPasteCatNum: Optional. FK to quickpastecat.QuickPasteCatNum. Example Requests: GET /quickpastenotes GET /quickpastenotes?QuickPasteCatNum=3 Example Response: [ { \"QuickPasteNoteNum\": 25, \"QuickPasteCatNum\": 3, \"ItemOrder\": 0, \"Note\": \"Patient called to cancel upcoming appointment on DATE.\", \"Abbreviation\": \"cancel\" }, { \"QuickPasteNoteNum\": 26, \"QuickPasteCatNum\": 3, \"ItemOrder\": 1, \"Note\": \"Called patient to discuss:\", \"Abbreviation\": \"call\" }, { \"QuickPasteNoteNum\": 27, \"QuickPasteCatNum\": 3, \"ItemOrder\": 2, \"Note\": \"Scanned insurance card into Imaging Module. Insurance entered into Family Module.\", \"Abbreviation\": \"ins\" }, etc... ] 200 OK","body":{"mode":"raw","raw":"[ { \"QuickPasteNoteNum\": 25, \"QuickPasteCatNum\": 3, \"ItemOrder\": 0, \"Note\": \"Patient called to cancel upcoming appointment on DATE.\", \"Abbreviation\": \"cancel\" }, { \"QuickPasteNoteNum\": 26, \"QuickPasteCatNum\": 3, \"ItemOrder\": 1, \"Note\": \"Called patient to discuss:\", \"Abbreviation\": \"call\" }, { \"QuickPasteNoteNum\": 27, \"QuickPasteCatNum\": 3, \"ItemOrder\": 2, \"Note\": \"Scanned insurance card into Imaging Module. Insurance entered into Family Module.\", \"Abbreviation\": \"ins\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Recalls","item":[{"name":"/recalls","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/recalls","host":["{{url_local}}{{version_api}}"],"path":["/recalls"],"query":null},"description":"Recalls GET Version Added: 22.4.40 Gets a list of recalls. Parameter: PatNum: Optional. Example Requests: GET /recalls GET /recalls?PatNum=38 Example Response: [ { \"RecallNum\": 40, \"PatNum\": 38, \"DateDue\": \"2022-09-09\", \"DatePrevious\": \"0001-01-01\", \"RecallInterval\": \"6m1d\", \"RecallStatus\": 142, \"recallStatus\": \"Mailed Postcard\", \"Note\": \"\", \"IsDisabled\": \"false\", \"DateTStamp\": \"2021-07-21 10:05:47\", \"RecallTypeNum\": 6, \"DisableUntilBalance\": 0.0, \"DisableUntilDate\": \"0001-01-01\", \"DateScheduled\": \"0001-01-01\", \"Priority\": \"Normal\", \"TimePatternOverride\": \"\" }, etc... ] 200 OK 400 BadRequest 404 NotFound","body":{"mode":"raw","raw":"[ { \"RecallNum\": 40, \"PatNum\": 38, \"DateDue\": \"2022-09-09\", \"DatePrevious\": \"0001-01-01\", \"RecallInterval\": \"6m1d\", \"RecallStatus\": 142, \"recallStatus\": \"Mailed Postcard\", \"Note\": \"\", \"IsDisabled\": \"false\", \"DateTStamp\": \"2021-07-21 10:05:47\", \"RecallTypeNum\": 6, \"DisableUntilBalance\": 0.0, \"DisableUntilDate\": \"0001-01-01\", \"DateScheduled\": \"0001-01-01\", \"Priority\": \"Normal\", \"TimePatternOverride\": \"\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/recalls/List?Offset=200","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/recalls/List?Offset=200","host":["{{url_local}}{{version_api}}"],"path":["/recalls/List?Offset=200"],"query":null},"description":"Recalls GET List Version Added: 22.1 Gets the Recall List similar to how it's shown in the Appointment Module when you click on Lists and select Recalls. RecallType selection is dependant upon Recall Setup. RecallTypes are stored in CSV format in the RecallTypesShowingInList preference. That preference stores the primary keys from the RecallType table. This information can be retrieved using GET preferences?PrefName=RecallTypesShowingInList. URL Search Parameters: DateStart: Due date range. String in \"yyyy-mm-dd\" format. Default is based on RecallDaysPast preference. DateEnd: Due date range. String in \"yyyy-mm-dd\" format. Default is based on RecallDaysFuture preference. ProvNum: Provider. Default is all providers. Will consider PriProv and SecProv. ClinicNum: Clinic. Default is all clinics. Use 0 for \"Unassigned\". RecallType: Typically either \"Prophy\" or \"Perio\". Default is all RecallTypes stored in the preference. IncludeReminded: Show patients that have already received reminders. Either \"true\" or \"false\". Default is false. Returned fields are detailed below: DueDate: The date the recall is due. Based off previously completed recall procedures or insurance history. If blank, the patient has never had a recall procedure set complete. PatNum: Patient.PatNum. Patient: Patient's name. Last, First. Age: Patient's Age. Type: RecallType due. Interval: The length of time between each recall appointment for the recall type. NumRemind: The number of reminders sent since the patient's last recall appointment. LastRemind: The date the last reminder was sent. Contact: The patient's Preferred Recall Method. Status: Recall communication about a patient's unscheduled recall appointment. Example \"Left Msg\". ClinicNum: ClinicNum of clinic patient is assigned to. Will be 0 if not using Clinics. Note: Administrative note. Example Request: GET /recalls/List?Offset=200 GET /recalls/List?IncludeReminded=true Example Response: [ { \"DueDate\": \"3/16/2022\", \"PatNum\": 15, \"Patient\": \"Strickler, Trent\", \"Age\": \"38\", \"Type\": \"Pano\", \"Interval\": \"6m1d\", \"NumRemind\": \"\", \"LastRemind\": \"\", \"Contact\": \"Text:(541)555-1234\", \"Status\": \"\", \"ClinicNum\": 5, \"Note\": \"\" }, { \"DueDate\": \"1/10/2022\", \"PatNum\": 42, \"Patient\": \"Lehrer, 'Andy' Tom\", \"Age\": \"29\", \"Type\": \"Exam\", \"Interval\": \"6m1d\", \"NumRemind\": \"1\", \"LastRemind\": \"11/4/2021\", \"Contact\": \"meandu@earth.com\", \"Status\": \"\", \"ClinicNum\": 4, \"Note\": \"\" }, etc... ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"DueDate\": \"3/16/2022\", \"PatNum\": 15, \"Patient\": \"Strickler, Trent\", \"Age\": \"38\", \"Type\": \"Pano\", \"Interval\": \"6m1d\", \"NumRemind\": \"\", \"LastRemind\": \"\", \"Contact\": \"Text:(541)555-1234\", \"Status\": \"\", \"ClinicNum\": 5, \"Note\": \"\" }, { \"DueDate\": \"1/10/2022\", \"PatNum\": 42, \"Patient\": \"Lehrer, 'Andy' Tom\", \"Age\": \"29\", \"Type\": \"Exam\", \"Interval\": \"6m1d\", \"NumRemind\": \"1\", \"LastRemind\": \"11/4/2021\", \"Contact\": \"meandu@earth.com\", \"Status\": \"\", \"ClinicNum\": 4, \"Note\": \"\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/recalls/Status","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/recalls/Status","host":["{{url_local}}{{version_api}}"],"path":["/recalls/Status"],"query":null},"description":"Recalls PUT Status Version Added: 21.2 Updates the RecallStatus on a patient's recall. This status describes the recall reminder itself, and not the status of the resulting appointment. To instead change an appointment's status, use Appointments PUT Confirm. A commlog for the patient is also created with CommType.Recall, Mode_.None, and note with \"Recall reminder\" and the new RecallStatus. PatNum: Required. recallType: Required. Typically either \"Prophy\" or \"Perio\". RecallType is dependent upon Recall Setup and Recall Types. RecallStatus: Optional. Any definition.DefNum where Definition.Category=13. Use 0 set status to \"None\". commlogMode: Optional. Either \"None\", \"Email\", \"Mail\", \"Phone\", \"InPerson\", \"Text\", \"EmailAndText\", or \"PhoneAndText\". commlogNote: Optional. This text will be used instead of the default commlog.Note. Example Requests: PUT /recalls/Status { \"PatNum\": 71, \"recallType\": \"Prophy\", \"RecallStatus\": 312, \"commlogMode\": \"Phone\", \"commlogNote\": \"Patient out of town until 08/30/2021.\" } { \"PatNum\": 46, \"recallType\": \"Perio\" } Example Response: 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PatNum\": 71, \"recallType\": \"Prophy\", \"RecallStatus\": 312, \"commlogMode\": \"Phone\", \"commlogNote\": \"Patient out of town until 08/30/2021.\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/recalls/SwitchType","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/recalls/SwitchType","host":["{{url_local}}{{version_api}}"],"path":["/recalls/SwitchType"],"query":null},"description":"Recalls PUT SwitchType Version Added: 22.4.41 Switches a Recall's type similiar to clicking the 'Set Perio' or 'Set Prophy' button found in the Recalls for Patient window. If a patient has a Prophy type recall, it will be set to Perio. If a patient has a Perio type recall, it will be set to Prophy. PatNum: Required. Example Request: PUT /recalls/SwitchType { \"PatNum\": 38 } Example Response: 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PatNum\": 38 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API RefAttaches","item":[{"name":"/refattaches","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/refattaches","host":["{{url_local}}{{version_api}}"],"path":["/refattaches"],"query":null},"description":"RefAttaches GET Version Added: 22.4.27 Gets a list of refattaches. Parameters: PatNum: Optional. Filter responses by PatNum. Example Requests: GET /refattaches GET /refattaches?PatNum=25 Example Response: [ { \"RefAttachNum\": 1, \"ReferralNum\": 3, \"referralName\": \"Steve N Stevens, DDS\", \"PatNum\": 25, \"RefDate\": \"2022-01-05\", \"ReferralType\": \"RefFrom\", \"RefToStatus\": \"None\", \"Note\": \"\", \"ProcNum\": 0, \"DateProcComplete\": \"0001-01-01\", \"ProvNum\": 0, \"DateTStamp\": \"2022-01-05 10:13:12\" }, etc... ] 200 OK 400 BadRequest \"Patient has been deleted\". 404 NotFound \"Patient not found\".","body":{"mode":"raw","raw":"[ { \"RefAttachNum\": 1, \"ReferralNum\": 3, \"referralName\": \"Steve N Stevens, DDS\", \"PatNum\": 25, \"RefDate\": \"2022-01-05\", \"ReferralType\": \"RefFrom\", \"RefToStatus\": \"None\", \"Note\": \"\", \"ProcNum\": 0, \"DateProcComplete\": \"0001-01-01\", \"ProvNum\": 0, \"DateTStamp\": \"2022-01-05 10:13:12\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/refattaches","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/refattaches","host":["{{url_local}}{{version_api}}"],"path":["/refattaches"],"query":null},"description":"RefAttaches POST Version Added: 21.2 Attaches a patient to a referral source. The referral source must be specified by either ReferralNum or referralName. Before calling this method, use Referrals GET to find the ReferralNum of an existing referral source. Alternatively, specify a referralName to search the LName of existing referrals for an exact match. If a match is not found, a new referral with that name is created and used. ProcNum, DateProcComplete, and ProvNum cannot be changed. PatNum: Required. ReferralNum: This or referralName is required. referralName: This or ReferralNum is required. RefDate: Optional. ReferralType: Optional. Either \"RefTo\", \"RefFrom\", or \"RefCustom\". Default \"RefFrom\". RefToStatus: Optional. Typically only used with outgoing referrals. Either \"None\", \"Declined\", \"Scheduled\", \"Consulted\", \"InTreatment\", or \"Complete\". Default \"None\". Note: Optional. Example Requests: POST /refattaches { \"PatNum\": 50, \"ReferralNum\": 2 } { \"PatNum\": 50, \"ReferralNum\": 2, \"ReferralType\": \"RefTo\", \"RefToStatus\": \"InTreatment\", \"Note\": \"08/12 - Dr. Bokish called to confirm this is still in progress.\", \"RefDate\": \"2021-07-28\" } { \"PatNum\": 50, \"referralName\": \"Google\" } Example Response: 201 Created 400 BadRequest \"Referral is already attached to this patient\" or Invalid Fields 404 NotFound \"Patient not found\" or \"Referral not found\".","body":{"mode":"raw","raw":"{ \"PatNum\": 50, \"ReferralNum\": 2 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Referrals","item":[{"name":"/referrals","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/referrals","host":["{{url_local}}{{version_api}}"],"path":["/referrals"],"query":null},"description":"Referrals GET Version Added: 21.4 Gets a list of all referral sources. These can be either a Provider, Patient, or non-patient. The description of non-patient sources is stored in the LName field. Example Request: GET /referrals GET /referrals?Offset=200 Example Response: [ { \"ReferralNum\": 1, \"LName\": \"Davidson\", \"FName\": \"Norm\", \"MName\": \"\", \"Specialty\": 465, \"specialty\": \"Endodontics\", \"Note\": \"\", \"NotPerson\": \"false\", \"Title\": \"DMD\", \"PatNum\": 0, \"IsDoctor\": \"true\", \"isPatient\": \"false\" }, { \"ReferralNum\": 2, \"LName\": \"Facebook Ad\", \"FName\": \"\", \"MName\": \"\", \"Specialty\": 0, \"specialty\": \"\", \"Note\": \"Ad active from 06/01/2021 to 09/01/2021\", \"NotPerson\": \"true\", \"Title\": \"\", \"PatNum\": 0, \"IsDoctor\": \"false\", \"isPatient\": \"false\" }, { \"ReferralNum\": 3, \"LName\": \"Beringer\", \"FName\": \"Debbie\", \"MName\": \"L\", \"Specialty\": 0, \"specialty\": \"\", \"Note\": \"\", \"NotPerson\": \"false\", \"Title\": \"\", \"PatNum\": 435, \"IsDoctor\": \"false\", \"isPatient\": \"true\" }, etc... ] 200 OK","body":{"mode":"raw","raw":"[ { \"ReferralNum\": 1, \"LName\": \"Davidson\", \"FName\": \"Norm\", \"MName\": \"\", \"Specialty\": 465, \"specialty\": \"Endodontics\", \"Note\": \"\", \"NotPerson\": \"false\", \"Title\": \"DMD\", \"PatNum\": 0, \"IsDoctor\": \"true\", \"isPatient\": \"false\" }, { \"ReferralNum\": 2, \"LName\": \"Facebook Ad\", \"FName\": \"\", \"MName\": \"\", \"Specialty\": 0, \"specialty\": \"\", \"Note\": \"Ad active from 06/01/2021 to 09/01/2021\", \"NotPerson\": \"true\", \"Title\": \"\", \"PatNum\": 0, \"IsDoctor\": \"false\", \"isPatient\": \"false\" }, { \"ReferralNum\": 3, \"LName\": \"Beringer\", \"FName\": \"Debbie\", \"MName\": \"L\", \"Specialty\": 0, \"specialty\": \"\", \"Note\": \"\", \"NotPerson\": \"false\", \"Title\": \"\", \"PatNum\": 435, \"IsDoctor\": \"false\", \"isPatient\": \"true\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/referrals","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/referrals","host":["{{url_local}}{{version_api}}"],"path":["/referrals"],"query":null},"description":"Referrals POST (create) Version Added: 22.3 Creates a new Referral. Referrals can be for Patients (provide PatNum), Providers (provide specialty) or Non Persons (provide neither PatNum or specialty). In the last case, isPatient and IsDoctor will be set false automatically while NotPerson will be set to true. If you wish to create an associated RefAttach please see RefAttaches POST. Users cannot set the following fields: IsDoctor, isPatient and NotPerson. LName: Required. The last name of a Referral source or Referral source description. FName: Optional. The Referral source's first name. MName: Optional. The Referral source's middle name or initial. Title: Optional. The Referral source's title. Specialty: Optional. definition.DefNum where definition.Category=35 (ProviderSpecialty). If this is set, IsDoctor is automatically set to true, while isPatient and NotPerson are set to false. specialty: Optional. Only set this if the Referral source is a Provider. This is a definition.ItemName where the DefCat is ProviderSpecialty(35). If this is set, IsDoctor is automatically set to true, isPatient and NotPerson are set to false. Note: Optional. PatNum: Optional. Only set this if the Referral source is a Patient. The provided LName must match the Patient for whom the PatNum is given. This automatically sets FName, MName and Title based on the given Patient if they were not provided by the user. If this is set, isPatient is automatically set to true, IsDoctor and NotPerson are set to false. Example Request: POST /referrals { \"LName\": \"Yellow Pages\" } { \"LName\": \"Smith\", \"FName\": \"James\", \"PatNum\": 435 } { \"LName\": \"Smith\", \"FName\": \"John\", \"specialty\": \"Surgery\" } Example Response: { \"ReferralNum\": 314, \"LName\": \"Smith\", \"FName\": \"James\", \"MName\": \"\", \"Specialty\": 0, \"specialty\": \"\", \"Note\": \"\", \"NotPerson\": \"false\", \"Title\": \"Mr\", \"PatNum\": 435, \"IsDoctor\": \"false\", \"isPatient\": \"true\" } 201 Created 400 BadRequest (Missing or Invalid fields) 404 NotFound \"Patient not found\"","body":{"mode":"raw","raw":"{ \"LName\": \"Yellow Pages\" } { \"LName\": \"Smith\", \"FName\": \"James\", \"PatNum\": 435 } { \"LName\": \"Smith\", \"FName\": \"John\", \"specialty\": \"Surgery\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/referrals/325","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/referrals/325","host":["{{url_local}}{{version_api}}"],"path":["/referrals/325"],"query":null},"description":"Referrals PUT (update) Version Added: 22.4.24 Updates an existing Referral. Referrals for a patient can only have the Note field modified. Note will overwrite any existing note. LName: Optional. The last name of a Referral source or Referral source description. FName: Optional. The Referral source's first name. MName: Optional. The Referral source's middle name or initial. Title: Optional. The Referral source's title. Specialty: Optional. definition.DefNum where definition.Category=35 (ProviderSpecialty). If this is set, IsDoctor is automatically set to true, while isPatient and NotPerson are set to false. Use 0 to indicate None. Note: Optional. Example Requests: PUT /referrals/325 { \"Note\": \"Referral credit added to account on 08/21/2022\" } or { \"LName\": \"Smithers\", \"FName\": \"Jonathan\", \"MName\": \"C\", \"Title\": \"DDS\", \"Specialty\": 272, \"Note\": \"Out on Thursdays\" } Example Response: { \"ReferralNum\": 325, \"LName\": \"Smithers\", \"FName\": \"Jonathan\", \"MName\": \"C\", \"Specialty\": 272, \"specialty\": \"Surgery\", \"Note\": \"Out on Thursdays\", \"NotPerson\": \"false\", \"Title\": \"DDS\", \"PatNum\": 0, \"IsDoctor\": \"true\", \"isPatient\": \"false\" } 200 OK 400 BadRequest (Missing or Invalid fields) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"Note\": \"Referral credit added to account on 08/21/2022\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Reports","item":[{"name":"/reports/Aging","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/reports/Aging","host":["{{url_local}}{{version_api}}"],"path":["/reports/Aging"],"query":null},"description":"Reports GET Aging Version Added: 21.4 Gets the Aging Report for all patients. DateAsOf: Optional. Defaults to today's date. Gets the aging as of the passed in date. Must be in yyyy-MM-dd format. ClinicNum: (Added in version 22.2) Optional. Gets aging for account entries on a specific clinic. Not specifying ClinicNum will get aging for all clinics, if enabled. Returned fields are detailed below: PatNum: The PatNum of the guarantor. patName: The guarantor's first and last name. Bal_0_30: The balance that is up to 30 days past due. Bal_31_60: The balance that is 31-60 days past due. Bal_61_90: The balance that is 61-90 days past due. BalOver90: The balance that is greater than 90 days past due. BalTotal: The total amount owed by the family before insurance. InsWoEst: The insurance write-off estimate amount based on procedures attached to the claim. InsPayEst: The total estimated insurance payment amount. PatientPortion: BalTotal - InsPayEst - InsWoEst. Example Requests: GET /reports/Aging GET /reports/Aging?DateAsOf=2020-07-30&ClinicNum=5 GET /reports/Aging?Offset=200 Example Response: [ { \"PatNum\": 11, \"patName\": \"Allowed, Allen \", \"Bal_0_30\": 0, \"Bal_31_60\": 0, \"Bal_61_90\": 0, \"BalOver90\": 370, \"BalTotal\": 370, \"InsWoEst\": 0, \"InsPayEst\": 265, \"PatientPortion\": 105 }, { \"PatNum\": 13, \"patName\": \"Copay, Candi \", \"Bal_0_30\": 0, \"Bal_31_60\": 0, \"Bal_61_90\": 0, \"BalOver90\": 140, \"BalTotal\": 140, \"InsWoEst\": 30, \"InsPayEst\": 35, \"PatientPortion\": 75 }, etc... ]","body":{"mode":"raw","raw":"[ { \"PatNum\": 11, \"patName\": \"Allowed, Allen \", \"Bal_0_30\": 0, \"Bal_31_60\": 0, \"Bal_61_90\": 0, \"BalOver90\": 370, \"BalTotal\": 370, \"InsWoEst\": 0, \"InsPayEst\": 265, \"PatientPortion\": 105 }, { \"PatNum\": 13, \"patName\": \"Copay, Candi \", \"Bal_0_30\": 0, \"Bal_31_60\": 0, \"Bal_61_90\": 0, \"BalOver90\": 140, \"BalTotal\": 140, \"InsWoEst\": 30, \"InsPayEst\": 35, \"PatientPortion\": 75 }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/reports/FinanceCharges","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/reports/FinanceCharges","host":["{{url_local}}{{version_api}}"],"path":["/reports/FinanceCharges"],"query":null},"description":"Reports GET FinanceCharges Version Added: 22.2.32 Gets the Finance Charge Report for passed in parameters. DateFrom: Optional. Defaults to today's date. Must be in yyyy-MM-dd format. DateTo: Optional. Defaults to today's date. Must be in yyyy-MM-dd format. ProvNums: Optional. Array of ProvNums. Default all providers. BillingTypes: Optional. Array of DefNums for definitions where definition.Category=4. Default all billing types. Returned fields are detailed below: PatNum: The PatNum of the patient. PatName: The patient's first and last name. Preferred: The patient's preferred name. AdjAmt: The amount of the adjustment. Example Requests: GET /reports/FinanceCharges GET /reports/FinanceCharges?DateFrom=2022-08-22&DateTo=2022-09-02&ProvNums=[2,3]&BillingTypes=[40] GET /reports/FinanceCharges?ProvNums=2,3,4 Example Response: [ { \"PatNum\": 11, \"PatName\": \"Allowed, Allen \", \"Preferred\": \"\", \"AdjAmt\": 3.08 }, { \"PatNum\": 13, \"PatName\": \"Copay, Candice \", \"Preferred\": \"Candi\", \"AdjAmt\": 1.17 }, { \"PatNum\": 25, \"PatName\": \"Jones, Mary Sue \", \"Preferred\": \"\", \"AdjAmt\": 16.05 }, etc... ]","body":{"mode":"raw","raw":"[ { \"PatNum\": 11, \"PatName\": \"Allowed, Allen \", \"Preferred\": \"\", \"AdjAmt\": 3.08 }, { \"PatNum\": 13, \"PatName\": \"Copay, Candice \", \"Preferred\": \"Candi\", \"AdjAmt\": 1.17 }, { \"PatNum\": 25, \"PatName\": \"Jones, Mary Sue \", \"Preferred\": \"\", \"AdjAmt\": 16.05 }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API ScheduleOps","item":[{"name":"/scheduleops","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/scheduleops","host":["{{url_local}}{{version_api}}"],"path":["/scheduleops"],"query":null},"description":"ScheduleOps GET Version Added: 23.2.27 Gets a list of scheduleops optionally filtered by either ScheduleNum or OperatoryNum. Parameters: All optional. ScheduleNum: FK to schedule.ScheduleNum. OperatoryNum: FK to operatory.OperatoryNum. Example Requests: GET /scheduleops GET /scheduleops?ScheduleNum=1093 GET /scheduleops?OperatoryNum=14 Example Response: [ { \"ScheduleOpNum\": 156, \"ScheduleNum\": 1092, \"OperatoryNum\": 12 }, { \"ScheduleOpNum\": 157, \"ScheduleNum\": 1092, \"OperatoryNum\": 13 }, { \"ScheduleOpNum\": 158, \"ScheduleNum\": 1092, \"OperatoryNum\": 14 }, { \"ScheduleOpNum\": 159, \"ScheduleNum\": 1093, \"OperatoryNum\": 12 }, { \"ScheduleOpNum\": 160, \"ScheduleNum\": 1093, \"OperatoryNum\": 13 }, { \"ScheduleOpNum\": 161, \"ScheduleNum\": 1093, \"OperatoryNum\": 14 }, etc... ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"ScheduleOpNum\": 156, \"ScheduleNum\": 1092, \"OperatoryNum\": 12 }, { \"ScheduleOpNum\": 157, \"ScheduleNum\": 1092, \"OperatoryNum\": 13 }, { \"ScheduleOpNum\": 158, \"ScheduleNum\": 1092, \"OperatoryNum\": 14 }, { \"ScheduleOpNum\": 159, \"ScheduleNum\": 1093, \"OperatoryNum\": 12 }, { \"ScheduleOpNum\": 160, \"ScheduleNum\": 1093, \"OperatoryNum\": 13 }, { \"ScheduleOpNum\": 161, \"ScheduleNum\": 1093, \"OperatoryNum\": 14 }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Schedules","item":[{"name":"/schedules/24555","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/schedules/24555","host":["{{url_local}}{{version_api}}"],"path":["/schedules/24555"],"query":null},"description":"Schedules GET (single) Version Added: 22.1 Gets the schedule corresponding to a passed in ScheduleNum. Example Request: GET /schedules/24555 Example Response: { \"ScheduleNum\": \"24555\", \"SchedDate\": \"2022-04-04\", \"StartTime\": \"08:00:00\", \"StopTime\": \"12:00:00\", \"SchedType\": \"Provider\", \"ProvNum\": \"2\", \"BlockoutType\": \"0\", \"blockoutType\": \"\", \"Note\": \"\", \"operatories\": \"5\", \"EmployeeNum\": \"0\" } 200 OK 404 Not Found \"Schedule not found\"","body":{"mode":"raw","raw":"{ \"ScheduleNum\": \"24555\", \"SchedDate\": \"2022-04-04\", \"StartTime\": \"08:00:00\", \"StopTime\": \"12:00:00\", \"SchedType\": \"Provider\", \"ProvNum\": \"2\", \"BlockoutType\": \"0\", \"blockoutType\": \"\", \"Note\": \"\", \"operatories\": \"5\", \"EmployeeNum\": \"0\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/schedules?date=2022-03-07","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/schedules?date=2022-03-07","host":["{{url_local}}{{version_api}}"],"path":["/schedules?date=2022-03-07"],"query":null},"description":"Schedules GET (multiple) Version Added: 22.1 Gets every schedule entry that meets any passed-in criteria. Results are sorted by StartTime. Certain values are always 0 depending on the schedule type. blockoutType will always be 0 unless the SchedType is Blockout, ProvNum will be 0 unless the SchedType is Provider, and EmployeeNum will be 0 unless the SchedType is Employee. Parameters: All optional. date: For a single day. Today's date by default. dateStart, dateEnd: For a date range, inclusive of both dates. SchedType: Either \"Practice\", \"Provider\", \"Blockout\", \"Employee\", or \"WebSchedASAP\". BlockoutDefNum: Definition.DefNum where definition.Category=25. ProvNum:FK to provider.ProvNum. EmployeeNum: FK to employee.EmployeeNum. Example Requests: GET /schedules?date=2022-03-07 GET /schedules?dateStart=2022-03-07&dateEnd=2022-03-11 GET /schedules?SchedType=Blockout Example Response: [ { \"ScheduleNum\": \"25888\", \"SchedDate\": \"2022-03-11\", \"StartTime\": \"00:00:00\", \"StopTime\": \"00:00:00\", \"SchedType\": \"Practice\", \"ProvNum\": \"0\", \"BlockoutType\": \"0\", \"blockoutType\": \"\", \"Note\": \"3 Day Weekend\", \"operatories\": \"\", \"EmployeeNum\": \"0\", }, { \"ScheduleNum\": \"25884\", \"SchedDate\": \"2022-03-07\", \"StartTime\": \"13:30:00\", \"StopTime\": \"14:00:00\", \"SchedType\": \"Blockout\", \"ProvNum\": \"0\", \"BlockoutType\": \"248\", \"blockoutType\": \"Staff Meeting\", \"Note\": \"Weekly Meet\", \"operatories\": \"5,6\", \"EmployeeNum\": \"0\", }, { \"ScheduleNum\": \"24420\", \"SchedDate\": \"2022-03-07\", \"StartTime\": \"14:00:00\", \"StopTime\": \"18:00:00\", \"SchedType\": \"Provider\", \"ProvNum\": \"3\", \"BlockoutType\": \"0\", \"blockoutType\": \"\", \"Note\": \"\", \"operatories\": \"2\", \"EmployeeNum\": \"0\", }, { \"ScheduleNum\": \"25887\", \"SchedDate\": \"2022-03-08\", \"StartTime\": \"15:30:00\", \"StopTime\": \"16:00:00\", \"SchedType\": \"Employee\", \"ProvNum\": \"0\", \"BlockoutType\": \"0\", \"blockoutType\": \"\", \"Note\": \"Leaving early\", \"operatories\": \"\", \"EmployeeNum\": \"2\", }, etc... ] 200 OK 400 Bad Request (with explanation) 404 Not Found (with explanation)","body":{"mode":"raw","raw":"[ { \"ScheduleNum\": \"25888\", \"SchedDate\": \"2022-03-11\", \"StartTime\": \"00:00:00\", \"StopTime\": \"00:00:00\", \"SchedType\": \"Practice\", \"ProvNum\": \"0\", \"BlockoutType\": \"0\", \"blockoutType\": \"\", \"Note\": \"3 Day Weekend\", \"operatories\": \"\", \"EmployeeNum\": \"0\", }, { \"ScheduleNum\": \"25884\", \"SchedDate\": \"2022-03-07\", \"StartTime\": \"13:30:00\", \"StopTime\": \"14:00:00\", \"SchedType\": \"Blockout\", \"ProvNum\": \"0\", \"BlockoutType\": \"248\", \"blockoutType\": \"Staff Meeting\", \"Note\": \"Weekly Meet\", \"operatories\": \"5,6\", \"EmployeeNum\": \"0\", }, { \"ScheduleNum\": \"24420\", \"SchedDate\": \"2022-03-07\", \"StartTime\": \"14:00:00\", \"StopTime\": \"18:00:00\", \"SchedType\": \"Provider\", \"ProvNum\": \"3\", \"BlockoutType\": \"0\", \"blockoutType\": \"\", \"Note\": \"\", \"operatories\": \"2\", \"EmployeeNum\": \"0\", }, { \"ScheduleNum\": \"25887\", \"SchedDate\": \"2022-03-08\", \"StartTime\": \"15:30:00\", \"StopTime\": \"16:00:00\", \"SchedType\": \"Employee\", \"ProvNum\": \"0\", \"BlockoutType\": \"0\", \"blockoutType\": \"\", \"Note\": \"Leaving early\", \"operatories\": \"\", \"EmployeeNum\": \"2\", }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API SecurityLogs","item":[{"name":"/securitylogs","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/securitylogs","host":["{{url_local}}{{version_api}}"],"path":["/securitylogs"],"query":null},"description":"SecurityLogs GET Version Added: 23.1.33 Gets all securitylogs for the API developer making the request. PermType: Optional. Filter responses by permission type. See Audit Trail Permissions for additional information. Example Requests: GET /securitylogs GET /securitylogs?PermType=PatientEdit Example Response: [ { \"SecurityLogNum\": 21855, \"PermType\": \"PatientCreate\", \"UserNum\": 0, \"LogDateTime\": \"7/6/2023 11:48:55 AM\", \"LogText\": \"Created by API Test Developer through API. \", \"PatNum\": 95, \"CompName\": \"JUSTINE\", \"LogSource\": \"API\" }, { \"SecurityLogNum\": 21853, \"PermType\": \"PatientEdit\", \"UserNum\": 0, \"LogDateTime\": \"7/6/2023 11:47:47 AM\", \"LogText\": \"Updated by API Test Developer through API. \", \"PatNum\": 86, \"CompName\": \"JUSTINE\", \"LogSource\": \"API\" }, { \"SecurityLogNum\": 21845, \"PermType\": \"PatientEdit\", \"UserNum\": 0, \"LogDateTime\": \"7/6/2023 11:42:49 AM\", \"LogText\": \"Updated by API Test Developer through API. \", \"PatNum\": 86, \"CompName\": \"JUSTINE\", \"LogSource\": \"API\" }, etc... ] 200 OK 400 BadRequest (with explanation)","body":{"mode":"raw","raw":"[ { \"SecurityLogNum\": 21855, \"PermType\": \"PatientCreate\", \"UserNum\": 0, \"LogDateTime\": \"7/6/2023 11:48:55 AM\", \"LogText\": \"Created by API Test Developer through API. \", \"PatNum\": 95, \"CompName\": \"JUSTINE\", \"LogSource\": \"API\" }, { \"SecurityLogNum\": 21853, \"PermType\": \"PatientEdit\", \"UserNum\": 0, \"LogDateTime\": \"7/6/2023 11:47:47 AM\", \"LogText\": \"Updated by API Test Developer through API. \", \"PatNum\": 86, \"CompName\": \"JUSTINE\", \"LogSource\": \"API\" }, { \"SecurityLogNum\": 21845, \"PermType\": \"PatientEdit\", \"UserNum\": 0, \"LogDateTime\": \"7/6/2023 11:42:49 AM\", \"LogText\": \"Updated by API Test Developer through API. \", \"PatNum\": 86, \"CompName\": \"JUSTINE\", \"LogSource\": \"API\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API SecurityPerms","item":[{"name":"/securityperms","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/securityperms","host":["{{url_local}}{{version_api}}"],"path":["/securityperms"],"query":null},"description":"SecurityPerms GET Version Added: 22.2 Gets all API Permissions for a single dental office. Uses the Customer's API Key specified in the API request header. Example Request: GET /securityperms Example Response: [ { \"Permission\": \"ApiReadAll\", \"HasPermission\": \"true\" }, { \"Permission\": \"ApiAllOthers\", \"HasPermission\": \"true\" }, { \"Permission\": \"ApiComm\", \"HasPermission\": \"true\" }, { \"Permission\": \"ApiDocuments\", \"HasPermission\": \"false\" }, { \"Permission\": \"ApiQueries\", \"HasPermission\": \"true\" }, etc... ] 200 OK","body":{"mode":"raw","raw":"[ { \"Permission\": \"ApiReadAll\", \"HasPermission\": \"true\" }, { \"Permission\": \"ApiAllOthers\", \"HasPermission\": \"true\" }, { \"Permission\": \"ApiComm\", \"HasPermission\": \"true\" }, { \"Permission\": \"ApiDocuments\", \"HasPermission\": \"false\" }, { \"Permission\": \"ApiQueries\", \"HasPermission\": \"true\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Sheets","item":[{"name":"/sheets?PatNum=123","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/sheets?PatNum=123","host":["{{url_local}}{{version_api}}"],"path":["/sheets?PatNum=123"],"query":null},"description":"Sheets GET Version Added: 21.4 Gets all Sheets for a single patient. PatNum: Required. Example Request: GET /sheets?PatNum=123 GET /sheets?PatNum=123&Offset=400 Example Response: [ { \"SheetNum\": 45, \"SheetType\": \"PatientLetter\", \"PatNum\": 123, \"DateTimeSheet\": \"2021-11-16 02:45:38\", \"InternalNote\": \"\", \"Description\": \"Custom Patient Letter\", \"IsWebForm\": \"false\", \"SheetDefNum\": 25, \"DocNum\": 0, \"ClinicNum\": 0, \"DateTSheetEdited\": \"2022-01-23 08:33:02\" }, { \"SheetNum\": 47, \"SheetType\": \"MedicalHistory\", \"PatNum\": 123, \"DateTimeSheet\": \"2021-11-16 12:21:03\", \"InternalNote\": \"\", \"Description\": \"Medical History Simple\", \"IsWebForm\": \"false\", \"SheetDefNum\": 24, \"DocNum\": 0, \"ClinicNum\": 0, \"DateTSheetEdited\": \"2022-11-23 04:20:12\" }, { \"SheetNum\": 50, \"SheetType\": \"ExamSheet\", \"PatNum\": 123, \"DateTimeSheet\": \"2022-03-07 10:25:00\", \"InternalNote\": \"\", \"Description\": \"Exam\", \"IsWebForm\": \"false\", \"SheetDefNum\": 20, \"DocNum\": 0, \"ClinicNum\": 0, \"DateTSheetEdited\": \"2022-03-07 10:25:22\" }, etc... ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"SheetNum\": 45, \"SheetType\": \"PatientLetter\", \"PatNum\": 123, \"DateTimeSheet\": \"2021-11-16 02:45:38\", \"InternalNote\": \"\", \"Description\": \"Custom Patient Letter\", \"IsWebForm\": \"false\", \"SheetDefNum\": 25, \"DocNum\": 0, \"ClinicNum\": 0, \"DateTSheetEdited\": \"2022-01-23 08:33:02\" }, { \"SheetNum\": 47, \"SheetType\": \"MedicalHistory\", \"PatNum\": 123, \"DateTimeSheet\": \"2021-11-16 12:21:03\", \"InternalNote\": \"\", \"Description\": \"Medical History Simple\", \"IsWebForm\": \"false\", \"SheetDefNum\": 24, \"DocNum\": 0, \"ClinicNum\": 0, \"DateTSheetEdited\": \"2022-11-23 04:20:12\" }, { \"SheetNum\": 50, \"SheetType\": \"ExamSheet\", \"PatNum\": 123, \"DateTimeSheet\": \"2022-03-07 10:25:00\", \"InternalNote\": \"\", \"Description\": \"Exam\", \"IsWebForm\": \"false\", \"SheetDefNum\": 20, \"DocNum\": 0, \"ClinicNum\": 0, \"DateTSheetEdited\": \"2022-03-07 10:25:22\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/sheets","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/sheets","host":["{{url_local}}{{version_api}}"],"path":["/sheets"],"query":null},"description":"Sheets POST Version Added: 23.1.32 Creates a Sheet with SheetFields using an existing SheetDef for a patient. Only SheetDefs of SheetType \"Consent\", \"PatientLetter\", \"PatientForm\", \"MedicalHistory\", and \"ExamSheet\" are supported. SheetDefNum: Required. FK to sheetdef.SheetDefNum. PatNum: Required. InternalNote: Optional. Example Request: POST /sheets { \"SheetDefNum\": 25, \"PatNum\": 465 } Example Response: { \"SheetNum\": 70, \"SheetType\": \"PatientLetter\", \"PatNum\": 465, \"DateTimeSheet\": \"2023-06-21 15:24:52\", \"InternalNote\": \"\", \"Description\": \"Patient Letter\", \"IsWebForm\": \"false\", \"SheetDefNum\": 25, \"DocNum\": 0, \"ClinicNum\": 0, \"DateTSheetEdited\": \"2023-06-21 15:24:52\" } 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"SheetDefNum\": 25, \"PatNum\": 465 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/sheets/DownloadSftp","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/sheets/DownloadSftp","host":["{{url_local}}{{version_api}}"],"path":["/sheets/DownloadSftp"],"query":null},"description":"Sheets POST DownloadSftp Version Added: 22.1 Converts a sheet to a PDF, then downloads it to an SFTP site that you specify. After running this method, download the resulting file from your SFTP site. The user with the SFTP credentials must have write permission in this directory. Directory will be created if it does not exist, and files already existing with the specified name will be overwritten. If no file name is specified, the file will be titled \"sheet.pdf\". SheetNum: Required. SftpAddress: Required. SftpUsername: Required. SftpPassword: Required. Example Request: POST /sheets/DownloadSftp { \"SheetNum\": 50, \"SftpAddress\": \"MySftpSite/myUsername/Sheets/ExamSheetJones.pdf\", \"SftpUsername\": \"myUsername\", \"SftpPassword\": \"myPassword\" } Example Response: 201 Created, \"location\": The full filepath of the saved file. 400 BadRequest (Invalid fields, invalid file extension, and Sftp connection errors). 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"SheetNum\": 50, \"SftpAddress\": \"MySftpSite/myUsername/Sheets/ExamSheetJones.pdf\", \"SftpUsername\": \"myUsername\", \"SftpPassword\": \"myPassword\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API SheetFields","item":[{"name":"/sheetfields?SheetNum=24","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/sheetfields?SheetNum=24","host":["{{url_local}}{{version_api}}"],"path":["/sheetfields?SheetNum=24"],"query":null},"description":"SheetFields GET Version Added: 22.1 Gets all SheetFields for a single sheet. SheetNum: Required. Example Requests: GET /sheetfields?SheetNum=24 GET /sheetfields?SheetNum=24&Offset=200 Example Response: [ { \"SheetFieldNum\": 1049, \"SheetNum\": 24, \"FieldType\": \"InputField\", \"FieldName\": \"prov.nameFormal\", \"FieldValue\": \"John D. Smith\", \"IsRequired\": \"true\", \"ReportableName\": \"\", \"DateTimeSig\": \"0001-01-01 00:00:00\" }, { \"SheetFieldNum\": 3068, \"SheetNum\": 24, \"FieldType\": \"SigBoxPractice\", \"FieldName\": \"\", \"FieldValue\": \"1FFFFFFFB59486...\", \"IsRequired\": \"false\", \"ReportableName\": \"\", \"DateTimeSig\": \"2023-07-17 13:38:27\" }, etc... ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"SheetFieldNum\": 1049, \"SheetNum\": 24, \"FieldType\": \"InputField\", \"FieldName\": \"prov.nameFormal\", \"FieldValue\": \"John D. Smith\", \"IsRequired\": \"true\", \"ReportableName\": \"\", \"DateTimeSig\": \"0001-01-01 00:00:00\" }, { \"SheetFieldNum\": 3068, \"SheetNum\": 24, \"FieldType\": \"SigBoxPractice\", \"FieldName\": \"\", \"FieldValue\": \"1FFFFFFFB59486...\", \"IsRequired\": \"false\", \"ReportableName\": \"\", \"DateTimeSig\": \"2023-07-17 13:38:27\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Signalods","item":[{"name":"/signalods?SigDateTime=2021-02-02%2005%3A05%3A00","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/signalods?SigDateTime=2021-02-02%2005%3A05%3A00","host":["{{url_local}}{{version_api}}"],"path":["/signalods?SigDateTime=2021-02-02%2005%3A05%3A00"],"query":null},"description":"Signalods GET Version Added: 21.2 SigDateTime is a required parameter. If any Signalods exist after the given dateTime, they will be returned. If a matching Signalod does not exist, it returns an empty list. Store serverDateTime that gets returned and use it to run the next GET. Example Request GET /signalods?SigDateTime=2021-02-02%2005%3A05%3A00 Example Response: [ { \"SignalNum\": 71, \"DateViewing\": \"0001-01-01\", \"SigDateTime\": \"2021-04-15 08:01:46\", \"FKey\": 0, \"FKeyType\": \"Undefined\", \"IType\": \"Security\", \"RemoteRole\": \"ClientDirect\", \"MsgValue\": \"\", \"serverDateTime\": \"2021-05-25 08:01:46\" }, etc... ] 200 OK 404 Not Found (with reason) 400 Bad Request (with reason)","body":{"mode":"raw","raw":"[ { \"SignalNum\": 71, \"DateViewing\": \"0001-01-01\", \"SigDateTime\": \"2021-04-15 08:01:46\", \"FKey\": 0, \"FKeyType\": \"Undefined\", \"IType\": \"Security\", \"RemoteRole\": \"ClientDirect\", \"MsgValue\": \"\", \"serverDateTime\": \"2021-05-25 08:01:46\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Subscriptions","item":[{"name":"/subscriptions","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/subscriptions","host":["{{url_local}}{{version_api}}"],"path":["/subscriptions"],"query":null},"description":"Subscriptions POST Version Added: 22.1 Creates a subscription. Subscriptions are specific to the Customer's API Key specified in the API request header. Each subscription is for either a database event or for a UI event. You may choose to append \"/patientevent\" or \"?type=patientevent\" if you use the same EndPointUrl in multiple subscriptions. EndPointUrl: Required. This is the URL endpoint to which events will be sent. Examples of endpoints that you might choose include: https://myserver/apievents/ http://localhost:2097/ http://192.168.1.14:2097/ Workstation: Required unless you want all workstations to be firing events. Only leave this blank if your endpoint is localhost. If you don't specify a workstation for the other scenarios, your endpoint will get the same event from multiple workstations, which is very undesirable. PollingSeconds: Required for database events. Frequency of database polling, in seconds. WatchTable: Required for database events. The name of the database table to monitor. Either \"Appointment\", \"AppointmentDeleted\" (Added in version 22.4.35), \"PatField\" (Added in version 22.4.8), or \"Patient\". UiEventType: Required for UI Events. List of types is in API Events. Example: \"PatientSelected\". DateTimeStart: Optional. When to start monitoring the table for changes. Default Now. DateTimeStop: Optional. When the subscriptions expires. Default 01-01-0001 to represent no expiration. Note: Optional. Example Requests: POST /subscriptions { \"EndPointUrl\": \"https://myserver/apievents/\", \"Workstation\": \"MOLLYR\", \"WatchTable\": \"Appointment\", \"PollingSeconds\": 5, \"DateTimeStart\": \"2022-01-31\" } or { \"EndPointUrl\": \"http://localhost:2097/\", \"UiEventType\": \"PatientSelected\" } Example Response: { \"SubscriptionNum\": 14, \"EndPointUrl\": \"https://myserver/apievents/\", \"Workstation\": \"MOLLYR\", \"CustomerKey\": \"VzkmZEaUWOjnQX2z\", \"WatchTable\": \"Appointment\", \"PollingSeconds\": 5, \"UiEventType\": \"\", \"DateTimeStart\": \"2022-01-31 00:00:00\", \"DateTimeStop\": \"0001-01-01 00:00:00\", \"Note\": \"\" } 201 Created 400 BadRequest (with explanation) 404 NotFound","body":{"mode":"raw","raw":"{ \"EndPointUrl\": \"https://myserver/apievents/\", \"Workstation\": \"MOLLYR\", \"WatchTable\": \"Appointment\", \"PollingSeconds\": 5, \"DateTimeStart\": \"2022-01-31\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/subscriptions","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/subscriptions","host":["{{url_local}}{{version_api}}"],"path":["/subscriptions"],"query":null},"description":"Subscriptions GET Version Added: 22.1 Gets a list of all subscriptions for the Customer's API Key specified in the API request header. Example Request: GET /subscriptions Example Response: [ { \"SubscriptionNum\": 14, \"EndPointUrl\": \"https://myserver/apievents/\", \"Workstation\": \"MOLLYR\", \"CustomerKey\": \"VzkmZEaUWOjnQX2z\", \"WatchTable\": \"Appointment\", \"PollingSeconds\": 5, \"UiEventType\": \"\", \"DateTimeStart\": \"2022-01-31 00:00:00\", \"DateTimeStop\": \"0001-01-01 00:00:00\", \"Note\": \"\" }, { \"SubscriptionNum\": 18, \"EndPointUrl\": \"http://localhost:2097/\", \"Workstation\": \"\", \"CustomerKey\": \"VzkmZEaUWOjnQX2z\", \"WatchTable\": \"\", \"PollingSeconds\": 0, \"UiEventType\": \"PatientSelected\", \"DateTimeStart\": \"2022-02-02 08:12:15\", \"DateTimeStop\": \"0001-01-01 00:00:00\", \"Note\": \"\" }, etc... ]","body":{"mode":"raw","raw":"[ { \"SubscriptionNum\": 14, \"EndPointUrl\": \"https://myserver/apievents/\", \"Workstation\": \"MOLLYR\", \"CustomerKey\": \"VzkmZEaUWOjnQX2z\", \"WatchTable\": \"Appointment\", \"PollingSeconds\": 5, \"UiEventType\": \"\", \"DateTimeStart\": \"2022-01-31 00:00:00\", \"DateTimeStop\": \"0001-01-01 00:00:00\", \"Note\": \"\" }, { \"SubscriptionNum\": 18, \"EndPointUrl\": \"http://localhost:2097/\", \"Workstation\": \"\", \"CustomerKey\": \"VzkmZEaUWOjnQX2z\", \"WatchTable\": \"\", \"PollingSeconds\": 0, \"UiEventType\": \"PatientSelected\", \"DateTimeStart\": \"2022-02-02 08:12:15\", \"DateTimeStop\": \"0001-01-01 00:00:00\", \"Note\": \"\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/subscriptions/14","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/subscriptions/14","host":["{{url_local}}{{version_api}}"],"path":["/subscriptions/14"],"query":null},"description":"Subscriptions PUT Version Added: 22.1 Updates an existing Subscription. SubscriptionNum: Required in the URL. EndPointUrl: This is the URL endpoint to which events will be sent. Workstation: Name of the workstation that will fire events. Blank if you want all workstations to fire events. PollingSeconds: Frequency of database polling, in seconds. Can only be set for WatchTable subscriptions. DateTimeStart: When the subscription started. This gets updated each time database is polled so that it represents the start of the date range for the next polling. DateTimeStop: When the subscription will expire. Note: Optional. Example Request: PUT /subscriptions/14 { \"PollingSeconds\": 30, \"Note\": \"Decreased polling rate.\" } or { \"EndPointUrl\": \"https://myserver2/apievents/\", \"Workstation\": \"BETTYC\", \"DateTimeStop\": \"2022-12-31\", } Example Response: 200 OK 400 BadRequest (Invalid fields) 404 NotFound (Subscription not found)","body":{"mode":"raw","raw":"{ \"PollingSeconds\": 30, \"Note\": \"Decreased polling rate.\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/subscriptions/14","item":null,"description":null,"request":{"method":"DELETE","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/subscriptions/14","host":["{{url_local}}{{version_api}}"],"path":["/subscriptions/14"],"query":null},"description":"Subscriptions DELETE Version Added: 22.1 Deletes a Subscription. SubscriptionNum: Required in the URL. Example Request: DELETE /subscriptions/14 Example Response: 200 OK 400 BadRequest (Invalid fields) 404 NotFound (SubscriptionNum not found)","body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API SubstitutionLinks","item":[{"name":"/substitutionlinks?PlanNum=33","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/substitutionlinks?PlanNum=33","host":["{{url_local}}{{version_api}}"],"path":["/substitutionlinks?PlanNum=33"],"query":null},"description":"SubstitutionLinks GET Version Added: 22.4.25 Gets a list of substitution links for a given insurance plan. PlanNum: FK to InsPlan.planNum. Example Request: GET /substitutionlinks?PlanNum=33 Example Response: [ { \"SubstiutionLinkNum\": 13, \"PlanNum\": 33, \"CodeNum\": 6, \"SubstitutionCode\": \"D3002\", \"SubstOnlyIf\": \"Always\" }, etc... ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"SubstiutionLinkNum\": 13, \"PlanNum\": 33, \"CodeNum\": 6, \"SubstitutionCode\": \"D3002\", \"SubstOnlyIf\": \"Always\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/substitutionlinks","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/substitutionlinks","host":["{{url_local}}{{version_api}}"],"path":["/substitutionlinks"],"query":null},"description":"SubstitutionLinks POST (create) Version Added: 22.4.1 Creates a new SubstitutionLink. These links are created for a single insurance plan and will overwrite the ProcedureCode on a procedure with the SubstitutionCode. This replacement is based upon the SubstOnlyIf condition. PlanNum: Required. FK to InsPlan.PlanNum. CodeNum: Required. FK to ProcedureCode.CodeNum. SubstitutionCode: Required. FK to ProcedureCode.ProcCode. Case-sensitive. SubstOnlyIf: Required. Either \"Always\", \"Molar\", \"SecondMolar\", \"Never\", or \"Posterior\". Example Request: POST /substitutionlinks { \"PlanNum\": 34, \"CodeNum\": 6, \"SubstitutionCode\": \"D3002\", \"SubstOnlyIf\": \"Molar\" } Example Response: { \"SubstitutionLinkNum\": 16, \"PlanNum\": 34, \"CodeNum\": 6, \"SubstitutionCode\": \"D3002\", \"SubstOnlyIf\": \"Molar\" } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PlanNum\": 34, \"CodeNum\": 6, \"SubstitutionCode\": \"D3002\", \"SubstOnlyIf\": \"Molar\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/substitutionlinks/34","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/substitutionlinks/34","host":["{{url_local}}{{version_api}}"],"path":["/substitutionlinks/34"],"query":null},"description":"SubstitutionLinks PUT (update) Version Added: 22.4.25 Updates a substitution link. SubstitutionLinkNum: Required in the URL. SubstitutionCode: Optional. FK to ProcedureCode.ProcCode. Case-sensitive. SubstOnlyIf: Optional. Either \"Always\", \"Molar\", \"SecondMolar\", \"Never\", or \"Posterior\". Example Request: PUT /substitutionlinks/34 { \"SubstitutionCode\": \"D3004\", \"SubstOnlyIf\": \"SecondMolar\" } Example Response: { \"SubstitutionLinkNum\": 34, \"PlanNum\": 14, \"CodeNum\": 6, \"SubstitutionCode\": \"D3004\", \"SubstOnlyIf\": \"SecondMolar\" } 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"SubstitutionCode\": \"D3004\", \"SubstOnlyIf\": \"SecondMolar\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/substitutionlinks/25","item":null,"description":null,"request":{"method":"DELETE","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/substitutionlinks/25","host":["{{url_local}}{{version_api}}"],"path":["/substitutionlinks/25"],"query":null},"description":"SubstitutionLinks DELETE Version Added: 22.4.25 Deletes an existing substitution link by SubstitutionLinkNum. SubsitutionLinkNum: Required in URL. Example Request: DELETE /substitutionlinks/25 Example Response: 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API TaskLists","item":[{"name":"/tasklists?TaskListStatus=Archived&amp;Offset=100","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/tasklists?TaskListStatus=Archived&amp;Offset=100","host":["{{url_local}}{{version_api}}"],"path":["/tasklists?TaskListStatus=Archived&amp;Offset=100"],"query":null},"description":"TaskLists GET Version Added: 22.3.15 Gets a list of all the TaskLists filtered by TaskListStatus. Parameters: TaskListStatus: Optional. Either \"Active\" or \"Archived\". Default \"Active\". Example Request GET /tasklists?TaskListStatus=Archived&Offset=100 Example Response: [ { \"TaskListNum\": 102, \"Descript\": \"Brittany\", \"Parent\": 0, \"DateTL\": \"0001-01-01\", \"IsRepeating\": \"false\", \"DateType\": \"None\", \"FromNum\": 0, \"ObjectType\": \"Patient\", \"DateTimeEntry\": \"2021-10-05 10:25:43\", \"TaskListStatus\": \"Archived\" }, { \"TaskListNum\": 103, \"Descript\": \"Brittany Paperwork\", \"Parent\": 102, \"DateTL\": \"0001-01-01\", \"IsRepeating\": \"false\", \"DateType\": \"Week\", \"FromNum\": 0, \"ObjectType\": \"None\", \"DateTimeEntry\": \"2021-10-05 10:27:29\", \"TaskListStatus\": \"Archived\" }, { \"TaskListNum\": 105, \"Descript\": \"Brittany Appointments\", \"Parent\": 102, \"DateTL\": \"0001-01-01\", \"IsRepeating\": \"false\", \"DateType\": \"None\", \"FromNum\": 0, \"ObjectType\": \"Appointment\", \"DateTimeEntry\": \"2021-10-05 10:28:11\", \"TaskListStatus\": \"Archived\" }, { \"TaskListNum\": 107, \"Descript\": \"Debbie\", \"Parent\": 0, \"DateTL\": \"0001-01-01\", \"IsRepeating\": \"false\", \"DateType\": \"None\", \"FromNum\": 0, \"ObjectType\": \"None\", \"DateTimeEntry\": \"2021-10-28 11:46:16\", \"TaskListStatus\": \"Archived\" }, etc... ] 200 OK 400 Bad Request (Invalid TaskListStatus)","body":{"mode":"raw","raw":"[ { \"TaskListNum\": 102, \"Descript\": \"Brittany\", \"Parent\": 0, \"DateTL\": \"0001-01-01\", \"IsRepeating\": \"false\", \"DateType\": \"None\", \"FromNum\": 0, \"ObjectType\": \"Patient\", \"DateTimeEntry\": \"2021-10-05 10:25:43\", \"TaskListStatus\": \"Archived\" }, { \"TaskListNum\": 103, \"Descript\": \"Brittany Paperwork\", \"Parent\": 102, \"DateTL\": \"0001-01-01\", \"IsRepeating\": \"false\", \"DateType\": \"Week\", \"FromNum\": 0, \"ObjectType\": \"None\", \"DateTimeEntry\": \"2021-10-05 10:27:29\", \"TaskListStatus\": \"Archived\" }, { \"TaskListNum\": 105, \"Descript\": \"Brittany Appointments\", \"Parent\": 102, \"DateTL\": \"0001-01-01\", \"IsRepeating\": \"false\", \"DateType\": \"None\", \"FromNum\": 0, \"ObjectType\": \"Appointment\", \"DateTimeEntry\": \"2021-10-05 10:28:11\", \"TaskListStatus\": \"Archived\" }, { \"TaskListNum\": 107, \"Descript\": \"Debbie\", \"Parent\": 0, \"DateTL\": \"0001-01-01\", \"IsRepeating\": \"false\", \"DateType\": \"None\", \"FromNum\": 0, \"ObjectType\": \"None\", \"DateTimeEntry\": \"2021-10-28 11:46:16\", \"TaskListStatus\": \"Archived\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Tasks","item":[{"name":"/tasks?ObjectType=Appointment&amp;DateTimeOriginal=2022-07-01%2005%3A30%3A00","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/tasks?ObjectType=Appointment&amp;DateTimeOriginal=2022-07-01%2005%3A30%3A00","host":["{{url_local}}{{version_api}}"],"path":["/tasks?ObjectType=Appointment&amp;DateTimeOriginal=2022-07-01%2005%3A30%3A00"],"query":null},"description":"Tasks GET Version Added: 22.3.16 Get a list of Tasks that meet a set of search criteria. To get a list of all patient or appointment Tasks, use only the ObjectType. To get a list of Tasks for a specific patient or appointment, use both the ObjectType and KeyNum. Parameters: All optional. TaskListNum: Optional. tasklist.TaskListNum. Default all TaskLists. KeyNum: Optional. Either patient.PatNum or appointment.AptNum. Used when ObjectType is \"Patient\" or \"Appointment\". Default 0. ObjectType: Optional, unless KeyNum is specified. Either \"None\", \"Patient\", or \"Appointment\". Default all ObjectTypes. TaskStatus: Optional. Either \"New\", \"Viewed\", or \"Done\". Default all TaskStatuses. DateTimeOriginal: Optional. Gets tasks created after this datetime. String in \"yyyy-MM-dd HH:mm:ss\" format. Default is the previous 14 days. Example Request: GET /tasks?ObjectType=Appointment&DateTimeOriginal=2022-07-01%2005%3A30%3A00 GET /tasks?TaskStatus=New&TaskListNum=74 Example Response: [ { \"TaskNum\": 9004, \"TaskListNum\": 74, \"DateTask\": \"0001-01-01\", \"KeyNum\": 0, \"Descript\": \"Need to re-order general cleaning supplies by this next Friday.\", \"TaskStatus\": \"New\", \"IsRepeating\": \"false\", \"DateType\": \"None\", \"FromNum\": 0, \"ObjectType\": \"None\", \"DateTimeEntry\": \"2022-10-01 11:18:11\", \"UserNum\": 1, \"DateTimeFinished\": \"0001-01-01 00:00:00\", \"PriorityDefNum\": 358, \"ReminderGroupId\": \"\", \"ReminderType\": \"NoReminder\", \"ReminderFrequency\": 0, \"DateTimeOriginal\": \"2022-10-07 11:18:11\", \"SecDateTEdit\": \"2022-10-07 11:18:36\", \"DescriptOverride\": \"\", \"IsReadOnly\": \"false\" }, { \"TaskNum\": 9027, \"TaskListNum\": 74, \"DateTask\": \"0001-01-01\", \"KeyNum\": 755, \"Descript\": \"Mr. Andersons Insurance needs to be verified before his next appointment.\", \"TaskStatus\": \"New\", \"IsRepeating\": \"false\", \"DateType\": \"None\", \"FromNum\": 0, \"ObjectType\": \"Appointment\", \"DateTimeEntry\": \"2022-10-07 11:16:40\", \"UserNum\": 1, \"DateTimeFinished\": \"0001-01-01 00:00:00\", \"PriorityDefNum\": 358, \"ReminderGroupId\": \"\", \"ReminderType\": \"NoReminder\", \"ReminderFrequency\": 0, \"DateTimeOriginal\": \"2022-10-07 11:16:40\", \"SecDateTEdit\": \"2022-10-07 11:17:39\", \"DescriptOverride\": \"\", \"IsReadOnly\": \"false\" }, { \"TaskNum\": 9093, \"TaskListNum\": 74, \"DateTask\": \"0001-01-01\", \"KeyNum\": 73, \"Descript\": \"Need to update Rebecca's contact information.\", \"TaskStatus\": \"New\", \"IsRepeating\": \"false\", \"DateType\": \"None\", \"FromNum\": 0, \"ObjectType\": \"Patient\", \"DateTimeEntry\": \"2022-10-07 11:17:41\", \"UserNum\": 1, \"DateTimeFinished\": \"0001-01-01 00:00:00\", \"PriorityDefNum\": 358, \"ReminderGroupId\": \"\", \"ReminderType\": \"NoReminder\", \"ReminderFrequency\": 0, \"DateTimeOriginal\": \"2022-10-07 11:17:41\", \"SecDateTEdit\": \"2022-10-07 11:17:59\", \"DescriptOverride\": \"\", \"IsReadOnly\": \"false\" } etc... ] 200 OK 400 Bad Request (Invalid fields, etc) 404 NotFound (Patient not found, Appointment not found, etc)","body":{"mode":"raw","raw":"[ { \"TaskNum\": 9004, \"TaskListNum\": 74, \"DateTask\": \"0001-01-01\", \"KeyNum\": 0, \"Descript\": \"Need to re-order general cleaning supplies by this next Friday.\", \"TaskStatus\": \"New\", \"IsRepeating\": \"false\", \"DateType\": \"None\", \"FromNum\": 0, \"ObjectType\": \"None\", \"DateTimeEntry\": \"2022-10-01 11:18:11\", \"UserNum\": 1, \"DateTimeFinished\": \"0001-01-01 00:00:00\", \"PriorityDefNum\": 358, \"ReminderGroupId\": \"\", \"ReminderType\": \"NoReminder\", \"ReminderFrequency\": 0, \"DateTimeOriginal\": \"2022-10-07 11:18:11\", \"SecDateTEdit\": \"2022-10-07 11:18:36\", \"DescriptOverride\": \"\", \"IsReadOnly\": \"false\" }, { \"TaskNum\": 9027, \"TaskListNum\": 74, \"DateTask\": \"0001-01-01\", \"KeyNum\": 755, \"Descript\": \"Mr. Andersons Insurance needs to be verified before his next appointment.\", \"TaskStatus\": \"New\", \"IsRepeating\": \"false\", \"DateType\": \"None\", \"FromNum\": 0, \"ObjectType\": \"Appointment\", \"DateTimeEntry\": \"2022-10-07 11:16:40\", \"UserNum\": 1, \"DateTimeFinished\": \"0001-01-01 00:00:00\", \"PriorityDefNum\": 358, \"ReminderGroupId\": \"\", \"ReminderType\": \"NoReminder\", \"ReminderFrequency\": 0, \"DateTimeOriginal\": \"2022-10-07 11:16:40\", \"SecDateTEdit\": \"2022-10-07 11:17:39\", \"DescriptOverride\": \"\", \"IsReadOnly\": \"false\" }, { \"TaskNum\": 9093, \"TaskListNum\": 74, \"DateTask\": \"0001-01-01\", \"KeyNum\": 73, \"Descript\": \"Need to update Rebecca's contact information.\", \"TaskStatus\": \"New\", \"IsRepeating\": \"false\", \"DateType\": \"None\", \"FromNum\": 0, \"ObjectType\": \"Patient\", \"DateTimeEntry\": \"2022-10-07 11:17:41\", \"UserNum\": 1, \"DateTimeFinished\": \"0001-01-01 00:00:00\", \"PriorityDefNum\": 358, \"ReminderGroupId\": \"\", \"ReminderType\": \"NoReminder\", \"ReminderFrequency\": 0, \"DateTimeOriginal\": \"2022-10-07 11:17:41\", \"SecDateTEdit\": \"2022-10-07 11:17:59\", \"DescriptOverride\": \"\", \"IsReadOnly\": \"false\" } etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/tasks","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/tasks","host":["{{url_local}}{{version_api}}"],"path":["/tasks"],"query":null},"description":"Tasks POST (create) Version Added: 22.3.17 Creates a new task. See Task Window for more details on each field. TaskListNum: Required. tasklist.TaskListNum. Use TaskLists GET to find available TaskLists. Descript: Required. The description of this task. UserNum: Required. userod.UserNum. The user that created the task. KeyNum: Optional. Either patient.PatNum or appointment.AptNum. Used when ObjectType is \"Patient\" or \"Appointment\". Default 0. ObjectType: Optional, unless KeyNum is specified. Either \"None\", \"Patient\", or \"Appointment\". Default \"None\". DateTimeEntry: Optional. The date and time that this task was added. String in \"yyyy-MM-dd HH:mm:ss\". Default to Now. PriorityDefNum: Optional. Definition.DefNum where Category=33. Default is the dental office's default, if set, or the first definition in that Category. See Definitions: Task Priorities. DescriptOverride: Optional. \"Short Descript\" in UI. Limited to 256 characters. Example Request: POST /tasks { \"TaskListNum\": 3842, \"Descript\": \"Please attach the Insurance card and info for this patient.\", \"UserNum\": 12, \"KeyNum\": 73, \"ObjectType\": \"Patient\", \"DateTimeEntry\": \"2022-10-12 08:00:00\", \"PriorityDefNum\": 90, \"DescriptOverride\": \"Patient insurance task\" } Example Response: { \"TaskNum\": 9093, \"TaskListNum\": 3842, \"DateTask\": \"0001-01-01\", \"KeyNum\": 73, \"Descript\": \"Please attach the Insurance card and info for this patient.\", \"TaskStatus\": \"New\", \"IsRepeating\": \"false\", \"DateType\": \"None\", \"FromNum\": 0, \"ObjectType\": \"Patient\", \"DateTimeEntry\": \"2022-10-12 08:00:00\", \"UserNum\": 1, \"DateTimeFinished\": \"0001-01-01 00:00:00\", \"PriorityDefNum\": 90, \"ReminderGroupId\": \"\", \"ReminderType\": \"NoReminder\", \"ReminderFrequency\": 0, \"DateTimeOriginal\": \"2022-10-12 07:34:41\", \"SecDateTEdit\": \"2022-10-12 07:34:41\", \"DescriptOverride\": \"Patient insurance task\", \"IsReadOnly\": \"false\" } 201 Created 400 Bad Request (Invalid fields, etc) 404 NotFound (Patient not found, Appointment not found, etc)","body":{"mode":"raw","raw":"{ \"TaskListNum\": 3842, \"Descript\": \"Please attach the Insurance card and info for this patient.\", \"UserNum\": 12, \"KeyNum\": 73, \"ObjectType\": \"Patient\", \"DateTimeEntry\": \"2022-10-12 08:00:00\", \"PriorityDefNum\": 90, \"DescriptOverride\": \"Patient insurance task\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/tasks/6857","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/tasks/6857","host":["{{url_local}}{{version_api}}"],"path":["/tasks/6857"],"query":null},"description":"Tasks PUT (update) Version Added: 22.4.15 Updates an existing task by TaskNum. See Task Window for more details on each field. TaskNum: Required in the URL. Descript: Optional. The description of this task. Overwrites existing. KeyNum: Optional. Either patient.PatNum or appointment.AptNum. Used when ObjectType is \"Patient\" or \"Appointment\". ObjectType: Optional, unless KeyNum is specified. Either \"None\", \"Patient\", or \"Appointment\". DateTimeEntry: Optional. The date and time that this task was added. Also used for reminder tasks. String in \"yyyy-MM-dd HH:mm:ss\". PriorityDefNum: Optional. Definition.DefNum where Category=33. DescriptOverride: Optional. \"Short Descript\" in UI. Overwrites existing. Limited to 256 characters. Example Request: PUT /tasks/6857 { \"DateTimeEntry\": \"2023-01-12 08:00:00\", \"PriorityDefNum\": 90 } or { \"Descript\": \"Please attach the Insurance card and info for this patient.\", \"KeyNum\": 73, \"ObjectType\": \"Patient\", \"DateTimeEntry\": \"2023-01-12 08:00:00\", \"PriorityDefNum\": 90, \"DescriptOverride\": \"Patient insurance task\" } Example Response: { \"TaskNum\": 6857, \"TaskListNum\": 3842, \"DateTask\": \"0001-01-01\", \"KeyNum\": 73, \"Descript\": \"Please attach the Insurance card and info for this patient.\", \"TaskStatus\": \"New\", \"IsRepeating\": \"false\", \"DateType\": \"None\", \"FromNum\": 0, \"ObjectType\": \"Patient\", \"DateTimeEntry\": \"2023-01-12 08:00:00\", \"UserNum\": 1, \"DateTimeFinished\": \"0001-01-01 00:00:00\", \"PriorityDefNum\": 90, \"ReminderGroupId\": \"\", \"ReminderType\": \"NoReminder\", \"ReminderFrequency\": 0, \"DateTimeOriginal\": \"2023-01-10 08:23:36\", \"SecDateTEdit\": \"2023-01-11 07:34:41\", \"DescriptOverride\": \"Patient insurance task\", \"IsReadOnly\": \"false\" } 200 OK 400 Bad Request (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"DateTimeEntry\": \"2023-01-12 08:00:00\", \"PriorityDefNum\": 90 } or { \"Descript\": \"Please attach the Insurance card and info for this patient.\", \"KeyNum\": 73, \"ObjectType\": \"Patient\", \"DateTimeEntry\": \"2023-01-12 08:00:00\", \"PriorityDefNum\": 90, \"DescriptOverride\": \"Patient insurance task\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API TreatPlanAttaches","item":[{"name":"/treatplanattaches?TreatPlanNum=1845","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/treatplanattaches?TreatPlanNum=1845","host":["{{url_local}}{{version_api}}"],"path":["/treatplanattaches?TreatPlanNum=1845"],"query":null},"description":"TreatPlanAttaches GET Version Added: 22.4.16 Gets a list of treatplanattaches associated to a specified treatplan. Use TreatPlans GET to find the TreatPlanNum of an existing treatplan. TreatPlanNum: Required in the URL. FK to treatplan.TreatPlanNum. Example Request: GET /treatplanattaches?TreatPlanNum=1845 Example Response: [ { \"TreatPlanAttachNum\": 3211, \"TreatPlanNum\": 1845, \"ProcNum\": 1977, \"Priority\": 151, \"priority\": \"1\" }, { \"TreatPlanAttachNum\": 3222, \"TreatPlanNum\": 1845, \"ProcNum\": 11018, \"Priority\": 159, \"priority\": \"Recmend\" }, { \"TreatPlanAttachNum\": 3223, \"TreatPlanNum\": 1845, \"ProcNum\": 11017, \"Priority\": 148, \"priority\": \"Wait\" }, { \"TreatPlanAttachNum\": 3234, \"TreatPlanNum\": 1845, \"ProcNum\": 11005, \"Priority\": 0, \"priority\": \"\" }, etc... ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"TreatPlanAttachNum\": 3211, \"TreatPlanNum\": 1845, \"ProcNum\": 1977, \"Priority\": 151, \"priority\": \"1\" }, { \"TreatPlanAttachNum\": 3222, \"TreatPlanNum\": 1845, \"ProcNum\": 11018, \"Priority\": 159, \"priority\": \"Recmend\" }, { \"TreatPlanAttachNum\": 3223, \"TreatPlanNum\": 1845, \"ProcNum\": 11017, \"Priority\": 148, \"priority\": \"Wait\" }, { \"TreatPlanAttachNum\": 3234, \"TreatPlanNum\": 1845, \"ProcNum\": 11005, \"Priority\": 0, \"priority\": \"\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/treatplanattaches","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/treatplanattaches","host":["{{url_local}}{{version_api}}"],"path":["/treatplanattaches"],"query":null},"description":"TreatPlanAttaches POST Version Added: 23.2.17 Creates an association between a treatment plan and a procedure. TreatPlanNum: Required. FK to treatplan.TreatPlanNum. ProcNum: Required. FK to procedurelog.ProcNum. Priority: Optional. definition.DefNum where definition.Category=20. Default 0. Example Request: POST /treatplanattaches { \"TreatPlanNum\": 9, \"ProcNum\": 132, \"Priority\": 148 } Example Response: { \"TreatPlanAttachNum\": 70, \"TreatPlanNum\": 9, \"ProcNum\": 132, \"Priority\": 148, \"priority\": \"Wait\" } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"TreatPlanNum\": 9, \"ProcNum\": 132, \"Priority\": 148 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/treatplanattaches/70","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/treatplanattaches/70","host":["{{url_local}}{{version_api}}"],"path":["/treatplanattaches/70"],"query":null},"description":"TreatPlanAttaches PUT Version Added: 23.2.17 Updates the Priority on a treatplanattach. TreatPlanAttachNum: Required in the URL. Priority: definition.DefNum where definition.Category=20. Example Request: PUT /treatplanattaches/70 { \"Priority\": 149 } Example Response: { \"TreatPlanAttachNum\": 70, \"TreatPlanNum\": 9, \"ProcNum\": 132, \"Priority\": 149, \"priority\": \"Low\" } 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"Priority\": 149 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API TreatPlans","item":[{"name":"/treatplans?PatNum=1897&amp;TPStatus=Saved","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/treatplans?PatNum=1897&amp;TPStatus=Saved","host":["{{url_local}}{{version_api}}"],"path":["/treatplans?PatNum=1897&amp;TPStatus=Saved"],"query":null},"description":"TreatPlans GET Version Added: 22.4.16 Get a list of treatplans that meet a set of search criteria. Parameters: All optional. PatNum: patient.PatNum. SecDateTEdit : Only include TreatPlans with a SecDateTEdit altered after the specified date and time. String in \"yyyy-MM-dd HH:mm:ss\" format. TPStatus : Either \"Saved\", \"Active\", or \"Inactive\". Default all. Example Requests: GET /treatplans?PatNum=1897&TPStatus=Saved GET /treatplans?SecDateTEdit=2022-07-01%2005%3A30%3A00 Example Response: [ { \"TreatPlanNum\": 1786, \"PatNum\": 1897, \"DateTP\": \"0001-01-01\", \"Heading\": \"Active Treatment Plan\", \"Note\": \"Please read this carefully:\\nIf you have insurance, THIS IS AN ESTIMATE ONLY. Insurance might not pay what we expect.\\nEven if you pay your estimate ahead of time, you will still be responsible for any portion that insurance does not pay.\", \"ResponsParty\": 0, \"DocNum\": 0, \"TPStatus\": \"Active\", \"SecUserNumEntry\": 12, \"SecDateEntry\": \"2022-07-02\", \"SecDateTEdit\": \"2022-07-02 09:39:54\", \"UserNumPresenter\": 0, \"TPType\": \"Insurance\", \"DateTSigned\": \"0001-01-01 00:00:00\", \"DateTPracticeSigned\": \"0001-01-01 00:00:00\", \"SignatureText\": \"\", \"SignaturePracticeText\": \"\" }, { \"TreatPlanNum\": 1787, \"PatNum\": 1901, \"DateTP\": \"0001-01-01\", \"Heading\": \"Active Treatment Plan\", \"Note\": \"Please read this carefully:\\nIf you have insurance, THIS IS AN ESTIMATE ONLY. Insurance might not pay what we expect.\\nEven if you pay your estimate ahead of time, you will still be responsible for any portion that insurance does not pay.\", \"ResponsParty\": 0, \"DocNum\": 0, \"TPStatus\": \"Active\", \"SecUserNumEntry\": 12, \"SecDateEntry\": \"2022-07-02\", \"SecDateTEdit\": \"2022-07-02 10:32:51\", \"UserNumPresenter\": 0, \"TPType\": \"Insurance\", \"DateTSigned\": \"0001-01-01 00:00:00\", \"DateTPracticeSigned\": \"0001-01-01 00:00:00\", \"SignatureText\": \"\", \"SignaturePracticeText\": \"\" }, { \"TreatPlanNum\": 1788, \"PatNum\": 1906, \"DateTP\": \"0001-01-01\", \"Heading\": \"Saved Treatment Plan\", \"Note\": \"Please read this carefully:\\nIf you have insurance, THIS IS AN ESTIMATE ONLY. Insurance might not pay what we expect.\\nEven if you pay your estimate ahead of time, you will still be responsible for any portion that insurance does not pay.\", \"ResponsParty\": 0, \"DocNum\": 0, \"TPStatus\": \"Active\", \"SecUserNumEntry\": 13, \"SecDateEntry\": \"2022-07-02\", \"SecDateTEdit\": \"2022-07-02 11:39:54\", \"UserNumPresenter\": 0, \"TPType\": \"Insurance\", \"DateTSigned\": \"2022-07-02 11:39:54\", \"DateTPracticeSigned\": \"2022-07-02 11:39:54\", \"SignatureText\": \"Brandon Booter\", \"SignaturePracticeText\": \"Dr. Carl Moore\" }, etc... ] 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"[ { \"TreatPlanNum\": 1786, \"PatNum\": 1897, \"DateTP\": \"0001-01-01\", \"Heading\": \"Active Treatment Plan\", \"Note\": \"Please read this carefully:\\nIf you have insurance, THIS IS AN ESTIMATE ONLY. Insurance might not pay what we expect.\\nEven if you pay your estimate ahead of time, you will still be responsible for any portion that insurance does not pay.\", \"ResponsParty\": 0, \"DocNum\": 0, \"TPStatus\": \"Active\", \"SecUserNumEntry\": 12, \"SecDateEntry\": \"2022-07-02\", \"SecDateTEdit\": \"2022-07-02 09:39:54\", \"UserNumPresenter\": 0, \"TPType\": \"Insurance\", \"DateTSigned\": \"0001-01-01 00:00:00\", \"DateTPracticeSigned\": \"0001-01-01 00:00:00\", \"SignatureText\": \"\", \"SignaturePracticeText\": \"\" }, { \"TreatPlanNum\": 1787, \"PatNum\": 1901, \"DateTP\": \"0001-01-01\", \"Heading\": \"Active Treatment Plan\", \"Note\": \"Please read this carefully:\\nIf you have insurance, THIS IS AN ESTIMATE ONLY. Insurance might not pay what we expect.\\nEven if you pay your estimate ahead of time, you will still be responsible for any portion that insurance does not pay.\", \"ResponsParty\": 0, \"DocNum\": 0, \"TPStatus\": \"Active\", \"SecUserNumEntry\": 12, \"SecDateEntry\": \"2022-07-02\", \"SecDateTEdit\": \"2022-07-02 10:32:51\", \"UserNumPresenter\": 0, \"TPType\": \"Insurance\", \"DateTSigned\": \"0001-01-01 00:00:00\", \"DateTPracticeSigned\": \"0001-01-01 00:00:00\", \"SignatureText\": \"\", \"SignaturePracticeText\": \"\" }, { \"TreatPlanNum\": 1788, \"PatNum\": 1906, \"DateTP\": \"0001-01-01\", \"Heading\": \"Saved Treatment Plan\", \"Note\": \"Please read this carefully:\\nIf you have insurance, THIS IS AN ESTIMATE ONLY. Insurance might not pay what we expect.\\nEven if you pay your estimate ahead of time, you will still be responsible for any portion that insurance does not pay.\", \"ResponsParty\": 0, \"DocNum\": 0, \"TPStatus\": \"Active\", \"SecUserNumEntry\": 13, \"SecDateEntry\": \"2022-07-02\", \"SecDateTEdit\": \"2022-07-02 11:39:54\", \"UserNumPresenter\": 0, \"TPType\": \"Insurance\", \"DateTSigned\": \"2022-07-02 11:39:54\", \"DateTPracticeSigned\": \"2022-07-02 11:39:54\", \"SignatureText\": \"Brandon Booter\", \"SignaturePracticeText\": \"Dr. Carl Moore\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/treatplans","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/treatplans","host":["{{url_local}}{{version_api}}"],"path":["/treatplans"],"query":null},"description":"TreatPlans POST (create) Version Added: 23.2.13 Creates an inactive TreatPlan for a patient. Parameters: PatNum: Required. Heading: Optional. Default \"Inactive Treatment Plan\". Note: Optional. Defaults to the TreatmentPlanNote preference. TPType: Optional. Either \"Insurance\" or \"Discount\". If the patient is subscribed to a Discount Plan, this will default to \"Discount\". Otherwise, defaults to \"Insurance\". Example Request: POST /treatplans { \"PatNum\": 31, \"Heading\": \"Fillings\", \"Note\": \"ONLY AN ESTIMATE.\", \"TPType\": \"Insurance\" } Example Response: { \"TreatPlanNum\": 18, \"PatNum\": 31, \"DateTP\": \"0001-01-01\", \"Heading\": \"Fillings\", \"Note\": \"ONLY AN ESTIMATE.\", \"ResponsParty\": 0, \"DocNum\": 0, \"TPStatus\": \"Inactive\", \"SecUserNumEntry\": 0, \"SecDateEntry\": \"2023-08-10\", \"SecDateTEdit\": \"2023-08-10 12:18:12\", \"UserNumPresenter\": 0, \"TPType\": \"Insurance\", \"DateTSigned\": \"0001-01-01 00:00:00\", \"DateTPracticeSigned\": \"0001-01-01 00:00:00\", \"SignatureText\": \"\", \"SignaturePracticeText\": \"\" } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"PatNum\": 31, \"Heading\": \"Fillings\", \"Note\": \"ONLY AN ESTIMATE.\", \"TPType\": \"Insurance\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/treatplans/Saved","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/treatplans/Saved","host":["{{url_local}}{{version_api}}"],"path":["/treatplans/Saved"],"query":null},"description":"TreatPlans POST Saved Version Added: 23.2.22 Creates an unsigned Saved Treatment Plan from an existing Active or Inactive Treatment Plan. Parameters: TreatPlanNum: Required. Heading: Optional. Defaults to the heading of the supplied Treatment Plan. UserNumPresenter: Optional. FK to userod.UserNum. Default 0. Example Request: POST /treatplans/Saved { \"TreatPlanNum\": 138, \"Heading\": \"Saved Plan\", \"UserNumPresenter\": 5 } Example Response: { \"TreatPlanNum\": 138, \"PatNum\": 15, \"DateTP\": \"2023-09-22\", \"Heading\": \"Saved Plan\", \"Note\": \"If you have dental insurance, please be aware that THIS IS AN ESTIMATE ONLY. Coverage may be different if your deductible has not been met, annual maximum has been met, or if your coverage table is lower than average.\", \"ResponsParty\": 0, \"DocNum\": 0, \"TPStatus\": \"Saved\", \"SecUserNumEntry\": 0, \"SecDateEntry\": \"2023-09-22\", \"SecDateTEdit\": \"2023-09-22 14:45:35\", \"UserNumPresenter\": 5, \"TPType\": \"Insurance\", \"DateTSigned\": \"0001-01-01 00:00:00\", \"DateTPracticeSigned\": \"0001-01-01 00:00:00\", \"SignatureText\": \"\", \"SignaturePracticeText\": \"\" } 201 Created 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"TreatPlanNum\": 138, \"Heading\": \"Saved Plan\", \"UserNumPresenter\": 5 }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API UserGroups","item":[{"name":"/usergroups","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/usergroups","host":["{{url_local}}{{version_api}}"],"path":["/usergroups"],"query":null},"description":"UserGroups GET Version Added: 23.2.21 Gets a list of user groups, which can include CEMT user groups. See User Groups. includeCEMT: Optional. Either \"true\" or \"false\". Set to \"true\" to return usergroups that are designated as CEMT as well as those that are not. Default \"false\". Example Request: GET /usergroups GET /usergroups?includeCEMT=true Example Response: [ { \"UserGroupNum\": 1, \"Description\": \"Admin\", \"UserGroupNumCEMT\": 0 }, { \"UserGroupNum\": 3, \"Description\": \"Security\", \"UserGroupNumCEMT\": 3 }, { \"UserGroupNum\": 4, \"Description\": \"HR\", \"UserGroupNumCEMT\": 0 }, etc... ] 200 OK 400 Bad Request (with explanation)","body":{"mode":"raw","raw":"[ { \"UserGroupNum\": 1, \"Description\": \"Admin\", \"UserGroupNumCEMT\": 0 }, { \"UserGroupNum\": 3, \"Description\": \"Security\", \"UserGroupNumCEMT\": 3 }, { \"UserGroupNum\": 4, \"Description\": \"HR\", \"UserGroupNumCEMT\": 0 }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null},{"name":"API Userods","item":[{"name":"/userods","item":null,"description":null,"request":{"method":"GET","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/userods","host":["{{url_local}}{{version_api}}"],"path":["/userods"],"query":null},"description":"Userods GET Version Added: 21.3 Gets a list of users (called userod since \"user\" is a reserved word in mysql). Users are separate entities from Providers and Employees, although they can be linked. A user can be a provider, an employee, both, or neither. CEMT users are not included. includeHidden: (Added in version 22.4.24) Optional. Either \"true\" or \"false\". Set to \"true\" to return userods marked as hidden alongside those who are not hidden. Default \"false\". Returned fields are detailed below: EmployeeNum: Contains the employeeNum if the user is a employee. Otherwise, 0. employeeName: The first and last name of the employee. Blank if user is not an employee. ProviderNum: Contains the provNum if the user is a provider. Otherwise, 0. providerName: The full name of the provider, including suffix. Blank if user is not a provider. Example Requests: GET /userods GET /userods?includeHidden=true Example Response: [ { \"UserNum\": 1, \"UserName\": \"Lynda\", \"EmployeeNum\": 0, \"employeeName\": \"\", \"ClinicNum\": 1, \"ProviderNum\": 9, \"providerName\": \"Lynda Larson, DMD\", \"emailAddress\": \"LyndaLarson@email.com\", \"IsHidden\": \"false\" }, { \"UserNum\": 2, \"UserName\": \"Charlie\", \"EmployeeNum\": 3, \"employeeName\": \"Charles Sorenson\", \"ProviderNum\": 0, \"providerName\": \"\", \"ClinicNum\": 1, \"emailAddress\": \"Chuck@hotmail.com\", \"IsHidden\": \"true\" }, { \"UserNum\": 3, \"UserName\": \"Becca\", \"EmployeeNum\": 4, \"employeeName\": \"Becca Alexandria\", \"ProviderNum\": 6, \"providerName\": \"Becca Alexandria\", \"ClinicNum\": 2, \"emailAddress\": \"BAlexandria@gmail.com\", \"IsHidden\": \"false\" }, etc... ] 200 OK","body":{"mode":"raw","raw":"[ { \"UserNum\": 1, \"UserName\": \"Lynda\", \"EmployeeNum\": 0, \"employeeName\": \"\", \"ClinicNum\": 1, \"ProviderNum\": 9, \"providerName\": \"Lynda Larson, DMD\", \"emailAddress\": \"LyndaLarson@email.com\", \"IsHidden\": \"false\" }, { \"UserNum\": 2, \"UserName\": \"Charlie\", \"EmployeeNum\": 3, \"employeeName\": \"Charles Sorenson\", \"ProviderNum\": 0, \"providerName\": \"\", \"ClinicNum\": 1, \"emailAddress\": \"Chuck@hotmail.com\", \"IsHidden\": \"true\" }, { \"UserNum\": 3, \"UserName\": \"Becca\", \"EmployeeNum\": 4, \"employeeName\": \"Becca Alexandria\", \"ProviderNum\": 6, \"providerName\": \"Becca Alexandria\", \"ClinicNum\": 2, \"emailAddress\": \"BAlexandria@gmail.com\", \"IsHidden\": \"false\" }, etc... ]","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/userods","item":null,"description":null,"request":{"method":"POST","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/userods","host":["{{url_local}}{{version_api}}"],"path":["/userods"],"query":null},"description":"Userods POST (create) Version Added: 22.1 UserName: Required. Must be unique. Cannot end with whitespace. UserGroupNum: Required. Obtain this separately with a query. In the response, only the UserGroupNum used in the POST is returned even though users can belong to multiple user groups. Password: Required. Strong password is required, so it must be at least 8 characters and have at least one number, one uppercase letter, and one lowercase letter. If the office preference is turned on for requiring special characters, it must also contain a symbol such as $, #, >. Example Request: POST /userods { \"UserName\": \"Sally\", \"UserGroupNum\": 2, \"Password\": \"My1password\" } Example Response: { \"UserNum\": 7, \"UserName\": \"Sally\", \"EmployeeNum\": 0, \"employeeName\": \"\", \"ProviderNum\": 0, \"providerName\": \"\", \"ClinicNum\": 0, \"emailAddress\": \"\", \"IsHidden\": \"false\", \"UserGroupNum\": 2, \"Password\": \"My1password\" } 201 Created 400 Bad Request (with explanation) 404 Not Found (with explanation)","body":{"mode":"raw","raw":"{ \"UserName\": \"Sally\", \"UserGroupNum\": 2, \"Password\": \"My1password\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null},{"name":"/userods/2","item":null,"description":null,"request":{"method":"PUT","header":[{"key":"Authorization","value":"{{token_auth}}","type":"default"}],"url":{"raw":"{{url_local}}{{version_api}}/userods/2","host":["{{url_local}}{{version_api}}"],"path":["/userods/2"],"query":null},"description":"Userods PUT (update) Version Added: 22.4.20 Updates an existing user. UserNum: Required in the URL. EmployeeNum: Optional. EmployeeNum for an employee. ProviderNum: Optional. ProvNum for a provider. ClinicNum: Optional. ClinicNum for a clinic. IsHidden: Optional. Either \"true\" or \"false\". Example Request: PUT /userods/2 { \"IsHidden\": \"true\" } or { \"EmployeeNum\": 3, \"ProviderNum\": 2, \"ClinicNum\": 1, \"IsHidden\": \"false\" } Example Response: { \"UserNum\": 2, \"UserName\": \"User\", \"EmployeeNum\": 3, \"employeeName\": \"Beth Assistant\", \"ProviderNum\": 2, \"providerName\": \"Tina Jones\", \"ClinicNum\": 1, \"emailAddress\": \"\", \"IsHidden\": \"false\" } 200 OK 400 BadRequest (with explanation) 404 NotFound (with explanation)","body":{"mode":"raw","raw":"{ \"IsHidden\": \"true\" }","options":{"raw":{"language":"json"}}}},"response":null,"protocolProfileBehavior":null}],"description":null,"request":null,"response":null,"protocolProfileBehavior":null}]}